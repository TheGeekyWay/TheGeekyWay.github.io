<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Geeky Way</title><link href="//thegeekyway.com/" rel="alternate"></link><link href="//thegeekyway.com/feed/all.atom.xml" rel="self"></link><id>//thegeekyway.com/</id><updated>2019-08-24T01:12:53+05:30</updated><entry><title>List of few tags that are supported in HTML5</title><link href="//thegeekyway.com/few-tags-now-supported-html5/" rel="alternate"></link><published>2019-08-24T01:12:53+05:30</published><updated>2019-08-24T01:12:53+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2019-08-24:/few-tags-now-supported-html5/</id><summary type="html">&lt;p&gt;Hi everyone, some of you might be new to web development, so you must have thought that what is HTML5, how is it different from previous versions, what is new in HTML5.&lt;br&gt;
In this article we will be discussing about the new tags which are now there in HTML5 but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi everyone, some of you might be new to web development, so you must have thought that what is HTML5, how is it different from previous versions, what is new in HTML5.&lt;br&gt;
In this article we will be discussing about the new tags which are now there in HTML5 but were not there in previous versions of HTML.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;article tag&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This tag specifies an article which contains independent content. It doesn't co-relate to any other paragraph.&lt;br&gt;
This tag is supported IE 9+, Firefox, Opera, Chrome, and Safari.  &lt;/p&gt;
&lt;iframe height="265" style="width: 100%;" scrolling="no" title="iyqxF" src="//codepen.io/Deep_Singh/embed/iyqxF/?height=265&amp;theme-id=0&amp;default-tab=html,result" frameborder="no" allowtransparency="true" allowfullscreen="true"&gt;
  See the Pen &lt;a href='https://codepen.io/Deep_Singh/pen/iyqxF/'&gt;iyqxF&lt;/a&gt; by Deep Singh
  (&lt;a href='https://codepen.io/Deep_Singh'&gt;@Deep_Singh&lt;/a&gt;) on &lt;a href='https://codepen.io'&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;

&lt;ol&gt;
&lt;li&gt;aside tag&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This tag is supported IE 9+, Firefox, Opera, Chrome, and Safari.&lt;/p&gt;
&lt;iframe height="265" style="width: 100%;" scrolling="no" title="kCsJq" src="//codepen.io/Deep_Singh/embed/kCsJq/?height=265&amp;theme-id=0&amp;default-tab=html,result" frameborder="no" allowtransparency="true" allowfullscreen="true"&gt;
  See the Pen &lt;a href='https://codepen.io/Deep_Singh/pen/kCsJq/'&gt;kCsJq&lt;/a&gt; by Deep Singh
  (&lt;a href='https://codepen.io/Deep_Singh'&gt;@Deep_Singh&lt;/a&gt;) on &lt;a href='https://codepen.io'&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;

&lt;ol&gt;
&lt;li&gt;audio tag&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It defines music, audio and other strams.&lt;/p&gt;
&lt;p&gt;This tag is supported IE 9+, Firefox, Opera, Chrome, and Safari.
Firefox supports mp3&lt;/p&gt;
&lt;iframe height="265" style="width: 100%;" scrolling="no" title="Sample audio tag" src="//codepen.io/jfreyre/embed/bIdvi/?height=265&amp;theme-id=0&amp;default-tab=html,result" frameborder="no" allowtransparency="true" allowfullscreen="true"&gt;
  See the Pen &lt;a href='https://codepen.io/jfreyre/pen/bIdvi/'&gt;Sample audio tag&lt;/a&gt; by Freyre
  (&lt;a href='https://codepen.io/jfreyre'&gt;@jfreyre&lt;/a&gt;) on &lt;a href='https://codepen.io'&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;</content></entry><entry><title>Understanding Event Dispatching Thread in Java</title><link href="//thegeekyway.com/edt_java/" rel="alternate"></link><published>2019-08-24T01:11:30+05:30</published><updated>2019-08-24T01:11:30+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2019-08-24:/edt_java/</id><summary type="html">&lt;p&gt;Swing provides a rich toolkit of GUI components which can be used to create powerful User Interface. Sometimes, we don’t get expected results when we are working on complex GUI &amp;amp; try to update GUI of that running application. From &lt;strong&gt;running application&lt;/strong&gt; we mean that we have a Swing application …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Swing provides a rich toolkit of GUI components which can be used to create powerful User Interface. Sometimes, we don’t get expected results when we are working on complex GUI &amp;amp; try to update GUI of that running application. From &lt;strong&gt;running application&lt;/strong&gt; we mean that we have a Swing application running and we update something in the app while it is running. There are some rules (as per API documentation), which if followed correctly, can lead to expected results in a GUI application.&lt;/p&gt;
&lt;p&gt;A normal swing application is started within the event dispatching thread in this way :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ConstructorOfClass&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt;   
    &lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;According to Oracle Documentation, when a Swing Application starts, two threads start running : &lt;strong&gt;Main Thread&lt;/strong&gt;  and &lt;strong&gt;Event Dispatching Thread (EDT) .&lt;/strong&gt; The ED thread consists of the code related to GUI of the application. The main thread just executes the logic of the application, but whenever GUI needs to be updated, it must be passed to the EDT. The usual way of calling code inside EDT is :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/*       EDT code here like updating label, button&lt;/span&gt;
&lt;span class="cm"&gt;         or some other work related to GUI updation&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So if we are calculating something and after that we need to update some component in GUI, we will write the GUI updation code inside the &lt;strong&gt;run&lt;/strong&gt; method as shown above. SwingUtilities's invokeLater method takes Runnable objects and executes them one by one on a single thread (EDT) so that their is no ambiguity related to updation of GUI. In contrast to this approach, if we write the GUI updation code in some other thread (or even main thread), we may not get expected results.This is so because many Swing methods are not thread-safe.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thread Safety&lt;/strong&gt; : Thread safe simply means that it may be used from multiple threads at the same time without causing problems. This can mean that access to any resources are synchronized.This is given in API documentation that &lt;strong&gt;all GUI updation should be strictly done in only one thread called the Event Dispatching Thread.&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;</content><category term="java"></category></entry><entry><title>Few terms in C++</title><link href="//thegeekyway.com/data-file-handling-in-c/" rel="alternate"></link><published>2019-08-24T01:10:55+05:30</published><updated>2019-08-24T01:10:55+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2019-08-24:/data-file-handling-in-c/</id><summary type="html">&lt;p&gt;Howdy Coders!  &lt;/p&gt;
&lt;p&gt;Well, today we will learn about a few terms related to File Handling in C++.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stream :-&lt;/strong&gt; A sequence of bytes  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;File:&lt;/strong&gt; A collection of data or information stored on some media with some specific name is called file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Text File :-&lt;/strong&gt; The file which stores data or information in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Howdy Coders!  &lt;/p&gt;
&lt;p&gt;Well, today we will learn about a few terms related to File Handling in C++.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stream :-&lt;/strong&gt; A sequence of bytes  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;File:&lt;/strong&gt; A collection of data or information stored on some media with some specific name is called file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Text File :-&lt;/strong&gt; The file which stores data or information in ASCII characters. In text file each line is terminated with a special character “n” or endl (end of line) character also known as delimiter character.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Binary File :-&lt;/strong&gt; It is a file that contains information in the same format as it is stored in the memory. In binary file no delimiter character is used. The records are separated by record size.&lt;/p&gt;</content></entry><entry><title>Ansible?</title><link href="//thegeekyway.com/ansible/" rel="alternate"></link><published>2019-08-24T00:58:20+05:30</published><updated>2019-08-24T00:58:20+05:30</updated><author><name>storymode7</name></author><id>tag:thegeekyway.com,2019-08-24:/ansible/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Ansible Logo" src="//thegeekyway.com/uploads/images/2019/08/ansible_logo.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Hearing about Ansible lately? Everyone's using it! But what's the buzz about, what is ansible actually? And why should you use it? Lot's of questions and lot's of answers. Let's dive!&lt;/p&gt;
&lt;!--more--&gt;

&lt;h2&gt;What is it?&lt;/h2&gt;
&lt;p&gt;Well Ansible is a tool to automate the setup of an EC2 instance, a vagrant box …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Ansible Logo" src="//thegeekyway.com/uploads/images/2019/08/ansible_logo.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Hearing about Ansible lately? Everyone's using it! But what's the buzz about, what is ansible actually? And why should you use it? Lot's of questions and lot's of answers. Let's dive!&lt;/p&gt;
&lt;!--more--&gt;

&lt;h2&gt;What is it?&lt;/h2&gt;
&lt;p&gt;Well Ansible is a tool to automate the setup of an EC2 instance, a vagrant box, and almost anything that you can ssh into.&lt;/p&gt;
&lt;h2&gt;What's the usecase?&lt;/h2&gt;
&lt;p&gt;Imagine you've to setup an instance and use it as a server using nginx. Simple, right? Just ssh into it, do the nginx conf and leave it running. But wait, you did the setup on say an Ubuntu instance, but for some reasons, you have to change your server OS, to something like a Fedora may be? Or an Amazon linux? Now, you need to repeat all the steps you just did for ubuntu setup to perform the exactly same task. Another usecase is to setup multiple instances automatically, all you need to define is the tasks, roles etc. for Ansible. We'll be getting to it shortly.&lt;/p&gt;
&lt;h2&gt;Installing Ansible&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install ansible&lt;/code&gt; should do just fine. Or &lt;code&gt;dnf&lt;/code&gt; in place of &lt;code&gt;apt-get&lt;/code&gt; for RHEL. Interestingly, you don't need to install ansible on the target machine! You just install it on your local machine once. And just exploit it using the tasks you define. This is because Ansible basically just SSH into your remote machine, and executes task if required.&lt;/p&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;We'll start with doing everything in a get it done way. And then move to the way of how it should be done. Firstly you define the target(s) to act upon. This is called the inventory. You can name this file anything, inventory, hosts, instances, etc. it's upto you. In this file, type in the IPs of the instances you wish to control in format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[name]&lt;/span&gt;
&lt;span class="na"&gt;0.0.0.1 ansible_user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ubuntu&amp;#39; ansible_ssh_private_key_file=&amp;#39;path/to/privateKey/for/server&amp;#39;&lt;/span&gt;
&lt;span class="na"&gt;0.0.1.2 ansible_user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;userName_to_login_as&amp;#39; ansible_ssh_private_key_file=&amp;#39;path/to/private/key&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can access these IPs using the *name* you provided. If you want to test this on vagrant, write an inventory file in the format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[vag]&lt;/span&gt;
&lt;span class="na"&gt;127.0.0.1 ansible_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;2222 ansible_user=&amp;#39;vagrant&amp;#39; ansible_ssh_private_key_file=&amp;#39;/path/toVagrantfile/.vagrant/machines/default/virtualbox/private_key&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you wish, you can follow along by performing the commands on your machine instead of a server too.
Using localhost:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[me]&lt;/span&gt;
&lt;span class="na"&gt;localhost ansible_connection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;local&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, if you wish to use localhost, just use &lt;code&gt;me&lt;/code&gt; in place of &lt;code&gt;vag&lt;/code&gt;/&lt;code&gt;groupName&lt;/code&gt;.&lt;br&gt;
If the inventory is ready we can begin executing the commands!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Though most of the commands used in this blog are non destructive and would not change anything in your PC to cause problems. Caution should be excercised when hacking through the different commands on your own. Especially if the target machine hosts important data, or you are performing all the commands on your localhost&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you get an error/warning related to usage of python2 interpreter, you can create a file &lt;code&gt;ansible.cfg&lt;/code&gt; and specify python3 interpreter by writing this in the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[defaults]&lt;/span&gt;
&lt;span class="na"&gt;interpreter_python&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/usr/bin/python3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Executing some commands&lt;/h2&gt;
&lt;p&gt;Ansible can work only when the target machine is ready to ssh, and the credentials provided in the inventory file are correct. Now that ansible knows how to authenticate itself to the machines, it'll have no problems executing any commands.&lt;/p&gt;
&lt;p&gt;A little idea about Modules and arguments, and we are ready to go.&lt;/p&gt;
&lt;p&gt;Modules are small pieces of python code, that ansible uses to handle resources on the target machine. And some modules require arguments to act upon. Let's see first an example that doesn't require an argument.&lt;/p&gt;
&lt;p&gt;Ping module. Since we have already provided the inventory file, we don't need to provide ansible with the IPs of the instances to ping.&lt;/p&gt;
&lt;p&gt;We can simply do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;inventory_file&lt;/span&gt; &lt;span class="n"&gt;groupName&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;ping&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;groupName, like we provided &lt;code&gt;vag&lt;/code&gt; in the inventory file example above. It's just a collection of IPs or domains along with their options under one name.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-m&lt;/code&gt;: states that we're going to use a module Whose name in this case is ping&lt;/p&gt;
&lt;p&gt;If you've provided inventory file and group name correctly you should get an output like:&lt;br&gt;
&lt;code&gt;default | SUCCESS =&amp;gt; {     "changed": false,     "ping": "pong" }&lt;/code&gt;&lt;br&gt;
Congratulations, you just executed your first command using ansible.&lt;/p&gt;
&lt;p&gt;Now let's try one example which takes an argument. How about a Hello World sample? For this we're going to use &lt;code&gt;shell&lt;/code&gt; module.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="n"&gt;groupName&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;echo Hello World!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output comes out to be:&lt;br&gt;
&lt;code&gt;default | SUCCESS | rc=0 &amp;gt;&amp;gt; Hello World!&lt;/code&gt;&lt;br&gt;
Let's try one last thing, installing a package. We'll be using apt module.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="n"&gt;groupName&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;name=nginx state=present update_cache=true&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The argument here is self explanatory. apt module, takes arguments name, state mainly. Name states which package to act upon, and state tells what action is needed to be performed if any. This makes sure idempotence is there. Means, the same action performed repeatedly should not alter the state of the resource. state can be absent, present, latest, etc.&lt;/p&gt;
&lt;p&gt;Update_cache is suggested because most of the images used to setup an instance would require you to update repository cache before you install anything.&lt;/p&gt;
&lt;p&gt;This command should give you an error&lt;br&gt;
&lt;code&gt;default | FAILED! =&amp;gt; {     "changed": false,     "msg": "Failed to lock apt for exclusive operation" }&lt;/code&gt;&lt;br&gt;
And that is because the default user doesn't have enough privileges. For privilege escalation, we need to supply another flag. &lt;code&gt;-b&lt;/code&gt; .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="n"&gt;groupName&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;name=nginx state=present update_cache=true&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;-b&lt;/code&gt; or &lt;code&gt;--become&lt;/code&gt; tells ansible whether to activate or deactivate privilege escalation. Default for privilege escalation is root, and hence the command will be executed as root. But you can also specify another user, as whom you'd like to execute the command. This can be done using &lt;code&gt;--become-user userName&lt;/code&gt; . Note that, if you the target system has requires a password, you need to pass &lt;code&gt;-K&lt;/code&gt; flag to ask for become pass.&lt;/p&gt;
&lt;p&gt;Now the terminal will take time depending on the internet connection available to the target machine and will generate output like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SUCCESS&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
     &lt;span class="ss"&gt;&amp;quot;cache_update_time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1526681063&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;&amp;quot;cache_updated&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;&amp;quot;changed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;&amp;quot;stderr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;&amp;quot;stderr_lines&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
     &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In every output the value for&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;changed&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;variable is the gist of success or failure. This and the color of the output are enough to denote unchanged, changed, failure.&lt;/p&gt;
&lt;p&gt;But ansible can do a lot more. This method is easy if you need to run one single module. But this is often not the case. You'd almost always require a collection of modules to setup a target machine. To see how many modules ansible provides head on to &lt;a href="http://docs.ansible.com/ansible/latest/modules/modules_by_category.html"&gt;this&lt;/a&gt; page. In that case giving arguments to ansible command wont be the best choice. Now enters ansible playbook.&lt;/p&gt;
&lt;h2&gt;Ansible playbook&lt;/h2&gt;
&lt;p&gt;Playbook is like a collection of ansible commands put together in a single YAML file. We performed 3 tasks all unrelated, but in case of a setup used to install and configure a single package inside the target machine, like setting up nginx, would require more tasks. And it'd be more logical to group all of them in a single playbook. Let's create a simple playbook, to say hello world, and then we'll move to installing nginx using playbook.&lt;/p&gt;
&lt;h3&gt;A bit of YAML&lt;/h3&gt;
&lt;p&gt;Before typing out your first YAML, let's just get a basic idea of it's syntax. These syntax basics have nothing specific with ansible. These basics will be same in every YAML file, so if you are already familiar with it's syntax, feel free to skip to the playbook part.&lt;/p&gt;
&lt;p&gt;A YAML file can optionally begin with &lt;code&gt;---&lt;/code&gt; (triple dash) and end with &lt;code&gt;...&lt;/code&gt; (triple dot)&lt;br&gt;
&lt;code&gt;#&lt;/code&gt; before any line comments it.&lt;br&gt;
A list is represented by lines starting with a &lt;code&gt;-&lt;/code&gt; at same indentation level. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---&lt;/span&gt;
&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;four&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And a dictionary is represented like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---&lt;/span&gt;
&lt;span class="n"&gt;name_of_dictionary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;key1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value1&lt;/span&gt;
    &lt;span class="n"&gt;key2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value2&lt;/span&gt; 
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now there can be combinations of keys, dictionaries. Let's do one example of list of dictionary that is used in playbooks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dictionary1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="n"&gt;key1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value1&lt;/span&gt;
     &lt;span class="n"&gt;key2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value2&lt;/span&gt;
     &lt;span class="n"&gt;key3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dictionary2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="n"&gt;key4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value4&lt;/span&gt;
     &lt;span class="n"&gt;key5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value5&lt;/span&gt;
     &lt;span class="n"&gt;key6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we have a list of dictionaries, dictionary1 and dictionary2. In these dictionaries, some of the values are themselves a list. Like key3 in dictionary1 and key6 in dictionary2.&lt;/p&gt;
&lt;p&gt;If you're a pythonista, there's another format that'd be more familiar to you:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---&lt;/span&gt;
&lt;span class="n"&gt;dictionary1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;key1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;list1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There's whole lot of other details that you might like to have a glance. They are available with the &lt;a href="http://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html"&gt;ansible documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Back to the playbooks&lt;/h3&gt;
&lt;p&gt;Let's create the playbook 'nginx.yml' now, and then we'll see that in detail:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;vag&lt;/span&gt;
  &lt;span class="n"&gt;become&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
  &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Install&lt;/span&gt; &lt;span class="n"&gt;Nginx&lt;/span&gt;
      &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
        &lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;present&lt;/span&gt;
        &lt;span class="n"&gt;update_cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is just the playbook version of the bash command we performed earlier using ansible to install nginx.&lt;/p&gt;
&lt;p&gt;First let's see what each key means and then we'll run this playbook.&lt;/p&gt;
&lt;p&gt;We can perform a lot of tasks for different hosts defined in the inventory, inside a single playbook. We can have a list of dictionaries, and depending upon the hosts specified, the tasks will be executed for that specific host. If you want to perform the tasks for all the hosts defined in the inventory file, you can also give the value &lt;code&gt;all&lt;/code&gt; for hosts key. Here we are considering the host &lt;code&gt;vag&lt;/code&gt; we defined previously in the inventory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;become&lt;/code&gt; is required to use apt. Otherwise, we'd come across an error (as we did while executing directly using bash). Note that, &lt;code&gt;yes&lt;/code&gt; is just one of the ways to provide a boolean value. You can specify &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt; and so on...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tasks&lt;/code&gt; is again a list of dictionaries defining the tasks we want to perform against the target machine.&lt;br&gt;
Inside tasks, the first key is &lt;code&gt;name&lt;/code&gt; , we can name it anything, this will be shown when we run the playbook, so keep the name quite descriptive.&lt;br&gt;
Secondly we specify the module to use for this first task. Here &lt;code&gt;apt&lt;/code&gt; is used.&lt;br&gt;
Now we are supplying arguments to &lt;code&gt;apt&lt;/code&gt; using YAML syntax, values are same as we did while executing from terminal. The arguments are just key value pair, where the module name acts as dictionary name.&lt;/p&gt;
&lt;p&gt;You can also specify &lt;code&gt;latest&lt;/code&gt; as a value to &lt;code&gt;state&lt;/code&gt; key. This will update the package too, if an update comes. Whereas &lt;code&gt;present&lt;/code&gt; would just ensure that the package is installed on the target machine.&lt;/p&gt;
&lt;p&gt;Run the playbook using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;playbook&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is same as the single line command we performed earlier, just that we have a named task here. Output here will be similar to this:
(If you are trying this on your local machine, you might need to pass a : &lt;code&gt;--ask-become-pass&lt;/code&gt; or &lt;code&gt;-K&lt;/code&gt; as a flag to &lt;code&gt;ansible-playbook&lt;/code&gt; command.)&lt;/p&gt;
&lt;pre&gt;PLAY [me] **********...

TASK [Gathering Facts] **********...
&lt;font color="#4E9A06"&gt;ok: [vag]&lt;/font&gt;

TASK [Install Nginx] **********...
&lt;font color="#C4A000"&gt;changed: [vag]&lt;/font&gt;

PLAY RECAP **********...
&lt;font color="#C4A000"&gt;vag&lt;/font&gt;                  : &lt;font color="#4E9A06"&gt;ok=2   &lt;/font&gt; &lt;font color="#C4A000"&gt;changed=1   &lt;/font&gt; unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

&lt;/pre&gt;

&lt;p&gt;Now you got a playbook running, you can add more tasks, find more modules and hack through.
Bigger projects even have a playbook spread over folders, where, tasks, defaults, vars, etc. all have a separate folder and a main.yml in each of them. &lt;/p&gt;
&lt;p&gt;Hope this will get you started on ansible.&lt;/p&gt;
&lt;p&gt;Thanks a lot for reading!&lt;/p&gt;</content></entry><entry><title>MD5 Hashing using C#</title><link href="//thegeekyway.com/md5-hashing-using-c/" rel="alternate"></link><published>2019-08-24T00:46:59+05:30</published><updated>2019-08-24T00:46:59+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2019-08-24:/md5-hashing-using-c/</id><summary type="html">&lt;p&gt;Its common now a days that all the passwords are being encrypted in order to prevent data theft. So the passwords are being encrypted, the most common and most secure encryption method is MD5 hashing.&lt;br&gt;
&lt;strong&gt;MD5&lt;/strong&gt; hashing stands for Message Digest algorithm 5. The idea of MD5 algorithm is to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Its common now a days that all the passwords are being encrypted in order to prevent data theft. So the passwords are being encrypted, the most common and most secure encryption method is MD5 hashing.&lt;br&gt;
&lt;strong&gt;MD5&lt;/strong&gt; hashing stands for Message Digest algorithm 5. The idea of MD5 algorithm is to convert all the string/char/integer into a fixed “32″ bit hexadecimal code. The input can be of any size, but the output will always be fixed, here is an example of MD5 hashing algorithm.&lt;/p&gt;
&lt;p&gt;&lt;img alt="MD5 hashing algorithm" src="http://thegeekyway.com/uploads/images/2014/03/MD5-hashing-algorithm.png"&gt;&lt;/p&gt;
&lt;p&gt;The main point is that whatever the length of the input is, the output will always be of “32″ bit. The namespace used is &lt;strong&gt;System.Security.Cryptography&lt;/strong&gt; and the assembly used is &lt;strong&gt;mscorlib (in mscorlib.dll)&lt;/strong&gt;.&lt;br&gt;
The first step in creating a MD5 encryption using C# is :-  &lt;/p&gt;
&lt;h2&gt;Step 1 : Include the required namespace.&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Security&lt;/span&gt;.&lt;span class="nv"&gt;Cryptography&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt;&lt;span class="c1"&gt;;// for stringbuilder class&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step 2 : Create an object of MD5 class.&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="n"&gt;md5H&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;MD5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step 3 : Convert the string into byte array and compute its hash.&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;md5H&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ComputeHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;Encoding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step 4 : Loop through each byte of hashed data and format each one as a hexadecimal string&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;i&amp;lt;data.Length;i++){&lt;/span&gt;
&lt;span class="nv"&gt;sBuilder&lt;/span&gt;.&lt;span class="nv"&gt;Append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;].&lt;span class="nv"&gt;ToString&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;x2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The whole combined C# coding is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Collections&lt;/span&gt;.&lt;span class="nv"&gt;Generic&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Linq&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;.&lt;span class="nv"&gt;WebControls&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Security&lt;/span&gt;.&lt;span class="nv"&gt;Cryptography&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
 &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;partial&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;MD5Hashing&lt;/span&gt;:&lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;.&lt;span class="nv"&gt;Page&lt;/span&gt;
 {
      &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;MD5Hash&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
     {
         &lt;span class="nv"&gt;MD5&lt;/span&gt; &lt;span class="nv"&gt;md5H&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;MD5&lt;/span&gt;.&lt;span class="nv"&gt;Create&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
         &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;convert&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;byte&lt;/span&gt; &lt;span class="nv"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;compute&lt;/span&gt; &lt;span class="nv"&gt;its&lt;/span&gt; &lt;span class="nv"&gt;hash&lt;/span&gt;
         &lt;span class="nv"&gt;byte&lt;/span&gt;[]&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;md5H&lt;/span&gt;.&lt;span class="nv"&gt;ComputeHash&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Encoding&lt;/span&gt;.&lt;span class="nv"&gt;UTF8&lt;/span&gt;.&lt;span class="nv"&gt;GetBytes&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
         &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;create&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;stringbuilder&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;collect&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;bytes&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;create&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
         &lt;span class="nv"&gt;StringBuilder&lt;/span&gt; &lt;span class="nv"&gt;sB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;StringBuilder&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
         &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="nv"&gt;through&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt; &lt;span class="nv"&gt;byte&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;hashed&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;format&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt; &lt;span class="nv"&gt;one&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;hexadecimal&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
         &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;i&amp;lt;data.Length;i++){&lt;/span&gt;
             &lt;span class="nv"&gt;sB&lt;/span&gt;.&lt;span class="nv"&gt;Append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;].&lt;span class="nv"&gt;ToString&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;x2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
         }
         &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;hexadecimal&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;sB&lt;/span&gt;.&lt;span class="nv"&gt;ToString&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     }
 }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="MD5 hashing output" src="http://thegeekyway.com/uploads/images/2014/03/MD5-hashing-output.png"&gt;&lt;/p&gt;</content><category term="C#"></category><category term="programming"></category></entry><entry><title>Hail GraphQL</title><link href="//thegeekyway.com/hail-graphql/" rel="alternate"></link><published>2019-08-12T12:00:00+05:30</published><updated>2019-08-12T12:00:00+05:30</updated><author><name>storymode7</name></author><id>tag:thegeekyway.com,2019-08-12:/hail-graphql/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="GraphQL Logo" src="//thegeekyway.com/uploads/images/2019/08/graphql-logo.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We start with basics, but then we've to upgrade. But why? Because the latest solution to the old problem is more elegant and much faster! To me, it happened to be GraphQL. It's a query language that follows you. The mantra? The structure remains the same. Let's see how we …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="GraphQL Logo" src="//thegeekyway.com/uploads/images/2019/08/graphql-logo.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We start with basics, but then we've to upgrade. But why? Because the latest solution to the old problem is more elegant and much faster! To me, it happened to be GraphQL. It's a query language that follows you. The mantra? The structure remains the same. Let's see how we can get started with GraphQL using GitHub's API as an example.&lt;/p&gt;
&lt;!--more--&gt;

&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;I was working on &lt;a href="https://github.com/CuriousLearner/CPython-Pull-Requests"&gt;CPython-Pull-Requests&lt;/a&gt;, which queries GitHub to show files and a list of PRs opened against them. (Want to check it out? &lt;a href="https://cpython-pulls.herokuapp.com/"&gt;Go here&lt;/a&gt;)
Previous work by &lt;a href="https://github.com/csabella"&gt;Cheryl Sabella&lt;/a&gt; was awesome. But it could do with a few touchups. Which &lt;a href="https://github.com/CuriousLearner/"&gt;CuriousLearner&lt;/a&gt; and &lt;a href="https://github.com/storymode7/"&gt;me&lt;/a&gt; and &lt;a href="https://github.com/geekyshacklebolt"&gt;GeekyShacklebolt&lt;/a&gt; did.
The previous version had one big drawback. It took ~10 minutes to get all the relevant data from GitHub.
That was because GitHub's REST API got much more data than what we required. Then we were advised to use GraphQL. 
And guess what? The query takes ~27 Seconds now!&lt;/p&gt;
&lt;h2&gt;What is GraphQL&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt; is a Query Language (The QL in GraphQL) and is used to fetch data from servers. But what makes it different is how you query the server. Your query has the same structure as that of your required response. And due to this you only get what you ask. Nothing extra.&lt;/p&gt;
&lt;h2&gt;GitHub terminologies&lt;/h2&gt;
&lt;h3&gt;Object&lt;/h3&gt;
&lt;p&gt;Object means resources that you can access. An object has related connections. The connections have multiple edges all reaching to a different node. Examples of objects are repositories, issues, gists, blames, etc.
Complete list: &lt;a href="https://developer.github.com/v4/object/"&gt;https://developer.github.com/v4/object/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Connection&lt;/h3&gt;
&lt;p&gt;Connection allows you to query for related objects. Like &lt;a href="https://developer.github.com/v4/object/repository/"&gt;here&lt;/a&gt; you can see a list of connections available under the repository object.&lt;/p&gt;
&lt;h3&gt;Edge&lt;/h3&gt;
&lt;p&gt;A link between nodes. You need to go through an edge to a node. But since an edge will always take you to a node so you don't need to specify edge in your query. Though providing edge isn't wrong. It clarifies the meaning. But since it's obvious, it's optional.
Like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;edge&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;stuff&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example: &lt;a href="https://developer.github.com/v4/object/repositoryedge/"&gt;RepositoryEdge&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Nodes&lt;/h3&gt;
&lt;p&gt;Objects, node, and fields are sometimes used interchangeably. But what helps me clarify node is that &lt;code&gt;node&lt;/code&gt; is the final part of your query that returns some scalar(A value with the base data type. Like Int, String, Boolean). Each node should return a scalar. If it does not, you have to include subfields until they return scalars.
In a node, you can specify what fields you require. Remember that the final field that is returned inside a node should be a scalar.&lt;/p&gt;
&lt;p&gt;NOTE: To find various fields, connections, nodes you can refer here &lt;a href="https://developer.github.com/v4/query/"&gt;https://developer.github.com/v4/query/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Enough talk. Let's get started!&lt;/h2&gt;
&lt;p&gt;What better way to understand something new than to see it work, play with it. Let's take the one I used (GitHub).
You can use &lt;a href="https://developer.github.com/v4/explorer/"&gt;GitHub's explorer&lt;/a&gt; to test queries straight away. But it asks a &lt;em&gt;LOT&lt;/em&gt; of permissions to support every type of query.
Another way is to make a smaller version yourself. With fewer permissions. Here's a short version that I wrote. For this, you just need an authentication token generated at https://github.com/settings/tokens with no scopes other than default scopes. i.e you don't need to select any option from the list of scopes provided in settings.&lt;/p&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/files/graphql-without-pagination.py"&gt;Minimal Explorer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the minimal explorer that I wrote. But since we're not taking loads of permissions, we're a little limited. But for getting started, it's enough (Not only getting started, but for getting big too. CPython-Pull-Requests uses only default scopes, no additional scopes.)&lt;/p&gt;
&lt;p&gt;So here's our first query. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;viewer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;login&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;viewer&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;login&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;storymode7&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(See the similarity? The "data" provided in the response to our query has &lt;em&gt;exactly&lt;/em&gt; the same structure.)
Viewer is a &lt;a href="https://developer.github.com/v4/object/user/"&gt;User object&lt;/a&gt;. There is also a &lt;code&gt;user&lt;/code&gt; field. The difference of &lt;code&gt;viewer&lt;/code&gt; from &lt;code&gt;user&lt;/code&gt; field is that viewer represents the currently authenticated user. Whereas &lt;code&gt;user&lt;/code&gt; is used to lookup a user from their login. So, in this case, the response was the login of the currently authenticated user(storymode7).&lt;/p&gt;
&lt;p&gt;You can also prepend &lt;code&gt;query&lt;/code&gt; before your query. It is useful if you need to pass some parameters to your query.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;rateLimit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;limit&lt;/span&gt;
    &lt;span class="nx"&gt;remaining&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;rateLimit&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;limit&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;remaining&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://developer.github.com/v4/object/ratelimit/"&gt;RateLimit object&lt;/a&gt;. It contains fields related to the rate limit info of currently logged in client.&lt;/p&gt;
&lt;h2&gt;Using variables in your query&lt;/h2&gt;
&lt;p&gt;Like in a programming language, you can use variable to make query easy to modify. Like if you want to change the number of results returned by a query, you don't need to change your &lt;code&gt;query&lt;/code&gt; every time. You can just change the relevant variable without touching the query at all.
To use variables you need to define the variable type when you write your query.
While using variables, keeping this in mind helps: You can use a &lt;code&gt;field&lt;/code&gt; in an &lt;code&gt;object&lt;/code&gt; as a parameter. You can also list these fields under nodes to display them.
Variables are prefixed with a &lt;code&gt;$&lt;/code&gt; sign wherever they are in a query. And enclosed in &lt;code&gt;""&lt;/code&gt; within &lt;code&gt;variables&lt;/code&gt;.
Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$user_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$user_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;repositories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;name&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;user_name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;storymode7&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Executing this query in GitHub explorer: Paste the variables part (The last part with "user_name") under QUERY VARIABLES
Executing this query in my minimal explorer: Paste the variables part (The last part with "user_name") under &lt;code&gt;variables&lt;/code&gt;. So that it looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;  &amp;quot;user_name&amp;quot;: &amp;quot;storymode7&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;}&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;repositories&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;nodes&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;django-init&amp;quot;&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Look closely on this line:
&lt;code&gt;query($user_name:String!) {&lt;/code&gt;
This is to make sure that nullability matches. I.E if the field requires a variable (If they are required, the type has a &lt;code&gt;!&lt;/code&gt; in end). Then your variable definition should specify the variable as compulsory too! Lookup &lt;code&gt;login&lt;/code&gt; field &lt;a href="https://developer.github.com/v4/object/user/#fields"&gt;here&lt;/a&gt;, and you'll notice it's defined as: &lt;code&gt;login (String!)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Pagination&lt;/h2&gt;
&lt;p&gt;A query can not list more than hundred resources in one request. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cpython&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pullRequests&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;states&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;nodes&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Requesting&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt; &lt;span class="n"&gt;records&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="ss"&gt;`pullRequests`&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="n"&gt;exceeds&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="ss"&gt;`first`&lt;/span&gt; &lt;span class="k"&gt;limit&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;records&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is where we pagination comes. The use of variables, before &amp;amp; after fields, cursors, python all comes in together!
Under a connection, you can see there's a pageInfo field. Example: &lt;a href="https://developer.github.com/v4/object/pullrequestconnection/"&gt;PullRequestConnection&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Since we're going to deal with paging forward, the fields of interest to us in &lt;a href="https://developer.github.com/v4/object/pageinfo/"&gt;pageInfo&lt;/a&gt; are: &lt;code&gt;endCursor&lt;/code&gt; &amp;amp; &lt;code&gt;hasNextPage&lt;/code&gt;.
So, to get all the info we need to keep turning the page until we're on the last page. We can check if we're on the last page yet, by checking the value of &lt;code&gt;hasNextPage&lt;/code&gt; which is a &lt;code&gt;Boolean&lt;/code&gt;. If we have a next page available, we copy the &lt;code&gt;endCursor&lt;/code&gt; value and then we update the query for the next request with that &lt;code&gt;endCursor&lt;/code&gt; specified in the &lt;code&gt;after&lt;/code&gt; field. So now we only get details after those that were at the 'end' of the previous 'page'.
In short, to paginate:
* Check if &lt;code&gt;hasNextPage&lt;/code&gt; (if not then quit)
* Copy &lt;code&gt;endCursor&lt;/code&gt;
* Update the after field in query with &lt;code&gt;endCursor&lt;/code&gt;'s value
* Send the query
* Repeat&lt;/p&gt;
&lt;p&gt;Let's see how these &lt;code&gt;endCursor&lt;/code&gt;, &lt;code&gt;hasNextPage&lt;/code&gt; etc look in the Response of a small query:&lt;/p&gt;
&lt;p&gt;Query:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cpython&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pullRequests&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;states&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;pageInfo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;endCursor&lt;/span&gt;
          &lt;span class="nx"&gt;hasNextPage&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;totalCount&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;repository&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;pullRequests&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;pageInfo&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;endCursor&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y3Vyc29yOnYyOpHOBlW8Wg==&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;&amp;quot;hasNextPage&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;totalCount&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1048&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now here's an &lt;a href="//thegeekyway.com/uploads/files/graphql-with-pagination.py"&gt;example script&lt;/a&gt; with pagination. That will fetch titles of all PRs for "cpython" repo with owner "python".
Since we're getting a list of all the nodes(PR titles), I am capturing node of every request and appending it to the previous node. 
I'm not attaching the final node created by the accumulation of all other nodes back to the response because I've achieved what I wanted.
Titles of all PRs opened in the "CPython" repo. 
Also, since the printing of such a large amount of information is useless, I'm sharing a small snippet of output:&lt;/p&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
&lt;span class="nv"&gt;Page&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="nv"&gt;fetched&lt;/span&gt;
[
  {
    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;title&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;bpo-29553: Fixed ArgumentParses format_usage for mutually exclusive groups&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  },
  {
    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;title&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Alternarive for bpo-29553 - Fixed ArgumentParses format_usage for mutually exclusive groups&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  },
  {
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: I'm only displaying the node part here since that is the focus of this query.&lt;/p&gt;
&lt;h2&gt;Is this all?&lt;/h2&gt;
&lt;p&gt;No! GraphQL has a lot of features. This post includes a few that I came across while working on CPython-Pull-Requests. There are a lot of things. Like mutations, that you can use to modify data. This is the part that would require some permissions and this is the reason why GitHub's explorer is so permission heavy. It supports every type of GraphQL query that you can do on GitHub, including mutations.
There are more features that you can find out on &lt;a href="https://developer.github.com/v4/"&gt;GitHub's GraphQL API reference&lt;/a&gt;.&lt;/p&gt;</content><category term="Python"></category><category term="GitHub"></category></entry><entry><title>Introduction to Shell Script</title><link href="//thegeekyway.com/introduction-to-shell-script/" rel="alternate"></link><published>2019-06-04T08:39:00+05:30</published><updated>2019-06-04T08:39:00+05:30</updated><author><name>GeekyShacklebolt</name></author><id>tag:thegeekyway.com,2019-06-04:/introduction-to-shell-script/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/03/Shell_script.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ever wanted to automate a task on your *nix machine? Or are you fed up executing some set of commands again and again? If yes, then shell scripting can help you out there. In this tutorial, introduce yourself to shell scripting, along with some hands-on examples to practice.&lt;/p&gt;
&lt;!--more--&gt;

&lt;h2&gt;What is …&lt;/h2&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/03/Shell_script.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ever wanted to automate a task on your *nix machine? Or are you fed up executing some set of commands again and again? If yes, then shell scripting can help you out there. In this tutorial, introduce yourself to shell scripting, along with some hands-on examples to practice.&lt;/p&gt;
&lt;!--more--&gt;

&lt;h2&gt;What is a shell?&lt;/h2&gt;
&lt;p&gt;The shell is a user program or it is an environment provided for user interaction. It is a command language interpreter, that executes commands read from the standard input device such as a keyboard or from a file.&lt;/p&gt;
&lt;p&gt;Several shells are available for Linux including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bash.cyberciti.biz/guide/BASH" title="BASH"&gt;BASH&lt;/a&gt; ( Bourne-Again SHell ) - Most common shell in Linux. It's Open Source.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bash.cyberciti.biz/guide/CSH" title="CSH"&gt;CSH&lt;/a&gt; (C SHell) - The C shell's syntax and usage are very similar to the C programming language.&lt;/li&gt;
&lt;li&gt;&lt;a class="new" href="https://bash.cyberciti.biz/wiki/index.php?title=KSH&amp;amp;action=edit&amp;amp;redlink=1" title="KSH (page does not exist)"&gt;KSH&lt;/a&gt; (Korn SHell) - Created by &lt;a href="https://bash.cyberciti.biz/guide/David_Korn" title="David Korn"&gt;David Korn&lt;/a&gt; at &lt;a class="new" href="https://bash.cyberciti.biz/wiki/index.php?title=AT_%26_T_Bell_Labs&amp;amp;action=edit&amp;amp;redlink=1" title="AT &amp;amp; T Bell Labs (page does not exist)"&gt;AT &amp;amp; T Bell Labs&lt;/a&gt;. The Korn Shell also was the base for the POSIX Shell standard specifications.&lt;/li&gt;
&lt;li&gt;&lt;a class="new" href="https://bash.cyberciti.biz/wiki/index.php?title=TCSH&amp;amp;action=edit&amp;amp;redlink=1" title="TCSH (page does not exist)"&gt;TCSH&lt;/a&gt; - It is an enhanced but completely compatible version of the Berkeley &lt;a class="mw-redirect" href="https://bash.cyberciti.biz/guide/UNIX" title="UNIX"&gt;UNIX&lt;/a&gt; &lt;a href="https://bash.cyberciti.biz/guide/C_shell" title="C shell"&gt;C shell&lt;/a&gt; (&lt;a href="https://bash.cyberciti.biz/guide/CSH" title="CSH"&gt;CSH&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A shell is simply accessible using a terminal. If you are familiar with *nix, then you might have an experience of using it. Now, if you want to know what all shells are available in your system, then use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/shells
&lt;span class="c1"&gt;# /etc/shells: valid login shells&lt;/span&gt;
/bin/sh
/bin/dash
/bin/bash
/bin/rbash
/bin/zsh
/usr/bin/zsh
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;What is a shell script?&lt;/h2&gt;
&lt;p&gt;It is a programming language of shells, where you may write a set of commands to execute for a particular shell. And similar to programming, shell scripts support that sequential, conditional and iteration flow along with functions that help to make your programs more modular.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shell Program:&lt;/strong&gt; It is simply the file containing shell commands. You may directly run this file instead of individually executing each command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please note that each shell does the same job, but each understands different command syntax and provides different built-in functions.&lt;/strong&gt; In this tutorial, we'll discuss shell scripting &lt;strong&gt;w.r.t&lt;/strong&gt; bash. Because &lt;strong&gt;"bash"&lt;/strong&gt; is used as a default shell in most *nix systems.&lt;/p&gt;
&lt;h2&gt;Use cases of shell scripting&lt;/h2&gt;
&lt;p&gt;The following tasks could be done easily with shell scripting.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Automating a series of tasks:&lt;/strong&gt;&lt;br&gt;
   Like loading script files according to the availability of shells found in your system. Or loading OS-specific settings. (here loading means to source/run a file)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Setting cron/anacron jobs:&lt;/strong&gt;&lt;br&gt;
   Like every week, auto removing packages that are no longer usable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Executing a set of commands.&lt;/strong&gt;&lt;br&gt;
   Like installing no. of packages, without repeatedly giving your confirmations (y).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Commands you write in a script can also be executed directly on a shell, and commands you write in the shell can also be written in the script. Therefore, you may do everything with scripting, that you may think of doing with a shell.&lt;/p&gt;
&lt;h2&gt;Writing your first script&lt;/h2&gt;
&lt;p&gt;To create a shell program you need to go through the following steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Create a file for the shell program.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ touch newfile.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, we have given the extension &lt;strong&gt;.sh &lt;/strong&gt; or &lt;strong&gt;.bash&lt;/strong&gt; (conventional for bash script), though it is not necessary, but quite useful to distinguish between scripts of different shells.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Put a shebang (#!) on the first line of the file&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Shebang(#!)&lt;/strong&gt; is a special comment, that informs, which shell to be selected while executing this file. It is actually the path to the shell required to run this script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Add some commands to the file&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Script is working fine!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4. Save the file.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Make the file executable and run the program.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To run a script file, at least it must have the permission of &lt;strong&gt;"readability"&lt;/strong&gt; so that we can explicitly execute it using a shell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bash newfile.sh
Script is working fine!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And if the script file is &lt;strong&gt;"executable"&lt;/strong&gt;, then we may directly run the file as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ chmod +x newfile.sh
$ ./newfile.sh 
Script is working fine!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hurray! You got your first shell script running. Let's go ahead and explore more programming elements of scripting.&lt;/p&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;p&gt;Writing comments is really useful in any programming language. Because the code is read much more times than it is written. Also, comments make the code easy to comprehend, thus, it is advisable to use comments to explain complex parts of the code.&lt;/p&gt;
&lt;p&gt;In shell scripting, you may give comments with &lt;strong&gt;hash (#)&lt;/strong&gt; symbol.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;newfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Purpose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;To&lt;/span&gt; &lt;span class="n"&gt;learn&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;practice&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;These&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="n"&gt;comments&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Shell Parameters&lt;/h2&gt;
&lt;p&gt;Values you pass to a shell program from a terminal while executing the script, are called program parameters. For example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh Hello World
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, &lt;strong&gt;&lt;em&gt;"Hello"&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;"World"&lt;/em&gt;&lt;/strong&gt; are &lt;strong&gt;2&lt;/strong&gt; parameters that are passed to &lt;strong&gt;newfile.sh&lt;/strong&gt;. You may pass any number of parameters to a shell script. But, the question arises, how are we gonna use them in a program?&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;\$0 to \$9&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;\$0:&lt;/strong&gt; It holds the complete path to the script file from the current working directory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;\$1-\$9:&lt;/strong&gt; These hold shell parameters. For example: &lt;strong&gt;\$2&lt;/strong&gt; is second parameter.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;\$#:&lt;/strong&gt; It holds the total number of shell parameters (i.e exclude \$0).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To access these parameters we may use &lt;strong&gt;dollar (\$)&lt;/strong&gt; symbol followed by the number of parameter. For example, if your file is.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Running script &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;First parameter is &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Second parameter is &lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh Hello World
Running script: ./newfile.sh
First parameter is: Hello
Second parameter is: World
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Along with these you also have other predefined variables.&lt;/p&gt;
&lt;h4&gt;\$* and \$@&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;\$*: &lt;/strong&gt;It has all the parameters passed as &lt;strong&gt;a single word&lt;/strong&gt;, where each element is space separated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;\$@:&lt;/strong&gt; It has all the parameters passed but it holds each parameter as a separate word.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;\$* and \$@&lt;/strong&gt; seems confusing from the definition, therefore, let's take a look at the example below.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;With \$*&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Total parameters: &lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The output is.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2 3&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4 5&amp;quot;&lt;/span&gt;
Total parameters: &lt;span class="m"&gt;3&lt;/span&gt;
With &lt;span class="nv"&gt;$*&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See, here total parameters are &lt;strong&gt;3&lt;/strong&gt;, but you are actually getting &lt;strong&gt;1&lt;/strong&gt; string that includes all parameters&lt;strong&gt;.&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: While using \$*, if the parameter is "2 3", then it is treated as "2" and "3". This means the shell interprets the space symbol. But, this is not the case with \$@.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you use &lt;strong&gt;"\$@"&lt;/strong&gt; instead of &lt;strong&gt;"\$*"&lt;/strong&gt; you'll get the following.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2 3&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4 5&amp;quot;&lt;/span&gt;
Total parameters: &lt;span class="m"&gt;3&lt;/span&gt;
With &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, &lt;strong&gt;3&lt;/strong&gt; separate parameters can be easily seen.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;\$\$ and \$?&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;\$\$:&lt;/strong&gt; It shows the &lt;strong&gt;process ID&lt;/strong&gt;. Following command shows the process ID of the current terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$$&lt;/span&gt;
&lt;span class="m"&gt;2123&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;\$?:&lt;/strong&gt; It holds &lt;strong&gt;exit status&lt;/strong&gt; of the last command. For example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ clear
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, &lt;strong&gt;0&lt;/strong&gt; indicates that last command (&lt;strong&gt;clear&lt;/strong&gt;) was successful. In case of failure, &lt;strong&gt;\$?&lt;/strong&gt; returns any non-zero value.&lt;br&gt;
   To return exit status &lt;strong&gt;0&lt;/strong&gt; or &lt;strong&gt;1&lt;/strong&gt; from your shell script, simply use the &lt;strong&gt;exit&lt;/strong&gt; command.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Successful&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Shift Command to access more than 9 parameters&lt;/h4&gt;
&lt;p&gt;You may easily go from &lt;strong&gt;\$1&lt;/strong&gt; to &lt;strong&gt;\$9.&lt;/strong&gt; But how would you use the 10th parameter?&lt;/p&gt;
&lt;p&gt;Accessing 10th parameter is not possible with &lt;strong&gt;"\$10"&lt;/strong&gt; because the shell will interpret only the first digit, that is &lt;strong&gt;"1"&lt;/strong&gt;, and output of this statement would be the first parameter followed by a &lt;strong&gt;"0"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To solve this issue we have &lt;strong&gt;shift command&lt;/strong&gt;. This command shifts all the parameter to left by one. As a result, it also decreases the number of total parameters &lt;strong&gt;(\$#).&lt;/strong&gt; For example.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Total parameters: &lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
   &lt;span class="nb"&gt;shift&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Parameters: &lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The output of this command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh a b c d e f
Total parameters: &lt;span class="m"&gt;6&lt;/span&gt;
Parameters: b c d e f
Total parameters: &lt;span class="m"&gt;5&lt;/span&gt;
Parameters: c d e f
Total parameters: &lt;span class="m"&gt;4&lt;/span&gt;
Parameters: d e f
Total parameters: &lt;span class="m"&gt;3&lt;/span&gt;
Parameters: e f
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can see, that parameters are shifting to left and getting reduced by one. So, if you want to access 10th parameter then you need to left shift once and access &lt;strong&gt;\$9.&lt;/strong&gt; However, this command is not much recommended due to the side effect of losing earlier parameters.&lt;/p&gt;
&lt;h2&gt;Variables and Expressions&lt;/h2&gt;
&lt;p&gt;Expressions are valid combination of variables and operators.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Variables:&lt;/em&gt;&lt;/strong&gt; These are &lt;strong&gt;shell parameters&lt;/strong&gt; or any other initialized variable in a shell program like.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="c1"&gt;# An integer variable&lt;/span&gt;
&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# A string variable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Note: No space around "=" (assignment) operator.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Operators:&lt;/em&gt;&lt;/strong&gt; These are special symbols to operate on variables. For example.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;String operations&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;-z string&lt;/code&gt;           True: if the length of a &lt;code&gt;string&lt;/code&gt; is 0.
  &lt;code&gt;-n string&lt;/code&gt;           True: if the length of a &lt;code&gt;string&lt;/code&gt; is not 0.
  &lt;code&gt;string1 = string2&lt;/code&gt;   True: if the two strings are identical.
  &lt;code&gt;string != string2&lt;/code&gt;   True: if the two strings are NOT identical.
  &lt;code&gt;string&lt;/code&gt;              True: if the &lt;code&gt;string&lt;/code&gt; is not NULL.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Integer operations&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;int1 -eq int2&lt;/code&gt;   True: if the first int is equal to the second.
  &lt;code&gt;int1 -ne int2&lt;/code&gt;   True: if the first int is not equal to the second.
  &lt;code&gt;int1 -gt int2&lt;/code&gt;   True: if the first int is greater than the second.
  &lt;code&gt;int1 -ge int2&lt;/code&gt;   True: if the first int is greater than or equal to the second.
  &lt;code&gt;int1 -lt int2&lt;/code&gt;   True: if the first int is less than the second.
  &lt;code&gt;int1 -le int2&lt;/code&gt;   True: if the first int is less than or equal to the second.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;File operations&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;-r file&lt;/code&gt;   &lt;code&gt;True: if the file&lt;/code&gt; exists and is readable.
  &lt;code&gt;-w file&lt;/code&gt;   &lt;code&gt;True: if the file&lt;/code&gt; exists and is writable.
  &lt;code&gt;-x file&lt;/code&gt;   &lt;code&gt;True: if the file&lt;/code&gt; exists and is executable.
  &lt;code&gt;-f file&lt;/code&gt;   &lt;code&gt;True: if the file&lt;/code&gt; exists and is a regular file.
  &lt;code&gt;-d file&lt;/code&gt;   &lt;code&gt;True: if the file&lt;/code&gt; exists and is the directory.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Logical operations&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;!&lt;/code&gt;   reverse the result of expression
  &lt;code&gt;-a&lt;/code&gt;   AND operator
  &lt;code&gt;-o&lt;/code&gt;   OR operator&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Conditional Flow&lt;/h2&gt;
&lt;p&gt;When program control flows sequentially from start to end of a program, it is known as the sequential flow of programming. But, in case of conditional flow, the program is executed on the basis of conditional statements. If the result of such statements is true, one part of the code is executed, and if the result is false, another part of the code is executed, not both. This is called "Mutual Exclusion".&lt;/p&gt;
&lt;p&gt;Shell script provides 2 conditional statements 1) &lt;code&gt;if-else&lt;/code&gt; and 2) &lt;code&gt;case&lt;/code&gt;. Let's have a look at their syntax and usage.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;If-else statement&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Usage:&lt;/em&gt;&lt;/strong&gt; To execute a set of commands, on the basis of evaluation of an expression.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;command1&lt;/span&gt;    # &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;started&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
     &lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list1&lt;/span&gt;
&lt;span class="nv"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;command2&lt;/span&gt;  # &lt;span class="nv"&gt;optional&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
     &lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list2&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;           # &lt;span class="nv"&gt;optional&lt;/span&gt;: &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;accept&lt;/span&gt; &lt;span class="nv"&gt;rest&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;conditions&lt;/span&gt;.
     &lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list3&lt;/span&gt;
&lt;span class="nv"&gt;fi&lt;/span&gt;             # &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nv"&gt;block&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, &lt;strong&gt;elif&lt;/strong&gt; and &lt;strong&gt;else&lt;/strong&gt; parts are optional. This implies &lt;strong&gt;if command1&lt;/strong&gt; returns success &lt;strong&gt;(0),&lt;/strong&gt; then execute &lt;strong&gt;command-list1.&lt;/strong&gt; Otherwise, &lt;strong&gt;if command2&lt;/strong&gt; returns success &lt;strong&gt;(0),&lt;/strong&gt; then execute &lt;strong&gt;command-list2,&lt;/strong&gt; and if no condition turns out to be successful, then execute &lt;strong&gt;command-list3.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; ls &lt;span class="p"&gt;|&lt;/span&gt; grep ^z &amp;gt; /dev/null
&lt;span class="k"&gt;then&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; Firt &lt;span class="k"&gt;case&lt;/span&gt;.
&lt;span class="k"&gt;elif&lt;/span&gt; ls &lt;span class="p"&gt;|&lt;/span&gt; grep ^a &amp;gt; /dev/null
&lt;span class="k"&gt;then&lt;/span&gt; 
   &lt;span class="nb"&gt;echo&lt;/span&gt; Second &lt;span class="k"&gt;case&lt;/span&gt;.
&lt;span class="k"&gt;else&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; Third &lt;span class="k"&gt;case&lt;/span&gt;.
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Here, "&lt;strong&gt;ls | grep \^z" &lt;/strong&gt; searches files/folders in the current directory that starts with &lt;strong&gt;"z". &lt;/strong&gt;And &lt;strong&gt;"&gt; /dev/null" &lt;/strong&gt;sends the output of the file in a &lt;strong&gt;null&lt;/strong&gt; device (typically used for disposing of unwanted output streams of a process).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;The output&lt;/em&gt;&lt;/strong&gt; of the above program is shown below. (As I don't have any file that starts with &lt;strong&gt;"z"&lt;/strong&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;Second&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;&lt;strong&gt;Test Condition&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Usage:&lt;/em&gt;&lt;/strong&gt; It is mostly used in association with if-else to evaluate expressions instead of commands.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt; &lt;code&gt;test expression&lt;/code&gt; or &lt;code&gt;[ expression ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; [ &lt;span class="nv"&gt;expression&lt;/span&gt; ]
&lt;span class="k"&gt;then&lt;/span&gt;
     &lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list1&lt;/span&gt;
&lt;span class="nv"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's put all this in a short example.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -gt &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# if total number of parameters exceed 1&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Sorry, you entered too many parameters.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;1&lt;/span&gt; -a &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# if only one parameter is 1&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt; 
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hi! Nice to meet you!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;1&lt;/span&gt; -a &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# if only one parameter is 2&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt; 
    &lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -eq &lt;span class="m"&gt;1&lt;/span&gt; -a &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; -a &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# if only one is parameter is neither 1 nor 2&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You entered the wrong parameter.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;            &lt;span class="c1"&gt;# if the total number of parameters is below 1&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Sorry, you entered fewer parameters.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh
Sorry, you entered fewer parameters.
$ ./newfile.sh &lt;span class="m"&gt;1&lt;/span&gt;
Hi! Nice to meet you!
$ ./newfile.sh &lt;span class="m"&gt;2&lt;/span&gt;
/home/thegeekyway
$ ./newfile.sh &lt;span class="m"&gt;3&lt;/span&gt;
Sorry, you entered the wrong parameter.
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Case statement&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Usage:&lt;/em&gt;&lt;/strong&gt; Shell script also supports &lt;strong&gt;case conditional statement. &lt;/strong&gt;It is used to evaluate a particular variable with some set of values.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
     &lt;span class="n"&gt;pattern1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;list1&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
     &lt;span class="n"&gt;pattern2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;list2&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
     &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;list2&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;   &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt; &lt;span class="n"&gt;rest&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;conditions&lt;/span&gt;
&lt;span class="n"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt; Let's make the above command using &lt;strong&gt;case statements.&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$#&lt;/span&gt; in
     &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You entered fewer parameters.&amp;quot;&lt;/span&gt;
          exit&lt;span class="p"&gt;;;&lt;/span&gt;
     &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You entered too many parameters.&amp;quot;&lt;/span&gt;
          exit&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt; in
     &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hi, nice to meet you!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
     &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; pwd&lt;span class="p"&gt;;;&lt;/span&gt;
     *&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You entered the wrong parameters.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The output is same as above.&lt;/p&gt;
&lt;h2&gt;Repeated action commands (Loops)&lt;/h2&gt;
&lt;p&gt;To write a set of commands, which repeat themselves until a condition is satisfied, we have loops in programming languages. Bash supports 3 types of loops:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For loop&lt;/li&gt;
&lt;li&gt;While loop&lt;/li&gt;
&lt;li&gt;Until loop&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;For Loop&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Usage:&lt;/em&gt;&lt;/strong&gt; When iterating any variable over an iterator like "\$@", we use "for-loop".&lt;/p&gt;
&lt;p&gt;Iterators are objects, having multiple values within them like lists in python. Therefore, using a for-loop we may access their individual values one by one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;iterator&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list&lt;/span&gt;
&lt;span class="nv"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; var in &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$var&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh The Geeky Way
The
Geeky
Way
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;While Loop&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Usage:&lt;/em&gt;&lt;/strong&gt; To repeat a set of commands, till an expression remains true.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; [ &lt;span class="nv"&gt;expression&lt;/span&gt; ]
&lt;span class="k"&gt;do&lt;/span&gt;
     &lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list&lt;/span&gt;
&lt;span class="nv"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; -le &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$var&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
     &lt;span class="o"&gt;((&lt;/span&gt;var++&lt;span class="o"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh
&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Until Loop&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Usage:&lt;/em&gt;&lt;/strong&gt; It is reverse of &lt;strong&gt;while loop&lt;/strong&gt;, it repeats a set of commands, untill an expression becomes true.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;until&lt;/span&gt; [ &lt;span class="nv"&gt;expression&lt;/span&gt; ]
&lt;span class="k"&gt;do&lt;/span&gt;
     &lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list&lt;/span&gt;
&lt;span class="nv"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; -eq &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$var&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
   &lt;span class="o"&gt;((&lt;/span&gt;var++&lt;span class="o"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh
&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Read input at runtime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Read Command:&lt;/strong&gt; To read input from the user at runtime of shell script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt; &lt;code&gt;read var1 var2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command will hold (pause) the script to take input from the terminal. Once you give appropriate values, the shell script would run ahead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;read&lt;/span&gt; var
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="nv"&gt;$var&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./newfile.sh
The Geeky Way
The
Geeky
Way
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Functions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Usage:&lt;/em&gt;&lt;/strong&gt; These are set of commands, which can be called any number of times in a script. Thus, it gives the feature of re-usability of code and makes the code modular.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;function_name&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;list&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;    # &lt;span class="nv"&gt;optional&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
confirm&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Are you sure, that you want to continue (y)?: \c&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;read&lt;/span&gt; var
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; 
&lt;span class="k"&gt;fi&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; confirm -eq &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Continue process!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; 
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Discontinue process!&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Note that, no test expression in the last block of "if-else", because calling function is a command in itself. And we put expressions in the test, not commands.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ .&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;newfile&lt;/span&gt;.&lt;span class="nv"&gt;sh&lt;/span&gt;
&lt;span class="nv"&gt;Are&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;sure&lt;/span&gt;, &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;?: &lt;span class="nv"&gt;y&lt;/span&gt;
&lt;span class="k"&gt;Continue&lt;/span&gt; &lt;span class="nv"&gt;process&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Knowledge of shell scripting is a required norm, not only for Linux administrators but for a general Linux user as well.&lt;/p&gt;
&lt;p&gt;Being a Linux user, learning shell script is simply a boon. This sets you apart from those who just use Linux, then those who know how to use Linux!&lt;/p&gt;
&lt;p&gt;To know more about shell and scripting, you may visit &lt;a href="http://linuxcommand.org/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have any query or idea to improve this post, please feel free to write in the comments section below.&lt;/p&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><category term="Scripting"></category><category term="Shell"></category></entry><entry><title>[CHEAT-SHEET] List of Important IRC Commands</title><link href="//thegeekyway.com/list-important-irc-commands/" rel="alternate"></link><published>2018-06-14T17:13:00+05:30</published><updated>2018-06-14T17:13:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2018-06-14:/list-important-irc-commands/</id><summary type="html">&lt;p&gt;While you start using IRC, it becomes very essential to do certain tasks. To ensure yours tasks are carried out smoothly, you must know the commands which may come handy. So, today we've compiled here a list of IRC Commands that would come handy doing different tasks in IRC.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Changing …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;While you start using IRC, it becomes very essential to do certain tasks. To ensure yours tasks are carried out smoothly, you must know the commands which may come handy. So, today we've compiled here a list of IRC Commands that would come handy doing different tasks in IRC.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Changing your Nick&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nick&lt;/span&gt; &lt;span class="n"&gt;YourNick&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, YourNick is the nick you want. So, if your nick was Harry, now it would be YourNick like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nick&lt;/span&gt; &lt;span class="n"&gt;YourNick&lt;/span&gt;
&lt;span class="n"&gt;Harry&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="n"&gt;nick&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;YourNick&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If YourNick is already registered, you have to identify by giving your password as shown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nick&lt;/span&gt; &lt;span class="n"&gt;YourNick&lt;/span&gt;
&lt;span class="n"&gt;Harry&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="n"&gt;nick&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;YourNick&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;NickServ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;nickname&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;registered&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;choose&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;different&lt;/span&gt; &lt;span class="n"&gt;nickname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;identify&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="n"&gt;NickServ&lt;/span&gt; &lt;span class="n"&gt;identify&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here substitute \&amp;lt;password&gt; with the password you set when you registered your nick. When you enter your password, if it is correct, the following would be shown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;NickServ&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;identify&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
[&lt;span class="mi"&gt;12&lt;/span&gt;:&lt;span class="mi"&gt;22&lt;/span&gt;] &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;NickServ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;You&lt;/span&gt; &lt;span class="nv"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;now&lt;/span&gt; &lt;span class="nv"&gt;identified&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;YourNick&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Getting help&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When used this way, you'll get an index of various things you can get help with as shown.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;Help&lt;/span&gt; &lt;span class="nv"&gt;topics&lt;/span&gt; &lt;span class="nv"&gt;available&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;users&lt;/span&gt;:
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt;  
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;ACCEPT&lt;/span&gt;          &lt;span class="nv"&gt;ADMIN&lt;/span&gt;           &lt;span class="nv"&gt;AWAY&lt;/span&gt;            &lt;span class="nv"&gt;CHALLENGE&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;CMODE&lt;/span&gt;           &lt;span class="nv"&gt;CNOTICE&lt;/span&gt;         &lt;span class="nv"&gt;CPRIVMSG&lt;/span&gt;        &lt;span class="nv"&gt;CREDITS&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;ERROR&lt;/span&gt;           &lt;span class="nv"&gt;EXTBAN&lt;/span&gt;          &lt;span class="nv"&gt;HELP&lt;/span&gt;            &lt;span class="nv"&gt;INDEX&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;INFO&lt;/span&gt;            &lt;span class="nv"&gt;INVITE&lt;/span&gt;          &lt;span class="nv"&gt;ISON&lt;/span&gt;            &lt;span class="nv"&gt;JOIN&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;KICK&lt;/span&gt;            &lt;span class="nv"&gt;KNOCK&lt;/span&gt;           &lt;span class="nv"&gt;LINKS&lt;/span&gt;           &lt;span class="nv"&gt;LIST&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;LUSERS&lt;/span&gt;          &lt;span class="nv"&gt;MAP&lt;/span&gt;             &lt;span class="nv"&gt;MOTD&lt;/span&gt;            &lt;span class="nv"&gt;NAMES&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;NICK&lt;/span&gt;            &lt;span class="nv"&gt;NOTICE&lt;/span&gt;          &lt;span class="nv"&gt;OPER&lt;/span&gt;            &lt;span class="nv"&gt;PART&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;PASS&lt;/span&gt;            &lt;span class="nv"&gt;PING&lt;/span&gt;            &lt;span class="nv"&gt;PONG&lt;/span&gt;            &lt;span class="nv"&gt;PRIVMSG&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;QUIT&lt;/span&gt;            &lt;span class="nv"&gt;STATS&lt;/span&gt;           &lt;span class="nv"&gt;TIME&lt;/span&gt;            &lt;span class="nv"&gt;TOPIC&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;TRACE&lt;/span&gt;           &lt;span class="nv"&gt;UMODE&lt;/span&gt;           &lt;span class="nv"&gt;USER&lt;/span&gt;            &lt;span class="nv"&gt;USERHOST&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;USERS&lt;/span&gt;           &lt;span class="nv"&gt;VERSION&lt;/span&gt;         &lt;span class="nv"&gt;WHO&lt;/span&gt;             &lt;span class="nv"&gt;WHOIS&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="nv"&gt;WHOWAS&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="k"&gt;End&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;HELP&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can get specific help by typing the stuff you need help with. For example, if you need help with WHOIS then it can be done as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="n"&gt;WHOIS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would give the following result:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; [&lt;span class="nv"&gt;remoteserver&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;nick&lt;/span&gt;] &lt;span class="nv"&gt;nick&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt;  
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;display&lt;/span&gt; &lt;span class="nv"&gt;detailed&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="nv"&gt;information&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;specified&lt;/span&gt; &lt;span class="nv"&gt;nick&lt;/span&gt;.  &lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;first&lt;/span&gt; &lt;span class="nv"&gt;parameter&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;specified&lt;/span&gt;, &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;display&lt;/span&gt; &lt;span class="nv"&gt;information&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;specified&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt;, &lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt; &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt;.  &lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;how&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;remotely&lt;/span&gt; &lt;span class="nv"&gt;see&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="nv"&gt;idle&lt;/span&gt; &lt;span class="nv"&gt;time&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;away&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt;.
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;WHOIS&lt;/span&gt; &lt;span class="k"&gt;End&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;HELP&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; Admin Info for servers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To get information about Admin of any server, you can use the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;Admin&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here servers is optional, if used without any parameter, the admin information about current server would be returned.&lt;/p&gt;
&lt;p&gt;Else, the information about given server would be returned. Here is what I got when using irc.freenode.net. You can expect somewhat similar results.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;Administrative&lt;/span&gt; &lt;span class="nv"&gt;info&lt;/span&gt; &lt;span class="nv"&gt;about&lt;/span&gt; &lt;span class="nv"&gt;herbert&lt;/span&gt;.&lt;span class="nv"&gt;freenode&lt;/span&gt;.&lt;span class="nv"&gt;net&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;You&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;re using freenode! For assistance, please &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;stats&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; and message someone on the list&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nv"&gt;further&lt;/span&gt; &lt;span class="nv"&gt;assistance&lt;/span&gt;, &lt;span class="nv"&gt;please&lt;/span&gt; &lt;span class="nv"&gt;see&lt;/span&gt; &lt;span class="nv"&gt;http&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;freenode&lt;/span&gt;.&lt;span class="nv"&gt;net&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;faq&lt;/span&gt;.&lt;span class="nv"&gt;shtml&lt;/span&gt;, &lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;email&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;support&lt;/span&gt;@&lt;span class="nv"&gt;freenode&lt;/span&gt;.&lt;span class="nv"&gt;net&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; AWAY Message&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Away message could be used to inform other people that you're away for sometimes, it can be used as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;AWAY&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here message is any information you want to tell people for why you are going away like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;AWAY&lt;/span&gt; &lt;span class="n"&gt;Going&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="k"&gt;some&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feeling&lt;/span&gt; &lt;span class="n"&gt;hungry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;brb&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;mins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would return the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;marked&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="n"&gt;away&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When used without any message, the away status will be removed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Get WHOIS Information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Often you might want to see the whois information for someone, whom you don't recognize. The whois command can be used as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;WHOIS&lt;/span&gt; &lt;span class="n"&gt;BellBaghton&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here BellBaghton is the nick you want the information about. This would return the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;BellBaghton&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;BellBaghton&lt;/span&gt;&lt;span class="mf"&gt;@120.59.14.51&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;  &lt;span class="nl"&gt;realname&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bell&lt;/span&gt; &lt;span class="n"&gt;Baghton&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;  &lt;span class="nl"&gt;server&lt;/span&gt;   &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;kornbluth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;freenode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Frankfurt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Germany&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;           &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;secure&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;  &lt;span class="nl"&gt;account&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BellBaghton&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;WHOIS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; BellBaghton is just arbitrary nick and all information in result is changed here. It is for illustration purpose only.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action Messages&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All action messages can be displayed by using following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here \&amp;lt;my action&gt; can be replaced with any action you're doing like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt; &lt;span class="n"&gt;thinks&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;IRC&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;really&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would return the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;YourNick&lt;/span&gt; &lt;span class="n"&gt;thinks&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;IRC&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;really&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here YourNick is the nick you're using.&lt;/p&gt;
&lt;p&gt;There is a lot more, which I'll add later in the post.&lt;/p&gt;</content><category term="IRC"></category></entry><entry><title>Symmetric and Asymmetric Encryption</title><link href="//thegeekyway.com/symmetric-and-asymmetric-encryption/" rel="alternate"></link><published>2018-04-09T18:00:00+05:30</published><updated>2018-04-09T18:00:00+05:30</updated><author><name>GeekyShacklebolt</name></author><id>tag:thegeekyway.com,2018-04-09:/symmetric-and-asymmetric-encryption/</id><summary type="html">&lt;p&gt;Secured communication is inevitably a required norm in the world. To achieve the same, different methods are being approached. You must have heard the word &lt;strong&gt;"cryptography"&lt;/strong&gt;, which is really useful to safely transmit your signals by ensuring secrecy. Today, with advancements in this field, we have 2 of its widely …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Secured communication is inevitably a required norm in the world. To achieve the same, different methods are being approached. You must have heard the word &lt;strong&gt;"cryptography"&lt;/strong&gt;, which is really useful to safely transmit your signals by ensuring secrecy. Today, with advancements in this field, we have 2 of its widely known types i.e. private key cryptography (symmetric encryption) and public key cryptography (asymmetric encryption). What's the difference between them? Which one is better in what context? Let's see!&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;First, let's understand the basic terminologies:-&lt;br&gt;
&lt;strong&gt;Cryptography:&lt;/strong&gt;&lt;br&gt;
It is the technique of writing or storing information in a way that it’s revealed only to those who need to see it, and hides it from all others.&lt;br&gt;
&lt;strong&gt;Encryption:&lt;/strong&gt;&lt;br&gt;
It is the implementation of cryptography. This converts data to ciphertext.&lt;br&gt;
&lt;strong&gt;Decryption:&lt;/strong&gt;&lt;br&gt;
It is reverse of encryption. This converts ciphertext to readable data.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2017/12/Encryption-decryption-blog.png" title="Encryption-Decryption"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Symmetric Encryption:-&lt;/h2&gt;
&lt;p&gt;It is also known as private key encryption or private key cryptography. Here, only one key (secret key) is used for both encryption and decryption, by all the parties involved in communication over a network. That's why it is faster than asymmetric encryption.&lt;/p&gt;
&lt;p&gt;The same key is kept for the entire session of communication. Therefore, this key is also known as &lt;strong&gt;"session key"&lt;/strong&gt;. This session key is either developed by both the parties (client and server) or alone by the client. If it is developed by the client only, then it is required to transmit to the server. In this case, a special concern is provided while transmitting this session key over a network. Because, if the key would get into the wrong hands, s/he can see all your transmitting information with any possible intention.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2017/12/Symmetric-encryption-blog.png" title="Symmetric Encryption"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Modern approaches of symmetric encryption are executed using algorithms such as DES, QUAD, Blowfish, AES, 3DES, RC4 etc.&lt;br&gt;
This type of encryption is used, when we are interested in transmission speed such as in transferring large files.&lt;/p&gt;
&lt;h2&gt;Asymmetric Encryption:-&lt;/h2&gt;
&lt;p&gt;It is also known as public key encryption or public key cryptography. Here, a pair of keys is used for encryption and decryption. These are the public key and the private key. The public key is used for encryption and the private key is used for decryption. Here, the private key is kept a secret to the owner and the public key is kept with all the servers to whom this client wants to connect.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2017/12/Asymmetric-encryption-blog.png" title="Asymmetric Encryption"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Understanding asymmetric encryption with workflow.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Suppose, a client wants to send a signal to a server. It will encrypt this signal using &lt;strong&gt;"server's public key"&lt;/strong&gt; and will transmit over the network. When server will receive this signal, it will decrypt this, using &lt;strong&gt;"server's own private key"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The same is followed by a signal coming from the server. The server will encrypt the signal using &lt;strong&gt;"client's public key"&lt;/strong&gt; and the client will decrypt this, using &lt;strong&gt;"client's own private key"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In this way, 2 keys equally participate in the process of public key cryptography. Due to the involvement of 2 keys, it is slower and more complex than symmetric encryption. Diffie-Hellman and RSA are the most widely used algorithms for asymmetric encryption.&lt;/p&gt;
&lt;h3&gt;Key differences between symmetric and asymmetric encryption:-&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Symmetric encryption involves only one key e.i session key. While asymmetric encryption uses two keys e.i public and private key.&lt;/li&gt;
&lt;li&gt;Symmetric encryption is faster and simpler than asymmetric encryption.&lt;/li&gt;
&lt;li&gt;Symmetric encryption is preferable over asymmetric encryption when a large file transfer is concerned.&lt;/li&gt;
&lt;li&gt;Asymmetric encryption is used to share the session key using which, symmetric encryption can be initiated.&lt;/li&gt;
&lt;li&gt;Asymmetric encryption is newer than symmetric encryption.&lt;/li&gt;
&lt;li&gt;In case of asymmetric encryption, no secret channel is necessary for the exchange of the public key.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With this, we have reached the end of this post. If you have any query regarding the topic, please let us know in the comments section below.&lt;/p&gt;
&lt;p&gt;Have a good day!&lt;/p&gt;</content><category term="encryption"></category><category term="SSH"></category></entry><entry><title>Get rid of your old terminal, Go Fish-ing</title><link href="//thegeekyway.com/get-rid-of-your-old-terminal-go-fish-ing/" rel="alternate"></link><published>2018-04-03T17:43:00+05:30</published><updated>2018-04-03T17:43:00+05:30</updated><author><name>vipulgupta2048</name></author><id>tag:thegeekyway.com,2018-04-03:/get-rid-of-your-old-terminal-go-fish-ing/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;Tired of using Bash terminal? Struggling with shell scripting. Want to try something better, easier to customize, configure. Fish is a simple, powerful yet user-friendly command-line shell giving you features that you have never heard of such as auto-suggestions, cleaner more organized scripts, web-based configuration/ customizations and a lot more …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;Tired of using Bash terminal? Struggling with shell scripting. Want to try something better, easier to customize, configure. Fish is a simple, powerful yet user-friendly command-line shell giving you features that you have never heard of such as auto-suggestions, cleaner more organized scripts, web-based configuration/ customizations and a lot more. Read on for my take on Fish and how it can make you more productive in your day-to-day.&lt;a href="//thegeekyway.com/uploads/images/2018/04/fish_screenshot-e1523016144797.png"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/04/fish_screenshot-e1523016144797.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!--more--&gt;

&lt;h3&gt;Simple Installation&lt;/h3&gt;
&lt;p&gt;Fish is easily available on Linux (All popular distros), Windows, and MacOS. Here are the steps for installing it on Debian.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="n"&gt;ppa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;fish&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;fish&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can find similar installation steps, for other distros and operating systems &lt;a href="https://fishshell.com/"&gt;here&lt;/a&gt;. When fish gets installed, type the following in your terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;fish&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And you are ready to go.&lt;/p&gt;
&lt;p&gt;For Fish to remember and suggest properly, try running this command when you install new applications. This will start scanning the man pages of your distros and suggest new arguments as you type in the terminal. To accept a suggestion, press the right arrow key to complete the command and it as simple as that.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;fish_update_completions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Let's Play&lt;/h3&gt;
&lt;p&gt;The official website of Fish offers an easy tutorial for both beginners and professionals to get started and make the most of it. I'll be mentioning the features I use the most and love while using Fish.&lt;/p&gt;
&lt;h4&gt;Summons commands like a pro&lt;/h4&gt;
&lt;p&gt;Fish provides suggestions and completions to every command and their specific arguments that you would type in the shell, from the get-go. Start typing to see it for yourself.&lt;br&gt;
This works on its ability to predict arguments straight from man pages and from the history it maintains, of the previous commands you entered. (Don't worry its smart enough not to record any sensitive information)&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2018/04/completions.png" title="A glimpse of what suggestions feel like in Fish"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/04/completions-e1522570951842.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;No need to remember arcane syntax, arguments or commands. Since it remembers what you type, it will keep suggesting you more recent commands to increase productivity and let you focus more on what you are going to type next.&lt;/p&gt;
&lt;h4&gt;Similarity to old 'Bash' (and some new scripting rules)&lt;/h4&gt;
&lt;p&gt;Commands you use in bash or to write shell scripts in Bash are mostly the same in Fish. There are some differences. But the alternatives are much easier to use. Check out the &lt;a href="https://fishshell.com/docs/current/index.html"&gt;documentation&lt;/a&gt; for more information.&lt;br&gt;
Man pages are a smart way to get more information about commands. But reading and searching for them are a pain. Fish comes to the rescue by opening man pages in web browsers. Give it a try.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Magic happens when you press Tab&lt;/h4&gt;
&lt;p&gt;Terminals usually autocomplete your half-written commands when you press the Tab key. Fish does that and a ton of other stuff. Here are a few snippets&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;geek&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@press&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Tab&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;geekyway&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;geekyway&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@press&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Tab&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="nf"&gt;stuff&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vipul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Executable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;4.8&lt;/span&gt;&lt;span class="n"&gt;kB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="nf"&gt;stuff&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vipul&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;vipulgupta2048&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@press&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tab&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="n"&gt;aeious&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="n"&gt;Android&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="n"&gt;AndroidStudioProjects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Keep pressing tab, shift+tab, arrow keys and other combinations to fully explore all the amazing features of Fish. Comment down below to let us know what cool new features you found while exploring.&lt;/p&gt;
&lt;h4&gt;Want to customize? Fish has you covered&lt;/h4&gt;
&lt;p&gt;Programmers love to customize their own personal setups be it desktop environments, text editors, and even terminals. I am no different. Hence when I found that you can customize Fish using a web browser and not write code for it. I was blown away. Try it out by typing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fish_config&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I can bet you haven't seen a smarter, more intuitive way to customize and change your terminal settings that include your prompt and its colors, change your functions, abbreviations and many other components.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2018/04/Screenshot_2018-04-01_09-44-47.png" title="Customise anything you want ..."&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/04/Screenshot_2018-04-01_09-44-47.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h4&gt;Other Awesome Features&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Syntax in Fish gets highlighted automatically.&lt;/li&gt;
&lt;li&gt;Separating Commands (Semicolon)&lt;/li&gt;
&lt;li&gt;Combiners (And, Or, Not)&lt;/li&gt;
&lt;li&gt;Conditionals (If, Else, Switch)&lt;/li&gt;
&lt;li&gt;And many more...&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Sold Already, Make it default&lt;/h4&gt;
&lt;p&gt;To find the shells installed in your system, run this command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;shells&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dash&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rbash&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmux&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fish&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fish&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You need to select "/usr/local/bin/fish" and then enter the command to change your default shell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;chsh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fish&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it now for the basics to get you started, I guess Happy Fish-ing !!&lt;/p&gt;
&lt;p&gt;Share this post with your co-workers, batchmates, friends who struggle with using Bash, want a change, or just want to try new things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More to come&lt;/strong&gt; (Part 2- &lt;strong&gt;Tips/tricks of Fish&lt;/strong&gt; and &lt;strong&gt;Writing Scripts for Fish&lt;/strong&gt;)&lt;br&gt;
Fork and star my dotfiles for more reference, and if you want the greeting message that I have on my terminal. - &lt;a href="https://github.com/vipulgupta2048/dotvfiles/tree/master/fish"&gt;vipulgupta2048/dotvfiles/fish&lt;/a&gt;&lt;/p&gt;</content><category term="Bash"></category><category term="cli"></category><category term="Fish"></category><category term="linux"></category><category term="ohmyfish"></category><category term="Shell"></category><category term="terminal"></category><category term="zsh"></category></entry><entry><title>Runlevels and rc.d scripts</title><link href="//thegeekyway.com/runlevels-and-rc-d-scripts/" rel="alternate"></link><published>2018-03-16T16:07:00+05:30</published><updated>2018-03-16T16:07:00+05:30</updated><author><name>storymode7</name></author><id>tag:thegeekyway.com,2018-03-16:/runlevels-and-rc-d-scripts/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2018/01/linux-boot-and-shutdown-scripts1.png"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/01/linux-boot-and-shutdown-scripts1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Many operating systems use the concept of runlevels. This is particularly the case for System V Unix based systems. As you might have read in our earlier post &lt;a href="http://thegeekyway.com/understanding-complete-boot-process-linux/"&gt;how Linux boots&lt;/a&gt; it uses runlevels to determine what to do. Let's study runlevels and rc scripts in detail.&lt;/p&gt;
&lt;h2&gt;Runlevels&lt;/h2&gt;
&lt;p&gt;Runlevels are …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2018/01/linux-boot-and-shutdown-scripts1.png"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/01/linux-boot-and-shutdown-scripts1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Many operating systems use the concept of runlevels. This is particularly the case for System V Unix based systems. As you might have read in our earlier post &lt;a href="http://thegeekyway.com/understanding-complete-boot-process-linux/"&gt;how Linux boots&lt;/a&gt; it uses runlevels to determine what to do. Let's study runlevels and rc scripts in detail.&lt;/p&gt;
&lt;h2&gt;Runlevels&lt;/h2&gt;
&lt;p&gt;Runlevels are the state to which a computer intends to go, or it intends to reach. There are total 7 runlevels.&lt;/p&gt;
&lt;p&gt;Runlevel 0: Halt or Shutdown&lt;/p&gt;
&lt;p&gt;Runlevel 1: Single-user mode&lt;/p&gt;
&lt;p&gt;Runlevel 2: Basic Multi-user mode but without networking&lt;/p&gt;
&lt;p&gt;Runlevel 3: Full text-based Multi-user mode (includes networking)&lt;/p&gt;
&lt;p&gt;Runlevel 4: X11 with session managers (Generally not used by most of the operating systems and is customizable)&lt;/p&gt;
&lt;p&gt;Runlevel 5: Full GUI based Multi-user mode&lt;/p&gt;
&lt;p&gt;Runlevel 6: Reboot&lt;/p&gt;
&lt;p&gt;These are the basic definitions what each runlevel is responsible for. For example, if an operating system is required to shut down, then it'd go to runlevel 0. You can even switch between these runlevels using the init command. Just type init \&amp;lt;runlevel&gt; and it'd change the current runlevel to the one specified. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will shut down the system.&lt;/p&gt;
&lt;p&gt;Each system has a default runlevel to which it boots. Like Fedora has runlevel as default. To see which runlevel you are in type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;runlevel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To check the default runlevel of your system, type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can even change the default, keeping in mind what runlevel provided, like you want it to be multiuser or the graphical one. Using it you can set the default like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt; 
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/etc/systemd/system/default.target  # To remove current default&lt;/span&gt;
&lt;span class="s1"&gt;ln -s &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Runlevel and target file have the following relation:&lt;/p&gt;
&lt;p&gt;runlevel 0: poweroff.target&lt;/p&gt;
&lt;p&gt;runlevel 1: rescue.target&lt;/p&gt;
&lt;p&gt;runlevel 2: multi-user.target&lt;/p&gt;
&lt;p&gt;runlevel 3: multi-user.target&lt;/p&gt;
&lt;p&gt;runlevel 4: multi-user.target&lt;/p&gt;
&lt;p&gt;runlevel 5: graphical.target&lt;/p&gt;
&lt;p&gt;runlevel 6: reboot.target&lt;/p&gt;
&lt;p&gt;You should never mess with the default runlevel unless you are absolutely sure with what you're doing. Like, if you manage to set runlevel 0 or 6 as default you will end up in a loop kind of condition. Your PC will shut down( or reboot depending on what runlevel you set) as soon as it has booted.&lt;/p&gt;
&lt;h2&gt;rc Scripts&lt;/h2&gt;
&lt;p&gt;When a computer has entered into a specific runlevel, it runs scripts according to the runlevel it's in. The rc here comes from use in the older computers which had rc files to contain commands that run at startup. These files were called runcom files. Where runcom files meant files used to RunCommand.&lt;/p&gt;
&lt;p&gt;Your script must contain the line before any command executes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;functions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is because, your script might be executed at a time when nothing is loaded, not even file system( though it can be specified in boot facilities in &lt;code&gt;Required-Start&lt;/code&gt; in LSB styled stanzas discussed below) so we can not say that each command we write will already be present( Remeber that each command is executed from a script present in PATH variable of your system). Hence in order for those commands to work, we need the functions file to be loaded as the first step. This function file contains the functions that a shell script might use.&lt;/p&gt;
&lt;p&gt;Fedora and most of the distros have folders that contain scripts that are to be run at a specific runlevel. They are located in the &lt;code&gt;/etc&lt;/code&gt; folder. The folders containing these scripts are:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/init.d&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/etc/rc.d/rc0.d&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/etc/rc.d/rc1.d&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/etc/rc.d/rc2.d&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/etc/rc.d/rc3.d&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/etc/rc.d/rc4.d&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/etc/rc.d/rc5.d&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/etc/rc.d/rc6.d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And, folders with the same name also exist in &lt;code&gt;/etc&lt;/code&gt; but they are actually symbolic links of there corresponding folders in &lt;code&gt;/etc/rc.d&lt;/code&gt; For example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/rc0.d      (Symbolic link of /etc/rc.d/rc0.d)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Each of these folders contain symbolic links of scripts that are actually stored in init.d for the runlevel they have in their name. Like &lt;code&gt;/etc/rc.d/rc0.d&lt;/code&gt; contains a symbolic link for scripts in &lt;code&gt;/etc/init.d&lt;/code&gt; that are required to be run at shutdown.&lt;/p&gt;
&lt;p&gt;Now if you open any of these folders you'd find out weird names with the structure like&lt;/p&gt;
&lt;p&gt;&lt;code&gt;S|K[01-99]filename&lt;/code&gt; where filename is the name of the script in &lt;code&gt;/etc/int.d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Like K50netconsole. Now let's see what these names mean.&lt;/p&gt;
&lt;h2&gt;Demystifying the symlink names&lt;/h2&gt;
&lt;p&gt;The terms have their meanings as follows:&lt;/p&gt;
&lt;p&gt;S: start the service, if it's not already started.&lt;/p&gt;
&lt;p&gt;K: Kill the service, if it's running.&lt;/p&gt;
&lt;p&gt;01-99 is the priority for that start or kill task&lt;/p&gt;
&lt;p&gt;filename is the exact same name of the file in &lt;code&gt;/etc/init.d&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;(Remember that it's actually &lt;code&gt;/etc/init.d&lt;/code&gt; that actually houses those scripts. Rest of the folders just have symlinks to these.)&lt;/p&gt;
&lt;p&gt;So, If a file named shutdown-script is to be run at shutdown all times with a priority of 90 then the file &lt;code&gt;shutdown-script&lt;/code&gt; should be present in &lt;code&gt;init.d&lt;/code&gt; folder. And a symlink to it must be created in &lt;code&gt;/etc/rc.d/rc0.d&lt;/code&gt; with the name S90shutdown-script, rest of the folders rc[1-6] can have K90shutdown-script. If 90 is the priority required to shut down.&lt;/p&gt;
&lt;h2&gt;Priority Of these scripts&lt;/h2&gt;
&lt;p&gt;Essentially, it can be better thought of as a position, and think of them being executed downwards from 01 to 99. For example, if you have a script that requires the network to be switched on then the network script should be at a higher position or priority than your script. Like the network, a script can have a priority of 01 and your script can have any number greater than it. So that it's executed &lt;em&gt;after the network script.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;The chkconfig&lt;/h2&gt;
&lt;p&gt;the chkconfig command here deserves the 'The' in the heading for how easy it makes to manage these scripts and runlevels! Yes, this command just needs your source script file and manages creation deletion, the setting of S or D and also the priority level!&lt;/p&gt;
&lt;p&gt;chkconfig has an amazing man page and here are the basic commands that will get you going.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chkconfig&lt;/span&gt; &lt;span class="c1"&gt;--list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This prints the System V services, and that will do for us.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chkconfig&lt;/span&gt; &lt;span class="c1"&gt;--add&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Is used to add your file for management by chkconfig. BUT wait. This command won't run unless you have some things set with your script.&lt;/p&gt;
&lt;p&gt;First and foremost, your script should exist in the home of all scripts, and that is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Paste your script here.&lt;/p&gt;
&lt;p&gt;Secondly, your file must have certain comment lines so that it can be managed by chkconfig.&lt;/p&gt;
&lt;p&gt;It must have these comment lines, though the description is not absolutely necessary and the script would work without it, it's recommended. So that anyone who intends to clean up the unnecessary services knows if this script is essential or not:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;chkconfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;235&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line here has some numbers ahead &lt;code&gt;chkconfig:&lt;/code&gt; like 235, 29 and 88.&lt;/p&gt;
&lt;p&gt;here the First number is the runlevels it's required to run on combined into a string. Like 235 here means it's supposed to run in runlevel 2,3 and 5.&lt;/p&gt;
&lt;p&gt;The next two numbers are the priority for start and stop respectively. So in this example, start priority is 29 and stop priority is 88.&lt;/p&gt;
&lt;p&gt;you can use backslash for a multiline comment though you still require a &lt;code&gt;#&lt;/code&gt;, in the beginning, to identify it as a comment.&lt;/p&gt;
&lt;p&gt;This is how it creates the symlinks with required priorities.&lt;/p&gt;
&lt;p&gt;Another way you can do this is enter LSB(Linux Standard Base) style init stanzas instead of these two comments. For it you can do it like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; ### &lt;span class="nv"&gt;BEGIN&lt;/span&gt; &lt;span class="nv"&gt;INIT&lt;/span&gt; &lt;span class="nv"&gt;INFO&lt;/span&gt;
 # &lt;span class="nv"&gt;Provides&lt;/span&gt;: &lt;span class="nv"&gt;scriptA&lt;/span&gt;
 # &lt;span class="nv"&gt;Required&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;Start&lt;/span&gt;: &lt;span class="nv"&gt;scriptB&lt;/span&gt;
 # &lt;span class="nv"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;Start&lt;/span&gt;: &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
 # &lt;span class="nv"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;Stop&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
 # &lt;span class="nv"&gt;Description&lt;/span&gt;: &lt;span class="nv"&gt;Description&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;what&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;script&lt;/span&gt; &lt;span class="nv"&gt;does&lt;/span&gt;
 ### &lt;span class="k"&gt;END&lt;/span&gt; &lt;span class="nv"&gt;INIT&lt;/span&gt; &lt;span class="nv"&gt;INFO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This one gives you more ease though it just looks a bit more complicated.&lt;/p&gt;
&lt;p&gt;In this, &lt;code&gt;Required-Start&lt;/code&gt; is the script that is required to start this script. That is, it should be running before the current script gets up. &lt;code&gt;Provides&lt;/code&gt;: It tells about the boot facilities that this script provides so that those will be counted as already present when another script requires it. Hence priorities will be set accordingly to what is required to be already present and what it'll provide. &lt;code&gt;Default-Start&lt;/code&gt; or &lt;code&gt;Stop&lt;/code&gt; tells which runlevel should this start on and stopped(if running) respectively.&lt;/p&gt;
&lt;p&gt;And don't forget a shebang at the beginning of the file.&lt;/p&gt;
&lt;p&gt;Now we are all set to go with these things done. Let's execute this command to add it to the management of chkconfig:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chkconfig&lt;/span&gt; &lt;span class="c1"&gt;--add filename&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;like for a file named bootpref in &lt;code&gt;init.d&lt;/code&gt; it would be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chkconfig&lt;/span&gt; &lt;span class="c1"&gt;--add bootpref&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now most probably your file will be visible with a status of on under the respective runlevels when you run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chkconfig&lt;/span&gt; &lt;span class="c1"&gt;--list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And if it's not or you want to change runlevels you can go like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chkconfig&lt;/span&gt; &lt;span class="n"&gt;bootpref&lt;/span&gt; &lt;span class="c1"&gt;--level 0 on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Will make it run on runlevel 0 that is at shutdown.&lt;/p&gt;
&lt;p&gt;Similarly off argument will kill it if present in that level. If no level is specified then these act on level 2,3,4 and 5. You can also specify multiple levels like &lt;code&gt;--level 26&lt;/code&gt; for level 2 and 6.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chkconfig&lt;/span&gt; &lt;span class="c1"&gt;--del bootpref&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will delete its symlinks from all rc folders but not from the init.d folder. That is required to be done manually. Ad chkconfig generally doesn't modify the content of init.d but rc folders.&lt;/p&gt;
&lt;p&gt;Hope this will help you play with your scripts in a better and safe manner.&lt;/p&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;</content><category term="initd"></category><category term="linux"></category><category term="runlevel"></category></entry><entry><title>Transfer data with SCP</title><link href="//thegeekyway.com/transfer-data-with-scp/" rel="alternate"></link><published>2018-03-14T20:17:00+05:30</published><updated>2018-03-14T20:17:00+05:30</updated><author><name>GeekyShacklebolt</name></author><id>tag:thegeekyway.com,2018-03-14:/transfer-data-with-scp/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/03/Secure_copy_protocol.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Hello readers! Transferring data to your friends' machine is not a big deal when using storage devices such as pen drives, CDs, etc. But have you ever intended to migrate files between different systems over a &lt;strong&gt;network,&lt;/strong&gt; to a machine that's out of your reach, like transferring data between an …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/03/Secure_copy_protocol.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Hello readers! Transferring data to your friends' machine is not a big deal when using storage devices such as pen drives, CDs, etc. But have you ever intended to migrate files between different systems over a &lt;strong&gt;network,&lt;/strong&gt; to a machine that's out of your reach, like transferring data between an EC2 instance and your local computer? If yes, then &lt;strong&gt;scp&lt;/strong&gt; is a simple tool to help you out there. Let's find out then, what is &lt;strong&gt;scp&lt;/strong&gt; and what are its use cases?&lt;!--more--&gt;&lt;/p&gt;
&lt;h2&gt;What is Secure Copy Protocol (SCP)?&lt;/h2&gt;
&lt;p&gt;I recently did a post on &lt;a href="http://thegeekyway.com/ultimate-guide-how-ssh-works/"&gt;&lt;strong&gt;how SSH works&lt;/strong&gt;&lt;/a&gt;, which elaborate, behind the scene of the protocol. So, as we have &lt;strong&gt;SSH&lt;/strong&gt; for a secure connection, similarly, we have &lt;strong&gt;scp&lt;/strong&gt; for a secure copy. It is a network protocol, based on the &lt;strong&gt;BSD&lt;/strong&gt; and&lt;a href="http://yuba.stanford.edu/rcp/"&gt;&lt;strong&gt;RCP&lt;/strong&gt;&lt;/a&gt;, which supports file transfers between hosts on a network.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;scp&lt;/strong&gt; uses Secure Socket Shell (&lt;strong&gt;SSH&lt;/strong&gt;) for data transfer and uses the same mechanisms for authentication, thereby ensuring the authenticity and confidentiality of the data. Therefore, for using , you first need to have an  &lt;strong&gt;&lt;a href="https://www.ssh.com/ssh/server"&gt;SSH&lt;/a&gt;&lt;a href="https://www.ssh.com/ssh/server"&gt;server&lt;/a&gt;&lt;/strong&gt;.  &lt;/p&gt;
&lt;h4&gt;Syntax:&lt;/h4&gt;
&lt;p&gt;Normal &lt;strong&gt;"cp"&lt;/strong&gt; (copy) command has the following syntax on *nix platforms. Here, data is copied to a different location in the same system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OPTION&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;-T&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SOURCE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DEST&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Similarly, &lt;strong&gt;"scp"&lt;/strong&gt; follows the same format. But, in this case, data is transferred between 2 different systems. Thus, its syntax is as follows.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OPTION&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user1&lt;/span&gt;&lt;span class="nv"&gt;@hostname&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user2&lt;/span&gt;&lt;span class="nv"&gt;@hostname&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;SCP with use cases&lt;/h4&gt;
&lt;h4&gt;Transferring files on password-based-authentication&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1. From localhost to a remote server.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@18.222.18.222&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;2. From a remote server to localhost.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@18.222.18.222&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3. From one remote server to another, through localhost.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@18.222.18.222&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@19.111.19.111&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;"-3" (option) &lt;/strong&gt;copies between two remote hosts, transferred through the localhost. Note that, this option disables the progress meter. Without this option, the data is copied directly between two remote hosts, for which, they should be accessible to each other.&lt;/p&gt;
&lt;h4&gt;Transferring files on key based authentication&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1. From localhost to a remote server.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@18.222.18.222&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;"-i" (option)&lt;/strong&gt; is used to include the identity file (our private key). Necessary for key based authentication.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. From a remote server to localhost.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@18.222.18.222&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3. From one remote server to another, through localhost.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key2&lt;/span&gt; &lt;span class="n"&gt;ubuntu1&lt;/span&gt;&lt;span class="mf"&gt;@18.222.18.222&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="n"&gt;ubuntu1&lt;/span&gt;&lt;span class="mf"&gt;@19.111.19.111&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;SCP with different parameters&lt;/h2&gt;
&lt;p&gt;Parameters either change the behavior or extends the functionality of a command. Let's see some of the alterations of SCP.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Identity file:   -i&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@123.12.123&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As I have already mentioned this option includes identity file (private key).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recursive:   -r&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@123.12.123&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This option recursively copies files from the source folder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Verbose:   -v&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@123.12.123&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This option gives you background information while transferring files as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;channel&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;: &lt;span class="nv"&gt;new&lt;/span&gt; [&lt;span class="nv"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;session&lt;/span&gt;]
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;Requesting&lt;/span&gt; &lt;span class="nv"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;more&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;sessions&lt;/span&gt;@&lt;span class="nv"&gt;openssh&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;Entering&lt;/span&gt; &lt;span class="nv"&gt;interactive&lt;/span&gt; &lt;span class="nv"&gt;session&lt;/span&gt;.
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;pledge&lt;/span&gt;: &lt;span class="nv"&gt;network&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;client_input_global_request&lt;/span&gt;: &lt;span class="nv"&gt;rtype&lt;/span&gt; &lt;span class="nv"&gt;hostkeys&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;@&lt;span class="nv"&gt;openssh&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt; &lt;span class="nv"&gt;want_reply&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;Sending&lt;/span&gt; &lt;span class="nv"&gt;environment&lt;/span&gt;.
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;Sending&lt;/span&gt; &lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="nv"&gt;LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;en_IN&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;Sending&lt;/span&gt; &lt;span class="nv"&gt;command&lt;/span&gt;: &lt;span class="nv"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;
&lt;span class="nv"&gt;Sending&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;modes&lt;/span&gt;: &lt;span class="nv"&gt;C0664&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;file_on_client&lt;/span&gt;
&lt;span class="nv"&gt;Sink&lt;/span&gt;: &lt;span class="nv"&gt;C0664&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;file_on_client&lt;/span&gt;
&lt;span class="nv"&gt;file_on_client&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;KB&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;:&lt;span class="mi"&gt;00&lt;/span&gt; 
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;client_input_channel_req&lt;/span&gt;: &lt;span class="nv"&gt;channel&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;rtype&lt;/span&gt; &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt; &lt;span class="nv"&gt;reply&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;channel&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;: &lt;span class="nv"&gt;free&lt;/span&gt;: &lt;span class="nv"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;session&lt;/span&gt;, &lt;span class="nv"&gt;nchannels&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;fd&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;clearing&lt;/span&gt; &lt;span class="nv"&gt;O_NONBLOCK&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="nv"&gt;fd&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;clearing&lt;/span&gt; &lt;span class="nv"&gt;O_NONBLOCK&lt;/span&gt;
&lt;span class="nv"&gt;Transferred&lt;/span&gt;: &lt;span class="nv"&gt;sent&lt;/span&gt; &lt;span class="mi"&gt;3556&lt;/span&gt;, &lt;span class="nv"&gt;received&lt;/span&gt; &lt;span class="mi"&gt;2600&lt;/span&gt; &lt;span class="nv"&gt;bytes&lt;/span&gt;, &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="nv"&gt;seconds&lt;/span&gt;
&lt;span class="nv"&gt;Bytes&lt;/span&gt; &lt;span class="nv"&gt;per&lt;/span&gt; &lt;span class="nv"&gt;second&lt;/span&gt;: &lt;span class="nv"&gt;sent&lt;/span&gt; &lt;span class="mi"&gt;1231&lt;/span&gt;.&lt;span class="mi"&gt;7&lt;/span&gt;, &lt;span class="nv"&gt;received&lt;/span&gt; &lt;span class="mi"&gt;900&lt;/span&gt;.&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="nv"&gt;debug1&lt;/span&gt;: &lt;span class="k"&gt;Exit&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Compressed: -C&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;private2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;ubuntu1&lt;/span&gt;&lt;span class="mf"&gt;@123.12.123&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;ubuntu2&lt;/span&gt;&lt;span class="mf"&gt;@321.21.321&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This option compresses transferring files only in the network, such that when they are received by the destination host, they would return to their original size. Thereby, transfer speed increases while large files are being transferred.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Preserves: -p&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;newfile&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="mf"&gt;@123.12.123&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This option preserves modification times, access times, and modes from the original file.&lt;/p&gt;
&lt;p&gt;If you want to explore more such parameters? Please refer SCP manual page with command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ man scp
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;SCP is a remote file copy program, that's suit perfectly in cases when you have to transfer data in a single pass. However, FTP is more recommended to transfer multiple files/directories, due to its better session-based control over the connection.&lt;/p&gt;
&lt;p&gt;Thanks for reading! And in case of a query, please feel free to write in the comments section below.&lt;/p&gt;</content><category term="encryption"></category><category term="file transfer"></category><category term="SCP"></category></entry><entry><title>Hands-on Guide on GPG Keys</title><link href="//thegeekyway.com/hands-on-guide-on-gpg-keys/" rel="alternate"></link><published>2018-03-05T22:35:00+05:30</published><updated>2018-03-05T22:35:00+05:30</updated><author><name>GeekyShacklebolt</name></author><id>tag:thegeekyway.com,2018-03-05:/hands-on-guide-on-gpg-keys/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/03/GPG_guide.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;GPG or GNU Privacy Guard is a complete and free implementation of the OpenPGP standard as defined by &lt;a href="https://www.ietf.org/rfc/rfc4880.txt"&gt;RFC4880&lt;/a&gt; (also known as PGP). It is a tool that provides encryption and signing services, using which, you can encrypt or sign your files, messages, emails and can even sign your github …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/03/GPG_guide.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;GPG or GNU Privacy Guard is a complete and free implementation of the OpenPGP standard as defined by &lt;a href="https://www.ietf.org/rfc/rfc4880.txt"&gt;RFC4880&lt;/a&gt; (also known as PGP). It is a tool that provides encryption and signing services, using which, you can encrypt or sign your files, messages, emails and can even sign your github commits. In this guide, let's get a walk through GPG keys and its use cases.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;GPG is basically an implementation of a cryptosystem that you can use to exchange encrypted or signed messages and it is based on &lt;a href="https://en.wikipedia.org/wiki/Public-key_cryptography"&gt;asymmetric cryptography&lt;/a&gt;. It fulfills the &lt;a href="http://whatis.techtarget.com/definition/Confidentiality-integrity-and-availability-CIA"&gt;CIA of security&lt;/a&gt; where &lt;strong&gt;"C"&lt;/strong&gt; stands for "Confidentiality", &lt;strong&gt;"I"&lt;/strong&gt; stands for "Integrity" and &lt;strong&gt;"A"&lt;/strong&gt; stands for "Availability".&lt;/p&gt;
&lt;h2&gt;Before Generating a Key Pair&lt;/h2&gt;
&lt;p&gt;In this tutorial, I am using &lt;strong&gt;"gpg2"&lt;/strong&gt;, but you may go with &lt;strong&gt;"gpg"&lt;/strong&gt; as well, because most of the commands are same for both. However, a comparison between both the versions is available at the end of this post.&lt;/p&gt;
&lt;p&gt;To generate a key pair, first make sure you can run the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --version
gpg &lt;span class="o"&gt;(&lt;/span&gt;GnuPG&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;.1.11
libgcrypt &lt;span class="m"&gt;1&lt;/span&gt;.6.5
Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2016&lt;/span&gt; Free Software Foundation, Inc.
License GPLv3+: GNU GPL version &lt;span class="m"&gt;3&lt;/span&gt; or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ~/.gnupg
Supported algorithms:
Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It gives the version number of &lt;strong&gt;gpg&lt;/strong&gt; like &lt;strong&gt;2.1.11&lt;/strong&gt;. If not, then you need to install it, the package is &lt;strong&gt;gnupg&lt;/strong&gt; (for gpg) or &lt;strong&gt;gnupg2&lt;/strong&gt; (for gpg2).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get update
$ sudo apt-get install gnupg2
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Generate a Key Pair&lt;/h2&gt;
&lt;p&gt;Simply run the following command to generate a new key pair.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --full-gen-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You may try this command with &lt;strong&gt;"sudo"&lt;/strong&gt; if required.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:- Either use "gpg", "gpg2", "sudo gpg" or "sudo gpg2". But whatever you use, keep that same.&lt;/strong&gt; That means, if &lt;strong&gt;"sudo gpg2" &lt;/strong&gt;worked for you, then keep it same for all the upcoming commands.&lt;/p&gt;
&lt;p&gt;This command will ask you the following questions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;What kind of key do you want (RSA, DSA, etc)?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
   You should go with default selection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Key size?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
   The longer, the better.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;How long should the key be valid?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
   It is good to give here some value e.i &lt;strong&gt;"2y"&lt;/strong&gt; (2 years) as it is suggested to all people that start with PGP to use an expiring key. Because at some point, you are likely to lose access to the private key, and then you can't revoke the key so that other people stop using it. But if it expires, everyone will stop using it at the expiration date.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Your real name?&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Your email address?&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Any comment?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
   For now, you may leave the comment empty. But comments are used to distinctly identify a key, in case you have multiple GPG keys.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Final confirmation (y/n)?&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Your passphrase&lt;/em&gt;?&lt;/strong&gt;&lt;br&gt;
   Enter a strong passphrase twice and proceed ahead.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At this point, &lt;strong&gt;GPG&lt;/strong&gt; will generate the keys using entropy. &lt;em&gt;Entropy&lt;/em&gt; describes the amount of unpredictability and nondeterminism that exists in a system. This entropy is needed to generate a secure set of keys. This process may take some time depending on how active your system is, and the key size you selected. The terminal may look like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;full&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;key&lt;/span&gt; 
&lt;span class="nv"&gt;gpg&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;GnuPG&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="c1"&gt;; Copyright (C) 2016 Free Software Foundation, Inc.&lt;/span&gt;
&lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;free&lt;/span&gt; &lt;span class="nv"&gt;software&lt;/span&gt;: &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;free&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;change&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;redistribute&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt;.
&lt;span class="nv"&gt;There&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;NO&lt;/span&gt; &lt;span class="nv"&gt;WARRANTY&lt;/span&gt;, &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;extent&lt;/span&gt; &lt;span class="nv"&gt;permitted&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;law&lt;/span&gt;.

&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="nv"&gt;select&lt;/span&gt; &lt;span class="nv"&gt;what&lt;/span&gt; &lt;span class="nv"&gt;kind&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt;:
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;DSA&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;Elgamal&lt;/span&gt;
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;DSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;selection&lt;/span&gt;? &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="nv"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;may&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;between&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt; &lt;span class="nv"&gt;bits&lt;/span&gt; &lt;span class="nv"&gt;long&lt;/span&gt;.
&lt;span class="nv"&gt;What&lt;/span&gt; &lt;span class="nv"&gt;keysize&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt;

&lt;span class="nv"&gt;Requested&lt;/span&gt; &lt;span class="nv"&gt;keysize&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt; &lt;span class="nv"&gt;bits&lt;/span&gt;
&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="nv"&gt;specify&lt;/span&gt; &lt;span class="nv"&gt;how&lt;/span&gt; &lt;span class="nv"&gt;long&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;should&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;valid&lt;/span&gt;.
&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;does&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;expire&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;days&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;weeks&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;months&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;years&lt;/span&gt;

&lt;span class="nv"&gt;Key&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;valid&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;
&lt;span class="nv"&gt;Key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;at&lt;/span&gt; &lt;span class="nv"&gt;Tuesday&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="nv"&gt;March&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt; &lt;span class="mi"&gt;02&lt;/span&gt;:&lt;span class="mi"&gt;08&lt;/span&gt;:&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt; &lt;span class="nv"&gt;IST&lt;/span&gt;
&lt;span class="nv"&gt;Is&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;correct&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;

&lt;span class="nv"&gt;GnuPG&lt;/span&gt; &lt;span class="nv"&gt;needs&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;construct&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="nv"&gt;ID&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;identify&lt;/span&gt; &lt;span class="nv"&gt;your&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;.

&lt;span class="nv"&gt;Real&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;: &lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;Name&lt;/span&gt;
&lt;span class="nv"&gt;Email&lt;/span&gt; &lt;span class="nv"&gt;address&lt;/span&gt;: &lt;span class="nv"&gt;your&lt;/span&gt;.&lt;span class="nv"&gt;email&lt;/span&gt;@&lt;span class="nv"&gt;example&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;
&lt;span class="nv"&gt;Comment&lt;/span&gt;: 
&lt;span class="nv"&gt;You&lt;/span&gt; &lt;span class="nv"&gt;selected&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ID&lt;/span&gt;:
&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Your Name &amp;lt;your.email@example.com&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;Change&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;ame&lt;/span&gt;, &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;omment&lt;/span&gt;, &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;mail&lt;/span&gt; &lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;O&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;kay&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Q&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;uit&lt;/span&gt;? &lt;span class="nv"&gt;O&lt;/span&gt;
&lt;span class="nv"&gt;We&lt;/span&gt; &lt;span class="nv"&gt;need&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;generate&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;lot&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;bytes&lt;/span&gt;. &lt;span class="nv"&gt;It&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;good&lt;/span&gt; &lt;span class="nv"&gt;idea&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;perform&lt;/span&gt;
&lt;span class="nv"&gt;some&lt;/span&gt; &lt;span class="nv"&gt;other&lt;/span&gt; &lt;span class="nv"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;keyboard&lt;/span&gt;, &lt;span class="nv"&gt;move&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;mouse&lt;/span&gt;, &lt;span class="nv"&gt;utilize&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt;
&lt;span class="nv"&gt;disks&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;during&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;prime&lt;/span&gt; &lt;span class="nv"&gt;generation&lt;/span&gt;&lt;span class="c1"&gt;; this gives the random number&lt;/span&gt;
&lt;span class="nv"&gt;generator&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;better&lt;/span&gt; &lt;span class="nv"&gt;chance&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;gain&lt;/span&gt; &lt;span class="nv"&gt;enough&lt;/span&gt; &lt;span class="nv"&gt;entropy&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Generate an Authentication Subkey&lt;/h2&gt;
&lt;p&gt;An authentication subkey is used if you want to use your GPG key for SSH authentication. To generate this, just follow these steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;\$ gpg2 --expert --edit-key your_key_id&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;addkey&lt;/strong&gt; (to select the operation)&lt;/li&gt;
&lt;li&gt;Select the type of key (e.i select "&lt;strong&gt;8&lt;/strong&gt;" for RSA)&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;'S'&lt;/strong&gt; to toggle signing to OFF.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;'E'&lt;/strong&gt; to toggle encrypting to OFF.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;'A'&lt;/strong&gt; to toggle authentication to ON.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;'Q'&lt;/strong&gt; to quit.&lt;/li&gt;
&lt;li&gt;Enter key size. (e.i &lt;strong&gt;4096&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Enter validity period. (e.i &lt;strong&gt;"2y"&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Confirm your entries.&lt;/li&gt;
&lt;li&gt;Confirm creation.&lt;/li&gt;
&lt;li&gt;Enter Passphrase twice.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After some time your authentication subkey would be generated. Output of the process is shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;expert&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;edit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="nv"&gt;EE456&lt;/span&gt;
&lt;span class="nv"&gt;gpg&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;GnuPG&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="c1"&gt;; Copyright (C) 2016 Free Software Foundation, Inc.&lt;/span&gt;
&lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;free&lt;/span&gt; &lt;span class="nv"&gt;software&lt;/span&gt;: &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;free&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;change&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;redistribute&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt;.
&lt;span class="nv"&gt;There&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;NO&lt;/span&gt; &lt;span class="nv"&gt;WARRANTY&lt;/span&gt;, &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;extent&lt;/span&gt; &lt;span class="nv"&gt;permitted&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;law&lt;/span&gt;.

&lt;span class="nv"&gt;Secret&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;available&lt;/span&gt;.

&lt;span class="nv"&gt;sec&lt;/span&gt; &lt;span class="nv"&gt;rsa4096&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="nv"&gt;EE456&lt;/span&gt;
 &lt;span class="nv"&gt;created&lt;/span&gt;: &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt;: &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt; &lt;span class="nv"&gt;usage&lt;/span&gt;: &lt;span class="nv"&gt;SC&lt;/span&gt; 
 &lt;span class="nv"&gt;trust&lt;/span&gt;: &lt;span class="nv"&gt;ultimate&lt;/span&gt;     &lt;span class="nv"&gt;validity&lt;/span&gt;: &lt;span class="nv"&gt;ultimate&lt;/span&gt;
&lt;span class="nv"&gt;ssb&lt;/span&gt; &lt;span class="nv"&gt;rsa4096&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7891&lt;/span&gt;&lt;span class="nv"&gt;EEFF&lt;/span&gt;
 &lt;span class="nv"&gt;created&lt;/span&gt;: &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt;: &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt; &lt;span class="nv"&gt;usage&lt;/span&gt;: &lt;span class="nv"&gt;E&lt;/span&gt; 
[&lt;span class="nv"&gt;ultimate&lt;/span&gt;] &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;. &lt;span class="nv"&gt;Real&lt;/span&gt; &lt;span class="nv"&gt;Name&lt;/span&gt; &lt;span class="nv"&gt;your&lt;/span&gt;.&lt;span class="nv"&gt;email&lt;/span&gt;@&lt;span class="nv"&gt;gmail&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;

&lt;span class="nv"&gt;gpg&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;addkey&lt;/span&gt;
&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="nv"&gt;select&lt;/span&gt; &lt;span class="nv"&gt;what&lt;/span&gt; &lt;span class="nv"&gt;kind&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt;:
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;DSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Elgamal&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;DSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;your&lt;/span&gt; &lt;span class="nv"&gt;own&lt;/span&gt; &lt;span class="nv"&gt;capabilities&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;your&lt;/span&gt; &lt;span class="nv"&gt;own&lt;/span&gt; &lt;span class="nv"&gt;capabilities&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;ECC&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;ECC&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;your&lt;/span&gt; &lt;span class="nv"&gt;own&lt;/span&gt; &lt;span class="nv"&gt;capabilities&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;ECC&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Existing&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;
&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;selection&lt;/span&gt;? &lt;span class="mi"&gt;8&lt;/span&gt;

&lt;span class="nv"&gt;Possible&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;: &lt;span class="nv"&gt;Sign&lt;/span&gt; &lt;span class="nv"&gt;Encrypt&lt;/span&gt; &lt;span class="nv"&gt;Authenticate&lt;/span&gt; 
&lt;span class="nv"&gt;Current&lt;/span&gt; &lt;span class="nv"&gt;allowed&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt;: &lt;span class="nv"&gt;Sign&lt;/span&gt; &lt;span class="nv"&gt;Encrypt&lt;/span&gt;

 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;authenticate&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Q&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Finished&lt;/span&gt;

&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;selection&lt;/span&gt;? &lt;span class="nv"&gt;S&lt;/span&gt;

&lt;span class="nv"&gt;Possible&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;: &lt;span class="nv"&gt;Sign&lt;/span&gt; &lt;span class="nv"&gt;Encrypt&lt;/span&gt; &lt;span class="nv"&gt;Authenticate&lt;/span&gt; 
&lt;span class="nv"&gt;Current&lt;/span&gt; &lt;span class="nv"&gt;allowed&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt;: &lt;span class="nv"&gt;Encrypt&lt;/span&gt;

&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;authenticate&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Q&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Finished&lt;/span&gt;

&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;selection&lt;/span&gt;? &lt;span class="nv"&gt;E&lt;/span&gt;

&lt;span class="nv"&gt;Possible&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;: &lt;span class="nv"&gt;Sign&lt;/span&gt; &lt;span class="nv"&gt;Encrypt&lt;/span&gt; &lt;span class="nv"&gt;Authenticate&lt;/span&gt; 
&lt;span class="nv"&gt;Current&lt;/span&gt; &lt;span class="nv"&gt;allowed&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt;:

&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;authenticate&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Q&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Finished&lt;/span&gt;

&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;selection&lt;/span&gt;? &lt;span class="nv"&gt;A&lt;/span&gt;

&lt;span class="nv"&gt;Possible&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;: &lt;span class="nv"&gt;Sign&lt;/span&gt; &lt;span class="nv"&gt;Encrypt&lt;/span&gt; &lt;span class="nv"&gt;Authenticate&lt;/span&gt; 
&lt;span class="nv"&gt;Current&lt;/span&gt; &lt;span class="nv"&gt;allowed&lt;/span&gt; &lt;span class="nv"&gt;actions&lt;/span&gt;: &lt;span class="nv"&gt;Authenticate&lt;/span&gt;

&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;sign&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Toggle&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;authenticate&lt;/span&gt; &lt;span class="nv"&gt;capability&lt;/span&gt;
 &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Q&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;Finished&lt;/span&gt;

&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;selection&lt;/span&gt;? &lt;span class="nv"&gt;Q&lt;/span&gt;
&lt;span class="nv"&gt;RSA&lt;/span&gt; &lt;span class="nv"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;may&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;between&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt; &lt;span class="nv"&gt;bits&lt;/span&gt; &lt;span class="nv"&gt;long&lt;/span&gt;.
&lt;span class="nv"&gt;What&lt;/span&gt; &lt;span class="nv"&gt;keysize&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt;
&lt;span class="nv"&gt;Requested&lt;/span&gt; &lt;span class="nv"&gt;keysize&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt; &lt;span class="nv"&gt;bits&lt;/span&gt;
&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="nv"&gt;specify&lt;/span&gt; &lt;span class="nv"&gt;how&lt;/span&gt; &lt;span class="nv"&gt;long&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;should&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;valid&lt;/span&gt;.
 &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;does&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;expire&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;days&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;weeks&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;months&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="nv"&gt;years&lt;/span&gt;
&lt;span class="nv"&gt;Key&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;valid&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;
&lt;span class="nv"&gt;Key&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt; &lt;span class="nv"&gt;at&lt;/span&gt; &lt;span class="nv"&gt;Thursday&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="nv"&gt;March&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt; &lt;span class="mi"&gt;02&lt;/span&gt;:&lt;span class="mi"&gt;30&lt;/span&gt;:&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt; &lt;span class="nv"&gt;IST&lt;/span&gt;
&lt;span class="nv"&gt;Is&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;correct&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;
&lt;span class="nv"&gt;Really&lt;/span&gt; &lt;span class="nv"&gt;create&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;
&lt;span class="nv"&gt;We&lt;/span&gt; &lt;span class="nv"&gt;need&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;generate&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;lot&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;bytes&lt;/span&gt;. &lt;span class="nv"&gt;It&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;good&lt;/span&gt; &lt;span class="nv"&gt;idea&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;perform&lt;/span&gt;
&lt;span class="nv"&gt;some&lt;/span&gt; &lt;span class="nv"&gt;other&lt;/span&gt; &lt;span class="nv"&gt;action&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;keyboard&lt;/span&gt;, &lt;span class="nv"&gt;move&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;mouse&lt;/span&gt;, &lt;span class="nv"&gt;utilize&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt;
&lt;span class="nv"&gt;disks&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;during&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;prime&lt;/span&gt; &lt;span class="nv"&gt;generation&lt;/span&gt;&lt;span class="c1"&gt;; this gives the random number&lt;/span&gt;
&lt;span class="nv"&gt;generator&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;better&lt;/span&gt; &lt;span class="nv"&gt;chance&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;gain&lt;/span&gt; &lt;span class="nv"&gt;enough&lt;/span&gt; &lt;span class="nv"&gt;entropy&lt;/span&gt;.

&lt;span class="nv"&gt;sec&lt;/span&gt; &lt;span class="nv"&gt;rsa4096&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="nv"&gt;EE456&lt;/span&gt;
 &lt;span class="nv"&gt;created&lt;/span&gt;: &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt;: &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt; &lt;span class="nv"&gt;usage&lt;/span&gt;: &lt;span class="nv"&gt;SC&lt;/span&gt; 
 &lt;span class="nv"&gt;trust&lt;/span&gt;: &lt;span class="nv"&gt;ultimate&lt;/span&gt; &lt;span class="nv"&gt;validity&lt;/span&gt;: &lt;span class="nv"&gt;ultimate&lt;/span&gt;
&lt;span class="nv"&gt;ssb&lt;/span&gt; &lt;span class="nv"&gt;rsa4096&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7891&lt;/span&gt;&lt;span class="nv"&gt;EEFF&lt;/span&gt;
 &lt;span class="nv"&gt;created&lt;/span&gt;: &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt;: &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt; &lt;span class="nv"&gt;usage&lt;/span&gt;: &lt;span class="nv"&gt;E&lt;/span&gt; 
&lt;span class="nv"&gt;ssb&lt;/span&gt; &lt;span class="nv"&gt;rsa4096&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nv"&gt;A127E44&lt;/span&gt;
 &lt;span class="nv"&gt;created&lt;/span&gt;: &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt;: &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="nv"&gt;usage&lt;/span&gt;: &lt;span class="nv"&gt;A&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Last 2 lines of the output show newly created authentication [A] subkey.&lt;/p&gt;
&lt;h2&gt;List Keys&lt;/h2&gt;
&lt;p&gt;To list all the public GPG keys. Give the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --list-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To obtain the key id in LONG (complete) format, use this flag &lt;strong&gt;"--keyid-format LONG".&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --list-keys --keyid-format LONG
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To list all the private GPG keys.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --list-secret-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All these commands give you the following information about your GPG keys and subkeys.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Which algorithm your keys use, e.i &lt;strong&gt;rsa.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Key size, e.i &lt;strong&gt;4096 bits.&lt;br&gt;
&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Key IDs, e.i &lt;strong&gt;123AB456&lt;/strong&gt; (this is the short key id of 8-bytes, in the long format you get the complete key id of 16-bytes).&lt;/li&gt;
&lt;li&gt;Date of creation.&lt;/li&gt;
&lt;li&gt;Their usage e.i  &lt;p .st&gt;&lt;strong&gt;'E'&lt;/strong&gt;=encryption, &lt;strong&gt;'S'&lt;/strong&gt;=signing, &lt;strong&gt;'C'&lt;/strong&gt;=certification, &lt;strong&gt;'A'&lt;/strong&gt;=authentication.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Their expiry date.&lt;/li&gt;
&lt;li&gt;Their trust level, e.i &lt;strong&gt;Ultimate, unknown, etc.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Name and Email associated with them that's also known as &lt;strong&gt;UID&lt;/strong&gt; "User ID".&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Exporting Keys&lt;/h2&gt;
&lt;p&gt;Exporting means, to bring out the keys from GPG database so that we may see or store them in files.&lt;/p&gt;
&lt;p&gt;If you want to see your GPG key in ASCII characters, then you need to export it to a file by the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --output public.key --armor --export your.email@example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;--output:&lt;/strong&gt; specifies the output file.&lt;br&gt;
&lt;strong&gt;--export:&lt;/strong&gt; to instruct GPG to export your public key.&lt;br&gt;
&lt;strong&gt;--armor:&lt;/strong&gt; to export in ASCII characters.&lt;/p&gt;
&lt;p&gt;Similarly, to export a private key directly on the terminal just change one flag.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --armor --export-secret-keys your.email@example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will ask for your passphrase. Here you may also add the &lt;strong&gt;--output&lt;/strong&gt; flag to put its output in a file as done in the previous command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Never give/share your private key anywhere. Keep it as secure as you can.&lt;/strong&gt; The private key is required to decrypt the data encrypted just for you. So, compromising this key may result in security issues whose severity depends on the data you deal with.&lt;/p&gt;
&lt;h2&gt;Fingerprints&lt;/h2&gt;
&lt;p&gt;A key can be verified by a number of ways. One such way is to use its fingerprint. The fingerprint is a shorter number (usually expressed as a 40-hexadecimal-digit number) that contains a cryptographically strong hash of the public key.&lt;/p&gt;
&lt;p&gt;To see the fingerprint of any GPG key associated with an email. Use this command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --fingerprint email@example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can cross check this fingerprint with the person to verify if it is trustworthy.&lt;/p&gt;
&lt;p&gt;Now when you have seen and understand your GPG keys. It's time to generate a revocation certificate.&lt;/p&gt;
&lt;h2&gt;Generating a Revocation Certificate&lt;/h2&gt;
&lt;p&gt;It is vital to have revocation certificate to declare your keys invalid in case your private key has been compromised or lost. It should be generated as soon as you generate your key pair, not when you need it. So, let's generate it with the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;output&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="nv"&gt;revocation&lt;/span&gt;.&lt;span class="nv"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;revoke&lt;/span&gt; &lt;span class="nv"&gt;your&lt;/span&gt;.&lt;span class="nv"&gt;email&lt;/span&gt;@&lt;span class="nv"&gt;example&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;
&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="nv"&gt;select&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;reason&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;revocation&lt;/span&gt;: 
 &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;No&lt;/span&gt; &lt;span class="nv"&gt;reason&lt;/span&gt; &lt;span class="nv"&gt;specified&lt;/span&gt;
 &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Key&lt;/span&gt; &lt;span class="nv"&gt;has&lt;/span&gt; &lt;span class="nv"&gt;been&lt;/span&gt; &lt;span class="nv"&gt;compromised&lt;/span&gt;
 &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Key&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;superseded&lt;/span&gt;
 &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Key&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;no&lt;/span&gt; &lt;span class="nv"&gt;longer&lt;/span&gt; &lt;span class="nv"&gt;used&lt;/span&gt;
 &lt;span class="nv"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Cancel&lt;/span&gt; 
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Probably&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;select&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;here&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; 
&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;decision&lt;/span&gt;? &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It would ask for your confirmation for generating the certificate and the reason for which you are creating this. It is also suggested that you should have revocation certificates for every possibility listed there for maximum flexibility, but for now, you may go for &lt;strong&gt;"0: No reason specified"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now give a comment (I left it empty) and your passphrase. Soon, your certificate is generated. You should keep this as secure and hidden as you keep your private keys. Here is the output.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;Enter&lt;/span&gt; &lt;span class="nv"&gt;an&lt;/span&gt; &lt;span class="nv"&gt;optional&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;&lt;span class="c1"&gt;; end it with an empty line:&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
&lt;span class="nv"&gt;Reason&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;revocation&lt;/span&gt;: &lt;span class="nv"&gt;No&lt;/span&gt; &lt;span class="nv"&gt;reason&lt;/span&gt; &lt;span class="nv"&gt;specified&lt;/span&gt;
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;No&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt; &lt;span class="nv"&gt;given&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;Is&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;okay&lt;/span&gt;? &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;
&lt;span class="nv"&gt;ASCII&lt;/span&gt; &lt;span class="nv"&gt;armored&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt; &lt;span class="nv"&gt;forced&lt;/span&gt;.
&lt;span class="nv"&gt;Revocation&lt;/span&gt; &lt;span class="nv"&gt;certificate&lt;/span&gt; &lt;span class="nv"&gt;created&lt;/span&gt;.

&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="nv"&gt;move&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;medium&lt;/span&gt; &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;can&lt;/span&gt; &lt;span class="nv"&gt;hide&lt;/span&gt; &lt;span class="nv"&gt;away&lt;/span&gt;&lt;span class="c1"&gt;; if Mallory gets&lt;/span&gt;
&lt;span class="nv"&gt;access&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;certificate&lt;/span&gt; &lt;span class="nv"&gt;he&lt;/span&gt; &lt;span class="nv"&gt;can&lt;/span&gt; &lt;span class="nv"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;make&lt;/span&gt; &lt;span class="nv"&gt;your&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;unusable&lt;/span&gt;.
&lt;span class="nv"&gt;It&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;smart&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;certificate&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;store&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;away&lt;/span&gt;, &lt;span class="nv"&gt;just&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;case&lt;/span&gt;
&lt;span class="nv"&gt;your&lt;/span&gt; &lt;span class="nv"&gt;media&lt;/span&gt; &lt;span class="nv"&gt;become&lt;/span&gt; &lt;span class="nv"&gt;unreadable&lt;/span&gt;. &lt;span class="nv"&gt;But&lt;/span&gt; &lt;span class="nv"&gt;have&lt;/span&gt; &lt;span class="nv"&gt;some&lt;/span&gt; &lt;span class="nv"&gt;caution&lt;/span&gt;: &lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;system&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt;
&lt;span class="nv"&gt;your&lt;/span&gt; &lt;span class="nv"&gt;machine&lt;/span&gt; &lt;span class="nv"&gt;might&lt;/span&gt; &lt;span class="nv"&gt;store&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;make&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;available&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;others&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order to save this file from unauthorized access, you may immediately put restrictions (if not present by default).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ chmod &lt;span class="m"&gt;600&lt;/span&gt; ~/revocation.crt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In case you want to revoke your key, then you would have to upload this revocation certificate to a public keyserver (assuming that you have already sent &lt;em&gt;your public key to a keyserver&lt;/em&gt;. See below.)&lt;/p&gt;
&lt;h2&gt;Sending and Importing Keys&lt;/h2&gt;
&lt;h4&gt;&lt;strong&gt;Sending:&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why are you using GPG keys in the first place?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Because with GPG you can sign messages or other people can encrypt messages to you.&lt;/p&gt;
&lt;p&gt;Therefore, to make your key publicly available might be of great help. So that, anyone can take your public key to encrypt messages to you. For this, we can send our public key to a keyserver.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Would it be safe to upload your public key on keyservers?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Absolutely yes, as I have already mentioned before that GPG works on &lt;a href="https://en.wikipedia.org/wiki/Public-key_cryptography"&gt;asymmetric cryptography&lt;/a&gt;, therefore having your public key to someone doesn't make a threat to your security. Because it is practically impossible to generate a private key from a public key.&lt;/p&gt;
&lt;p&gt;There are multiple keyservers available to hold public keys like, &lt;strong&gt;&lt;em&gt;&lt;a href="https://keys.fedoraproject.org/"&gt;keys.fedoraproject.org&lt;/a&gt;, &lt;a href="http://keyserver.ubuntu.com/"&gt;keyserver.ubuntu.com, etc&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;and they regularly synchronize among themselves. So if you send your key on &lt;em&gt;keyserver.ubuntu.com, then&lt;/em&gt; after some time, it would also be available at &lt;em&gt;keys.fedoraproject.org.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To send your key to the keyserver use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;keyserver&lt;/span&gt; &lt;span class="nv"&gt;keyserver_url&lt;/span&gt; &lt;span class="nv"&gt;key_id&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you don't want to upload your key to a keyserver (in case your communication is limited to a group of people) then you can also send your public key to them through email.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Importing:&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Importing means to include the key in your GPG database, so that you may use them in future. For example, if you wanna send your friends an encrypted message, which can be done with their public keys. Therefore, first, you would need to import their keys into your GPG system and then only you may use them for encryption.&lt;/p&gt;
&lt;p&gt;You can import the key of someone from a file, with the following command. For this, you must have their public key in a file say &lt;strong&gt;"their_gpg.key"&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;their_gpg.key&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now when you would list-keys with "&lt;strong&gt;gpg2 --list-keys&lt;/strong&gt;", this imported key will also be listed.&lt;/p&gt;
&lt;p&gt;But if the person's key is available at a keyserver, then you can also directly pull their keys from there. Because keyservers distribute public keys to anyone who requests them. Once you have sent your key to a keyserver, others can request your key using the command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --keyserver keyserver_url --recv-keys key_id
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To refresh all your keys from a keyserver, to obtain new signatures, new UIDs and new key revocations, use this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --refresh-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;kbd&gt;And to pull from specific servers, use this.&lt;/kbd&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --keyserver keyserver_url --refresh-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should do this regularly. But you may receive error messages if any of your keys cannot be found on the key server.&lt;/p&gt;
&lt;h2&gt;Signing Keys&lt;/h2&gt;
&lt;p&gt;A major benefit of GPG is that you can sign a file to prove that it is genuinely coming form you. Because signs are created using private keys and only the person who owns the GPG keys, have its private key (if not compromised or lost).&lt;/p&gt;
&lt;p&gt;Your key is already signed by you when it was created. That you may verify with.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --list-sig your.email@example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the output, the line after &lt;strong&gt;"sig"&lt;/strong&gt; shows the &lt;strong&gt;UID&lt;/strong&gt; of those people who have signed your key.&lt;/p&gt;
&lt;p&gt;You can also sign keys of other people (assuming that you have already imported the key of that person). Signing a key means you verify that you trust the person, who they claim to be. If you sign a person's key then sending the signed key back to him/her is a good idea, otherwise, they won't be able to take advantage of your sign. For this, you have 2 methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Method 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --sign-key person.email@example.com
$ gpg2 --output ~/signed.key --sign-key person.email@example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then you can send this "&lt;strong&gt;signed.key&lt;/strong&gt;" file to the person via mail.&lt;/p&gt;
&lt;p&gt;Once that person receives your signed key, then s//he can update their own GPG database to include your signature.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;signed.key&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Method 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;sign&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt;.&lt;span class="nv"&gt;email&lt;/span&gt;@&lt;span class="nv"&gt;example&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;
$ &lt;span class="nv"&gt;gpg2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;keyserver&lt;/span&gt; &lt;span class="nv"&gt;key_server&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;person_keyid&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will directly upload your sign to the keyserver (assuming that the person has sent his key to a keyserver). So when next time that person would refresh his/her GPG database, your sign would be included.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why should you sign a person's key?&lt;/em&gt;&lt;em&gt;&lt;br&gt;
&lt;/em&gt;Because this can help other people decide whether to trust that person too or not. If someone trusts you, and they see that you've signed this person's key, they may be more likely to trust their identity too. There is a concept behind signing a key known as &lt;/strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Web_of_trust"&gt;Web of Trust&lt;/a&gt;.** (see below)&lt;/p&gt;
&lt;h2&gt;Trust Levels and Validity&lt;/h2&gt;
&lt;p&gt;Trust levels is a medium by which we can inform GPG that how much we trust a UID of a person associated with a key.&lt;/p&gt;
&lt;p&gt;There are following trust levels available&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Unknown:&lt;/strong&gt; This is the default level that is set on validity and trust.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Undefined:&lt;/strong&gt; This is explicitly defining trust level to be unknown. Means you would like to confirm it later on.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Never:&lt;/strong&gt; This indicates that you do not trust the UID of that key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marginal:&lt;/strong&gt; This means you have half trust on the UID of that key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full:&lt;/strong&gt; This means you fully trust that person.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ultimate:&lt;/strong&gt; There is only one UID that is marked with &lt;strong&gt;Ultimate&lt;/strong&gt; trust, and that is of yourself.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More detail about trust-levels is available &lt;a href="https://gpgtools.tenderapp.com/kb/faq/what-is-ownertrust-trust-levels-explained"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You may check the &lt;strong&gt;trust&lt;/strong&gt; and &lt;strong&gt;validity&lt;/strong&gt; levels of any &lt;strong&gt;UID&lt;/strong&gt; among the keys you have imported, with this command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --edit-key email@example.com
gpg &lt;span class="o"&gt;(&lt;/span&gt;GnuPG&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;.1.11&lt;span class="p"&gt;;&lt;/span&gt; Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2016&lt;/span&gt; Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

pub rsa2048/4A5N1031
 created: &lt;span class="m"&gt;2016&lt;/span&gt;-10-10 expires: &lt;span class="m"&gt;2018&lt;/span&gt;-10-10 usage: SC 
 trust: unknown         validity: unknown
sub rsa2048/73E6DB92
 created: &lt;span class="m"&gt;2016&lt;/span&gt;-10-10 expires: &lt;span class="m"&gt;2018&lt;/span&gt;-10-10 usage: E 
&lt;span class="o"&gt;[&lt;/span&gt; unknown &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;. Person Name email@example.com

gpg: Q
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To modify &lt;strong&gt;trust&lt;/strong&gt; of the key, enter "&lt;strong&gt;trust"&lt;/strong&gt; instead of &lt;strong&gt;"Q"&lt;/strong&gt; (in the last line of output). And you'll get a prompt like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="nv"&gt;decide&lt;/span&gt; &lt;span class="nv"&gt;how&lt;/span&gt; &lt;span class="nv"&gt;far&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;trust&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;correctly&lt;/span&gt; &lt;span class="nv"&gt;verify&lt;/span&gt; &lt;span class="nv"&gt;other&lt;/span&gt; &lt;span class="nv"&gt;users&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; keys&lt;/span&gt;
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;looking&lt;/span&gt; &lt;span class="nv"&gt;at&lt;/span&gt; &lt;span class="nv"&gt;passports&lt;/span&gt;, &lt;span class="nv"&gt;checking&lt;/span&gt; &lt;span class="nv"&gt;fingerprints&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt; &lt;span class="nv"&gt;different&lt;/span&gt; &lt;span class="nv"&gt;sources&lt;/span&gt;, &lt;span class="nv"&gt;etc&lt;/span&gt;.&lt;span class="ss"&gt;)&lt;/span&gt;

 &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;don&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;t know or won&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;say&lt;/span&gt;
 &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nv"&gt;NOT&lt;/span&gt; &lt;span class="nv"&gt;trust&lt;/span&gt;
 &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;trust&lt;/span&gt; &lt;span class="nv"&gt;marginally&lt;/span&gt;
 &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;trust&lt;/span&gt; &lt;span class="nv"&gt;fully&lt;/span&gt;
 &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;trust&lt;/span&gt; &lt;span class="nv"&gt;ultimately&lt;/span&gt;
 &lt;span class="nv"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;back&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="nv"&gt;menu&lt;/span&gt;

&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;decision&lt;/span&gt;? &lt;span class="nv"&gt;m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enter your decision, and that trust level would be set for that key.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why do we have trust levels?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To understand this, first, you must understand &lt;strong&gt;validity.&lt;/strong&gt; When you sign a key, you say that the key is &lt;strong&gt;valid&lt;/strong&gt;. But you sign a key if and only if you are sure, that the key belongs the person whose UID is attached to the key. This verification could be done by personally contacting that person and cross-checking the fingerprint of the key.&lt;/p&gt;
&lt;p&gt;Isn't it a tedious task to every time contacting people just to confirm the fingerprint of their GPG key? Especially, in the case when you haven't met that person before. Therefore, we have something called &lt;strong&gt;"&lt;a href="https://en.wikipedia.org/wiki/Web_of_trust"&gt;Web of Trust&lt;/a&gt;".&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Suppose you trust "&lt;strong&gt;Mike&lt;/strong&gt;" and &lt;strong&gt;"John"&lt;/strong&gt; that they sign GPG keys of other people only after completely verifying a UID. Then giving following &lt;strong&gt;Trust-levels&lt;/strong&gt; to them would affect your key as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Unknown/Undefined&lt;/strong&gt; to &lt;strong&gt;Mike:&lt;/strong&gt; Keys signed by Mike won't be valid for you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Never&lt;/strong&gt; to &lt;strong&gt;Mike:&lt;/strong&gt; Same as above, but here you have explicitly given that you don't trust &lt;strong&gt;Mike.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marginal&lt;/strong&gt; to &lt;strong&gt;Mike:&lt;/strong&gt; Keys signed by Mike will be marginally valid for you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marginal&lt;/strong&gt; to &lt;strong&gt;Mike&lt;/strong&gt; and &lt;strong&gt;John:&lt;/strong&gt; Keys signed by both Mike and John will be valid for you (if the marginal limit is set to 2, otherwise if the marginal limit is set to &lt;strong&gt;"n"&lt;/strong&gt; then a key becomes valid if it is signed by &lt;strong&gt;"n"&lt;/strong&gt; UIDs).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; to &lt;strong&gt;Mike:&lt;/strong&gt; Keys signed by Mike will be valid for you as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I recommend you to read &lt;a href="https://www.gnupg.org/gph/en/manual/x334.html"&gt;this document&lt;/a&gt; to get a better understanding of trust-levels and validity.&lt;/p&gt;
&lt;h2&gt;Encryption-Decryption with GPG&lt;/h2&gt;
&lt;h4&gt;Encrypting a file&lt;/h4&gt;
&lt;p&gt;To encrypt and sign a file for a recipient you must have his/her public key imported.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 -r email.of.recipient@example.com -r your.email@example.com --encrypt --sign --armor file_name
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gpg2:&lt;/strong&gt; command&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-r:&lt;/strong&gt; to give email_address to possible recipients (who can decrypt this file).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-r:&lt;/strong&gt; adding yourself as one of the recipients so that you can also decrypt the file otherwise after encrypting, even you won't be able to decrypt it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--encrypt:&lt;/strong&gt; instructing to encrypt.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--sign:&lt;/strong&gt; instructing to sign the file as well.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--armor:&lt;/strong&gt; to encrypt in ASCII characters.&lt;strong&gt; &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file_name:&lt;/strong&gt; complete path of the file, If you omit this part, then after giving this command, the terminal will wait for you to enter the text. When you are done with entering your message, press &lt;strong&gt;CTRL + d&lt;/strong&gt; (Linux). It would generate the encrypted form of your message, which you may copy to clipboard and paste in any file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you haven't set any trust level for that recipient, then you are likely to get here a confirmation prompt for using the recipient's public key for encryption. And finally, it would prompt you for your passphrase.&lt;/p&gt;
&lt;p&gt;Soon an encrypted file would be created with &lt;strong&gt;.asc&lt;/strong&gt; extension. But still, that unencrypted file is available. You are yourself responsible to delete the original file.&lt;/p&gt;
&lt;h4&gt;Decrypting a file&lt;/h4&gt;
&lt;p&gt;To decrypt a file that was encrypted by your public key just use.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 file_name.asc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It would ask for your passphrase and a decrypted file would be available to you without "&lt;strong&gt;.asc"&lt;/strong&gt; extension.&lt;/p&gt;
&lt;p&gt;If the encrypted file was also &lt;strong&gt;signed&lt;/strong&gt; by the sender, then the output of above command would also give information about signature like &lt;strong&gt;&lt;em&gt;date_of_signature&lt;/em&gt;&lt;/strong&gt; and &lt;em&gt;&lt;strong&gt;status_of_signature&lt;/strong&gt; (good or bad)&lt;/em&gt; otherwise not.&lt;/p&gt;
&lt;h2&gt;Signed messages&lt;/h2&gt;
&lt;h4&gt;&lt;strong&gt;Clearsign:&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Using GPG you may send signed files without encryption. Create a file say "&lt;strong&gt;newfile&lt;/strong&gt;", add some message to it and sign it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; newfile
$ gpg2 --clearsign newfile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;--clearsign:&lt;/strong&gt; wraps the message without encryption with your &lt;strong&gt;armored&lt;/strong&gt; signature, so that any non-GPG user can read the message and any GPG user can verify it (if needed).&lt;/p&gt;
&lt;p&gt;Soon "&lt;strong&gt;newfile.asc&lt;/strong&gt;" would be created and anyone can verify, that it is signed by you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --verify newfile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But it can give you warning of not having a detached signature.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;detached&lt;/span&gt; &lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;newfile&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;NOT&lt;/span&gt; &lt;span class="n"&gt;verified&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(if yes, see below)&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Detached signature:&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Till now newfile&lt;strong&gt;.&lt;/strong&gt;asc consisted both unencrypted message and signature in the same file. To solve this issue, we can sign a file with a detached signature so that the file and the signature can be kept separately.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --detach-sign newfile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now a new file with name "&lt;strong&gt;newfile.sig&lt;/strong&gt;" is created which contains just your signature. You may verify that with.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg2 --verify newfile.sig
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will return verification statement and signature's information, together with the attached file's name. Now, if you change the file's (newfile) content and again check for verification, then it would fail. Because the new content wasn't signed by the signer. This way GPG maintains &lt;strong&gt;"Integrity"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In case the signature verification failed, then understand that the content of the message has been modified in between.&lt;/p&gt;
&lt;h2&gt;Integrated with GPG&lt;/h2&gt;
&lt;h4&gt;Thunderbird&lt;/h4&gt;
&lt;p&gt;You can use an email client like Thunderbird to automatically encrypt and sign your emails. For this, you would need to install an addon "&lt;strong&gt;Enigmail&lt;/strong&gt;" in your Thunderbird and configure it. To configure Thunderbird proceed as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open &lt;strong&gt;Thunderbird.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;From &lt;strong&gt;Menu Bar -&gt; Tools -&gt; Add-ons&lt;/strong&gt;, install &lt;strong&gt;Enigmail.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;From &lt;strong&gt;Menu Bar -&gt; Enigmail -&gt; Setup Wizard&lt;/strong&gt;, configure it.&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Standard Configuration&lt;/strong&gt; then &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Now Select your GPG key and Complete the wizard.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now whenever you would send any mail to the email ID that you have already imported in GPG, your Thunderbird will itself encrypt it. You may explore more configuration options at &lt;strong&gt;Menu Bar -&gt; Enigmail.&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;Github and Git&lt;/h4&gt;
&lt;p&gt;You can add your GPG key to your &lt;strong&gt;GitHub profile&lt;/strong&gt; and can configure your &lt;strong&gt;Git&lt;/strong&gt; to sign your commits. Follow these steps or refer &lt;a href="https://help.github.com/articles/signing-commits-with-gpg/"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To add your key to Github:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Login to your &lt;strong&gt;Github&lt;/strong&gt; account.&lt;/li&gt;
&lt;li&gt;At upper-right corner, click your profile photo and select &lt;strong&gt;Settings.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;From left panel select &lt;strong&gt;SSH and GPG keys&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;New GPG key&lt;/strong&gt; button.&lt;/li&gt;
&lt;li&gt;Paste your &lt;strong&gt;GPG public key&lt;/strong&gt; there.&lt;br&gt;
   You can export your GPG public key to your terminal with&lt;br&gt;
&lt;strong&gt;\$ gpg2 --armor --export&lt;br&gt;
&lt;/strong&gt;Select your complete GPG public key and &lt;strong&gt;CTRL + SHIFT + C&lt;/strong&gt; to copy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;To configure git with GPG key:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;\$ gpg2 --list-keys --keyid-format LONG&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Copy your complete key ID.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;\$ git config --global user.signingkey your_key_id&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now to sign your commits you may use &lt;strong&gt;-S&lt;/strong&gt; flag in your &lt;strong&gt;git commit&lt;/strong&gt; command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git commit -S -m &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will be prompted to enter your passphrase while making commits.&lt;/p&gt;
&lt;h2&gt;A Brief Comparison of GPG and GPG2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GPG2 is extended version of GPG. Where changes are mostly in internal levels, thus commands are same.&lt;/li&gt;
&lt;li&gt;A major change between GPG and GPG2 is that all the crypto operations have been moved to the GPG agent, so without an agent, GPG2 can't work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;man gpg2 &lt;/strong&gt;command gives the following statement &lt;em&gt;"In contrast to the standalone version gpg, which is more suited for server and embedded platforms, this version is commonly installed under the name gpg2 and more targeted to the desktop as it requires several other modules to be installed."&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;An important change came with GPG 2.1, which combines the formerly separated public and private keyrings (pubring.gpg and secring.gpg) into the public keyring.&lt;/li&gt;
&lt;li&gt;Explore more about what's new in GPG2 &lt;a href="https://www.gnupg.org/faq/whats-new-in-2.1.html"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;GPG is a recommended tool if you don't want to compromise security in your communication with people over an unsecured network like our Internet.&lt;/p&gt;
&lt;p&gt;Regardless whether you are sending a sensitive information or a friendly message, using GPG keys is extremely helpful to verify that the author of the message is genuine. Thanks for reading, and in case of a query or suggestions to improve this post, please feel free to write in the comments section below.&lt;/p&gt;</content><category term="encryption"></category><category term="GPG"></category><category term="security"></category></entry><entry><title>Blue-Green Deployment</title><link href="//thegeekyway.com/blue-green-deployment/" rel="alternate"></link><published>2018-02-15T17:11:00+05:30</published><updated>2018-02-15T17:11:00+05:30</updated><author><name>GeekyShacklebolt</name></author><id>tag:thegeekyway.com,2018-02-15:/blue-green-deployment/</id><summary type="html">&lt;p&gt;A few glimpse of past reminds us that application deployment on clouds was really a cumbersome task. Not only because the rollback was a pretty much complex operation to carry out, but also, because of huge outage or downtime, which inevitably used to disappoint users. But as we can see …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few glimpse of past reminds us that application deployment on clouds was really a cumbersome task. Not only because the rollback was a pretty much complex operation to carry out, but also, because of huge outage or downtime, which inevitably used to disappoint users. But as we can see nowadays, there are some simpler and more efficient ways to perform the same. We are going to discuss one such technique, that is called "Blue-Green Deployment".&lt;!--more--&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/02/Blue-green-deployment.png" title="Blue-Green Deployment"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Before we jump on to understand Blue-Green Deployment, let's first discuss some relevant terms in brief.&lt;/p&gt;
&lt;h3&gt;Deployment:&lt;/h3&gt;
&lt;p&gt;This term is often get confused with the word "release" due to their versatile usage. Thus, their definition may vary with the context of talk. But here, "release" is just a version number of an application, that always doesn't need to deploy. However, "deployment" is the process of installation and configuration of an application on a targeted hardware.&lt;/p&gt;
&lt;h3&gt;Downtime or Outage:&lt;/h3&gt;
&lt;p&gt;This is the period of time in which the system fails or it remains unavailable to reply to client's requests. This is either a manifestation of the system crash or during routine maintenance.&lt;/p&gt;
&lt;h3&gt;Load Balancer:&lt;/h3&gt;
&lt;p&gt;This can be a hardware device or a software component. It's main feature is to spread the traffic over the server pool, such that, no server is overly burdened while others remain idle. This can also be used to divert network traffic from one server pool to another. We'll see its usage in blue-green deployment. &lt;a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/what-is-load-balancing.html"&gt;Elastic load balancing&lt;/a&gt; is also available to handle multiple elastic clouds.&lt;/p&gt;
&lt;p&gt;Let's understand about Blue-Green Deployment technique now.&lt;/p&gt;
&lt;h2&gt;Blue-Green Deployment:&lt;/h2&gt;
&lt;p&gt;This is also known as &lt;strong&gt;Red-Black Deployment&lt;/strong&gt;. This is a technique used in application deployment which reduces the risk of downtime and also facilitates the rollback (moving to the previous state). Let us see how it exactly happens.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Workflow of blue-green deployment using a load balancer:&lt;/strong&gt;&lt;br&gt;
For this technique, we need 2 identically configured hardware components or server pools. Out of which:-&lt;br&gt;
- one is termed as &lt;strong&gt;"blue"&lt;/strong&gt; that is going to be an &lt;strong&gt;active&lt;/strong&gt; environment&lt;br&gt;
- another one is termed as &lt;strong&gt;"green"&lt;/strong&gt; that would be an &lt;strong&gt;idle&lt;/strong&gt; environment.&lt;/p&gt;
&lt;p&gt;Initially, some applications &lt;strong&gt;(e.i app1 ver1, app2 ver1)&lt;/strong&gt; are running in our blue environment. As shown in the picture.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/02/Active-blue-env.png" title="Active blue environment"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Suppose, now we come up with different versions of applications &lt;strong&gt;(i.e. app1 ver2, app2 ver2)&lt;/strong&gt;. We want them to deploy and then test these applications. If everything goes right, we'll use these versions in future, but if not, then we would go for the "rollback".&lt;/p&gt;
&lt;p&gt;Let's accomplish this using blue-green deployment:&lt;/p&gt;
&lt;p&gt;1. Deploy new versions of application in idle environment&lt;br&gt;
2. Here a testing team may test the working of these new versions.&lt;br&gt;
3. Gradually, using load balancer we start diverting the traffic to this green environment. As shown in the picture. With this live testing is also possible.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/02/Active-blue-green-env.png" title="Diverting traffic from blue to green environment"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;4. If now, these versions fail or crash due to any possible reason. We can quickly roll back to the previous versions in the blue environment using the load balancer.&lt;br&gt;
5. If new versions are found to be perfectly interacting with the user's traffic, then this &lt;strong&gt;"green"&lt;/strong&gt; environment is kept to be &lt;strong&gt;active&lt;/strong&gt; and &lt;strong&gt;"blue"&lt;/strong&gt; becomes &lt;strong&gt;idle&lt;/strong&gt;.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2018/02/Active-green-env.png" title="Active green environment"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After successful blue-green deployment, the idle environment is either used to deploy the next version of the application or is simply destroyed.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;strong&gt;Some points to ponder:&lt;/strong&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blue-green deployment is widely used nowadays to get minimum or zero downtime. It is used by different cloud service providers like AWS (Amazon Web Services), DigitalOcean, etc.&lt;/li&gt;
&lt;li&gt;Using load balancer is not the only way to implement blue-green environments. Different methods are also available like elastic IPs, DNS routing, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Advantages of blue-green deployment:&lt;/h5&gt;
&lt;p&gt;1. Fast rollback&lt;br&gt;
2. Reduced downtime&lt;br&gt;
3. Allow testing in a live production environment without affecting 100% user base.&lt;/p&gt;
&lt;h5&gt;Disadvantages of blue-green deployment:&lt;/h5&gt;
&lt;p&gt;1. Database dependent:&lt;br&gt;
Implementing blue-green deployment become complex with the database, especially if, the database schema is changed in the new version.&lt;br&gt;
2. Increasingly more difficult at scale&lt;/p&gt;
&lt;p&gt;If you've any questions about Blue Green Deployment, please let us know in the comments section below.&lt;/p&gt;</content><category term="deployment"></category></entry><entry><title>What is Git Blame &amp; it's usecases</title><link href="//thegeekyway.com/what-is-git-blame-and-its-usecases/" rel="alternate"></link><published>2018-02-06T18:50:00+05:30</published><updated>2018-02-06T18:50:00+05:30</updated><author><name>storymode7</name></author><id>tag:thegeekyway.com,2018-02-06:/what-is-git-blame-and-its-usecases/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;h3&gt;&lt;img alt="Git Logo" src="//thegeekyway.com/uploads/images/2018/02/Git-logo-2.png"&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;h3&gt;Git Blame&lt;/h3&gt;
&lt;p&gt;Have you ever wondered who touched a bunch of lines in this code last time? There have been lot of situations which can leave people baffled for a while to know who actually changed what. Blame labels each line in the code with the details of the last …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;h3&gt;&lt;img alt="Git Logo" src="//thegeekyway.com/uploads/images/2018/02/Git-logo-2.png"&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;h3&gt;Git Blame&lt;/h3&gt;
&lt;p&gt;Have you ever wondered who touched a bunch of lines in this code last time? There have been lot of situations which can leave people baffled for a while to know who actually changed what. Blame labels each line in the code with the details of the last revision that took place on that part of the file, including moving the line from one place to other.&lt;/p&gt;
&lt;h3&gt;Ideology behind the concept&lt;/h3&gt;
&lt;p&gt;When you study a code, a very large one. Like some parts of CPython repo. You will eventually find yourself at a stage where you do not understand what the code does there. Why is it there? Had it not been there would it affect the code in any manner? You need to guess it how it must have been used. But the author of that commit, the one who actually wrote it, must have known what he/she meant to do by introducing that tricky part. And that should be explained in the commit message that the person must have written. Here's when git blame plays it's card (also pickaxe, discussed later), and helps the user to identify who actually did the last revision on that commit. Also, it can easily help to seek an individual who is responsible for the current state of the code and hence can be blamed if the code breaks there.&lt;/p&gt;
&lt;p&gt;To check it out, the simplest way is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;blame&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will give you result in the format&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="k"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;  &lt;span class="nb"&gt;Date&lt;/span&gt;  &lt;span class="n"&gt;Time&lt;/span&gt;  &lt;span class="n"&gt;UTC&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Offset&lt;/span&gt;  &lt;span class="n"&gt;Line&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The actual line goes in front of these.&lt;/p&gt;
&lt;h3&gt;Refactoring Code&lt;/h3&gt;
&lt;p&gt;It's the process referring to rearranging different parts of an already existing program to make it more readable. It also includes adding or modifying a part without changing the ultimate objective it was created to serve. That means in code refactoring you can modify a piece of code to make it more readable, given that you do not change what it was supposed to do. Which sometimes not only makes it look more appealing but also enables one to be able to see hidden bugs. One very interesting term named &lt;a href="https://en.wikipedia.org/wiki/Code_smell"&gt;code smell&lt;/a&gt; is also used in the similar sense sometimes. It means the sense that certain part of the code indicates a deeper problem. Though it may work, it is a weak point to the code, which can be dealt with decomposition (breaking a large problem into smaller pieces that are more understandable) and then refactor it.&lt;/p&gt;
&lt;p&gt;But blame shows the last revision, so when a code piece is refactored, what happens is, the blame changes to the person who did the movement of the line from one place to other for the readability's sake. This is both good and bad.&lt;/p&gt;
&lt;p&gt;Good because, if the code breaks due to improper refactoring, then the person responsible can be identified. It is very necessary to identify such person if the improper refactoring was intentional and was an attempt to hamper the project. But mostly this is not the case, since tests in the project repo breaks in most of the projects. From this comes the bad part. If the line moved or copied is blamed to the person refactoring the code, then it's almost useless. You cannot understand why the line was placed there seeing a refactoring commit.&lt;/p&gt;
&lt;p&gt;This problem can be solved by the pickaxe.&lt;/p&gt;
&lt;h3&gt;Pickaxe&lt;/h3&gt;
&lt;p&gt;Pickaxe is not a new command. It's just git log with &lt;a href="https://git-scm.com/docs/git-log#git-log--Sltstringgt"&gt;-S&lt;/a&gt; argument. But it's not the syntax what's interesting. It's what pickaxe is capable of doing. It searches for a commit where a string was added or removed. And so you can easily reach to the actual author of the commit.&lt;/p&gt;
&lt;p&gt;It's syntax is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;search&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another preferred way is to use -p option simultaneously which will also generate a patch or a diff of the commit. It's then easier to see what change took place in which commit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;search&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this, you can also specify the filename in which to search this specific string, but it loses when the filename is changed in a commit. So at times, it's better not to specify the filename and search among the results that are displayed.&lt;/p&gt;
&lt;p&gt;Git blame comes with GUI for Tcl/Tk based interface versions, where it does both pickaxe and blame together! It lists the original commits, (the ones which created the said line), and the latest commit on that line including moving and copying it from one place to another in the file. You can further explore more on this.&lt;/p&gt;
&lt;p&gt;If you've any questions, please feel free to ask in the comments section below.&lt;/p&gt;</content><category term="GitHub"></category><category term="Understanding Git"></category></entry><entry><title>What are dotfiles?</title><link href="//thegeekyway.com/what-are-dotfiles/" rel="alternate"></link><published>2018-01-26T18:04:00+05:30</published><updated>2018-01-26T18:04:00+05:30</updated><author><name>GeekyShacklebolt</name></author><id>tag:thegeekyway.com,2018-01-26:/what-are-dotfiles/</id><summary type="html">&lt;p&gt;What happens when your hard disk fries, or eventually you want to get a new machine? You tend up to loose all your dev configuration after years of hard work tweaking things here and there according to your liking.&lt;/p&gt;
&lt;p&gt;Configuring a dev machine according to your liking would've been a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;What happens when your hard disk fries, or eventually you want to get a new machine? You tend up to loose all your dev configuration after years of hard work tweaking things here and there according to your liking.&lt;/p&gt;
&lt;p&gt;Configuring a dev machine according to your liking would've been a really daunting task until and unless there were dotfiles.&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;These are simply the files whose names start with a dot (.) like &lt;strong&gt;&lt;em&gt;.vimrc, .bashrc, .ssh, &lt;/em&gt;&lt;/strong&gt;etc. And any file that begins with a &lt;strong&gt;&lt;em&gt;dot&lt;/em&gt;&lt;/strong&gt; is treated as hidden in all *&lt;strong&gt;nix&lt;/strong&gt; operating systems. Therefore, having lots of dotfiles even in your home directory does not make it looks clumsy.&lt;/p&gt;
&lt;h3&gt;Where are dotfiles needed?&lt;/h3&gt;
&lt;p&gt;They are mainly used for software configuration. Therefore, they are also known as &lt;strong&gt;configuration files&lt;/strong&gt;. We can always configure different tools that we use daily, easily using dotfiles.&lt;br&gt;
They can also be used to automate a series of package installations. Their usefulness lies in the fact that anytime you can buy a new system and configure it like, you've been using it for years.&lt;/p&gt;
&lt;h3&gt;How to use dotfiles?&lt;/h3&gt;
&lt;p&gt;In order to maximize their utilization, we should save our dotfiles somewhere. That may be a USB drive, cloud storage and what most people use nowadays is, the GitHub repository. The idea is, they remain within our reach while switching between different machines.&lt;/p&gt;
&lt;p&gt;There are different dotfiles for different purposes. For example, &lt;strong&gt;&lt;em&gt;.bashrc&lt;/em&gt;&lt;/strong&gt; to configure bash and similarly &lt;strong&gt;&lt;em&gt;.zshrc&lt;/em&gt;&lt;/strong&gt; to configure zsh. We can also create our own dotfiles for different purposes like &lt;strong&gt;&lt;em&gt;.aliases &lt;/em&gt;&lt;/strong&gt;to declare all modified commands and &lt;strong&gt;&lt;em&gt;.export&lt;/em&gt;&lt;/strong&gt; to set environment variables we need. In this tutorial, we'll see a couple of examples to show the working of these dotfiles. Let's go ahead!&lt;/p&gt;
&lt;h4&gt;.bashrc&lt;/h4&gt;
&lt;p&gt;This is the default file, that runs every time when we open our bash. Either we can directly write all the bash configurations in this file or we can use a distributive approach, like having &lt;strong&gt;functions&lt;/strong&gt; in one file and OS specific settings in different files, etc. Following is an example of a &lt;strong&gt;&lt;em&gt;.bashrc.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;$PS1&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This means that, if &lt;strong&gt;"\$PS1"&lt;/strong&gt; will return a non-empty string, then load &lt;strong&gt;&lt;em&gt;.profile.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;.profile&lt;/h4&gt;
&lt;p&gt;We may use this to load OS-specific settings, and all other dotfiles, like &lt;strong&gt;&lt;em&gt;.functions, .aliases, .exports,&lt;/em&gt;&lt;/strong&gt; etc. Let's take a look.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# &lt;span class="nv"&gt;Load&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;extra&lt;/span&gt;, &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;exports&lt;/span&gt;, &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;aliases&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;functions&lt;/span&gt;
# &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;extra&lt;/span&gt; &lt;span class="nv"&gt;can&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;used&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;settings&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;don&lt;/span&gt;’&lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;commit&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;.{&lt;span class="nv"&gt;exports&lt;/span&gt;,&lt;span class="nv"&gt;aliases&lt;/span&gt;,&lt;span class="nv"&gt;functions&lt;/span&gt;,&lt;span class="nv"&gt;extra&lt;/span&gt;}&lt;span class="c1"&gt;; do&lt;/span&gt;
    [ &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;$file&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; ] &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;source&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;$file&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;done&lt;/span&gt;
&lt;span class="nv"&gt;unset&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt;

# &lt;span class="nv"&gt;Detect&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;OS&lt;/span&gt; &lt;span class="nv"&gt;specific&lt;/span&gt; &lt;span class="nv"&gt;settigs&lt;/span&gt;
&lt;span class="nv"&gt;platform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;unknown&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;unamestr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;uname&lt;/span&gt;`
&lt;span class="k"&gt;if&lt;/span&gt; [[ &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;$unamestr&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Linux&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; ]]&lt;span class="c1"&gt;; then&lt;/span&gt;
   &lt;span class="nv"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;linux&lt;/span&gt;
&lt;span class="nv"&gt;elif&lt;/span&gt; [[ &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;$unamestr&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;FreeBSD&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; ]]&lt;span class="c1"&gt;; then&lt;/span&gt;
   &lt;span class="nv"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;freebsd&lt;/span&gt;
&lt;span class="nv"&gt;elif&lt;/span&gt; [[ &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;$unamestr&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Darwin&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; ]]&lt;span class="c1"&gt;; then&lt;/span&gt;
   &lt;span class="nv"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;.&lt;span class="nv"&gt;osx&lt;/span&gt;
&lt;span class="nv"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;.aliases&lt;/h4&gt;
&lt;p&gt;An alias can either be a modified command, or a shorthand for it that we may define ourselves. Suppose, for git commit, we always write &lt;em&gt;&lt;code&gt;git commit -m "commit message"&lt;/code&gt;.&lt;/em&gt; In this case, we can create an alias by &lt;em&gt;&lt;code&gt;alias gcm=git commit -m&lt;/code&gt;&lt;/em&gt; with this, &lt;strong&gt;&lt;em&gt;gcm &lt;/em&gt;&lt;/strong&gt;is same as &lt;strong&gt;&lt;em&gt;git commit -m.&lt;/em&gt;&lt;/strong&gt; Following is a gist of a &lt;strong&gt;&lt;em&gt;.aliases&lt;/em&gt;&lt;/strong&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# | Network |&lt;/span&gt;
&lt;span class="c1"&gt;# ------------------------------------------------------------------------------&lt;/span&gt;

&lt;span class="c1"&gt;# Enhanced WHOIS lookups&lt;/span&gt;
&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;whois&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;whois -h whois-servers.net&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# IP addresses&lt;/span&gt;
&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;curl ipinfo.io/ip&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;localip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;python -c &amp;quot;import socket; print(socket.gethostbyname(socket.gethostname()));&amp;quot;&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Copy my public key to my clipboard&lt;/span&gt;
&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;pubkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;more ~/.ssh/id_rsa.pub | pbcopy | echo &amp;#39;=&amp;gt; Public key copied to pasteboard.&amp;#39;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The complete file is &lt;a href="https://github.com/CuriousLearner/dotfiles/blob/master/.aliases"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;.exports&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Export&lt;/strong&gt; is widely used to set environment variables. Also, we &lt;strong&gt;export&lt;/strong&gt; a variable, when we need it in other programs. That depends upon the shell as well. For bash, &lt;strong&gt;export&lt;/strong&gt; makes a variable usable, in the environment for child processes. For more about export, you may see &lt;a href="http://www.gnu.org/software/bash/manual/bash.html#index-export"&gt;GNU bash manual&lt;/a&gt;. Your &lt;strong&gt;&lt;em&gt;.export &lt;/em&gt;&lt;/strong&gt;file may look like &lt;a href="https://github.com/CuriousLearner/dotfiles/blob/master/.exports"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;editor&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;EDITOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;vim&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Don&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;clear&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="k"&gt;after&lt;/span&gt; &lt;span class="n"&gt;quitting&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;manual&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;MANPAGER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;less -X&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Larger&lt;/span&gt; &lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="n"&gt;history&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="err"&gt;³&lt;/span&gt; &lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;HISTSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;32768&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;HISTFILESIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;HISTSIZE&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;HISTCONTROL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ignoredups&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;.functions&lt;/h4&gt;
&lt;p&gt;If we want to create an alias that not just perform a shorthand or a group of commands but, also which behaves conditionally and can work with variables, then we have a better approach of &lt;strong&gt;"functions". &lt;/strong&gt;A function is an independent block of script, which is more powerful than an alias because they can accept variables. We can create functions for various purposes like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;# copy the work directory to clipboard&lt;/span&gt;
&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;pwdc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;pwd&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;pbcopy&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;# touch a file while creating directories&lt;/span&gt;
&lt;span class="n"&gt;supertouch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="err"&gt;$#&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
                 &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Missing argument&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="n"&gt;fi&lt;/span&gt;
         &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; 
                 &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$(dirname -- &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;
                 &lt;span class="n"&gt;touch&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$f&amp;quot;&lt;/span&gt; 
         &lt;span class="n"&gt;done&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;More functions are available &lt;a href="https://github.com/CuriousLearner/dotfiles/blob/master/.functions"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;.vimrc&lt;/h4&gt;
&lt;p&gt;This dotfile is specifically used for "&lt;strong&gt;vim&lt;/strong&gt;" configuration. All the necessary commands that we use very often, we can put them in this file. We can also set up different variables of vim, with the value we desire while working on it. For Unix and MacOS, this file is always used and is recommended at &lt;code&gt;~/.vimrc&lt;/code&gt;. To know more about .vimrc you may open the "&lt;strong&gt;vim&lt;/strong&gt;" and use the command &lt;code&gt;:help vimrc-intro&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;nocompatible&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;et&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;ai&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;ruler&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;.gitignore&lt;/h4&gt;
&lt;p&gt;This file is used in the case, we want to avoid or ignore some files or folders while &lt;strong&gt;git&lt;/strong&gt; makes a commit. These files may include &lt;em&gt;Thumbnail cache files, local virtual environment, etc.&lt;/em&gt; If we want a particular file say &lt;strong&gt;&lt;em&gt;Example.tmp&lt;/em&gt;&lt;/strong&gt; to be ignored. Just give its name in this dotfile. And if we want to ignore all &lt;strong&gt;&lt;em&gt;.tmp&lt;/em&gt;&lt;/strong&gt; files then put &lt;strong&gt;&lt;em&gt;*.tmp&lt;/em&gt;&lt;/strong&gt; in &lt;strong&gt;&lt;em&gt;.gitignore. &lt;/em&gt;&lt;/strong&gt;A gist of this file is shown below and a complete file is available &lt;a href="https://github.com/CuriousLearner/dotfiles/blob/master/.gitignore"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Files&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;might&lt;/span&gt; &lt;span class="n"&gt;appear&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="k"&gt;external&lt;/span&gt; &lt;span class="n"&gt;disks&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spotlight&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;V100&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Trashesvenv&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Packages&lt;/span&gt; &lt;span class="k"&gt;ignore&lt;/span&gt;
&lt;span class="n"&gt;node_modules&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sass&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;cache&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bower_components&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We're keeping this post short, as the main motive was to explain how you can store the configuration of your machine. The whole purpose of dotfiles is to make our work as easy as possible. These hidden files give us a comfortable &amp;amp; quality working experience.&lt;br&gt;
Dotfiles are specific to an individual because of different people like different configuration for the same tool. Go ahead and explore some of the best dotfiles out there. You're free to take inspirations and create your own :)&lt;/p&gt;
&lt;p&gt;You can have a look at one of the dotfiles repo here: &lt;a href="https://github.com/CuriousLearner/dotfiles"&gt;https://github.com/CuriousLearner/dotfiles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you've any queries, please ask in comment section below.&lt;/p&gt;</content></entry><entry><title>[Ultimate Guide] How SSH works?</title><link href="//thegeekyway.com/ultimate-guide-how-ssh-works/" rel="alternate"></link><published>2017-11-30T08:58:00+05:30</published><updated>2017-11-30T08:58:00+05:30</updated><author><name>GeekyShacklebolt</name></author><id>tag:thegeekyway.com,2017-11-30:/ultimate-guide-how-ssh-works/</id><summary type="html">&lt;p&gt;SSH is quite an interesting protocol in itself. A lot of people are using it for a secure communication between two machines. This blog post hits behind the scenes that go on, between machines connected via SSH.&lt;/p&gt;
&lt;p&gt;You might have an experience of remote login on SSH. But have you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;SSH is quite an interesting protocol in itself. A lot of people are using it for a secure communication between two machines. This blog post hits behind the scenes that go on, between machines connected via SSH.&lt;/p&gt;
&lt;p&gt;You might have an experience of remote login on SSH. But have you ever wondered about how internally these ssh-client and ssh-server respond? And If you want to explore the same? You are on the right page!&lt;!--more--&gt;&lt;/p&gt;
&lt;h2&gt;Brief about SSH&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SSH or we can say Secure Shell is a cryptographic network protocol that’s used to provide security in communication between two machines over an unsecured network like our Internet.&lt;/li&gt;
&lt;li&gt;SSH uses different authentication and encryption-decryption methods to make our connection secure between two remote machines.&lt;/li&gt;
&lt;li&gt;It is better than other communication protocols like FTP, telnet, etc. The picture below describes how SSH encryption doesn't let someone sniff in its signals. If someone tries to intercept the signal, s/he would receive nothing but an encrypted data packet. To know more about how SSH better than others visit &lt;a href="https://www.yireo.com/blog/1452-why-ssh-instead-of-ftp"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="text-align:center"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;An&lt;/span&gt; &lt;span class="n"&gt;un&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;encrypte&lt;/span&gt; &lt;span class="n"&gt;telnet&lt;/span&gt; &lt;span class="k"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;uploads&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;howsshworks1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="n"&gt;x220&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;An un-encrypte telnet connection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;An&lt;/span&gt; &lt;span class="k"&gt;encrypted&lt;/span&gt; &lt;span class="n"&gt;SSH&lt;/span&gt; &lt;span class="n"&gt;sesion&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;uploads&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;howsshworks2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="n"&gt;x219&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;An encrypted SSH sesion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;For use cases of SSH, you may see &lt;a href="http://matt.might.net/articles/ssh-hacks/"&gt;this&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;How SSH works?&lt;/h1&gt;
&lt;p&gt;Before we actually get into the protocol, there is something that needs to be discussed.&lt;/p&gt;
&lt;h4&gt;Symmetric and Asymmetric Encryption:&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Symmetric Encryption&lt;/strong&gt; is that in which only one key (let's say private key or secret key) is used both for encryption and decryption of the data transferred between client and server.&lt;/p&gt;
&lt;p&gt;However, &lt;strong&gt;Asymmetric Encryption&lt;/strong&gt; is that in which both keys (private as well as public key) is used for encryption and decryption.&lt;/p&gt;
&lt;p&gt;The server uses client's public key to encrypt data for it. The client, on the other hand, uses its private key to decrypt the data on the other end that was encrypted by its public key. Similarly, server's public key is used by the client to encrypt the signal and server's private key is used by the server to decrypt the signal.&lt;/p&gt;
&lt;p&gt;So, which one is used in SSH?&lt;/p&gt;
&lt;p&gt;The answer is, SSH uses both symmetric and asymmetric encryption. Since asymmetric encryption is more time consuming, most of the SSH connections use symmetric encryption. The idea behind is that asymmetric encryption is used only to share a secret key (session key) using which, symmetric encryption can be done for further communication.&lt;/p&gt;
&lt;p&gt;Now there are 2 versions of SSH that are commonly used. These are SSH version 1 and SSH version 2. The overall architecture in both versions differs a bit, so we'll discuss the protocol version 1 in detail and then see how does it differ from version 2 protocol.&lt;/p&gt;
&lt;h2&gt;SSH Protocol Version 1&lt;/h2&gt;
&lt;p&gt;The SSH connection is always invoked by a client to a server. Therefore, server authentication comes first than client authentication.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;STEP 1:  Connect to simple FTP connection&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For a successful SSH establishment. A simple connection between a client and a server is a must. For the same reason, first of all, a simple (FTP/Telnet) connection is created between the client and the server. And with telnet, we get details like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;coderunner&lt;/span&gt;&lt;span class="nv"&gt;@geekyshacklebolt&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;telnet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;thegeekyway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Trying&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;192.168.42.119&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Connected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;thegeekyway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;Escape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;SSH&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;OpenSSH_7&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;&lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;ubuntu2&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here one can see that "&lt;em&gt;&lt;strong&gt;SSH-2.0&lt;/strong&gt;"&lt;/em&gt; (in the last line). This is the version of SSH protocol that server is using. We also see the package version of OpenSSH is visible. This is how the client knows which version of SSH the server is using.&lt;/p&gt;
&lt;p&gt;Now, it is the sole responsibility of the client to continue with the session if it supports the version shown by the server.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;STEP 2: Both server and client, now switch to a packet-based protocol&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this, each packet consists of a 32-bit length field, 1-8 bytes of random padding to foil known-plaintext attacks (KPA), a one-byte packet type code, the packet payload data, and a four-byte integrity check field.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;STEP 3: Server provides session parameters to client&lt;br&gt;
&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As soon as the connection is established, server authentication starts. For this, the server will send some critical data to the client. This data includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1) &lt;strong&gt;Server's host key&lt;/strong&gt;: It is an RSA public key, which is stored in "known_hosts" file of the client (if you have already connected before with that server). You may see your known_hosts file here:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;coderunner&lt;/span&gt;&lt;span class="nv"&gt;@geekyshacklebolt&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;coderunner&lt;/span&gt;&lt;span class="nv"&gt;@geekyshacklebolt&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;authorized_keys&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;known_hosts&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, the client will search for this "rsa_public" key in client's `known_hosts` file and if the key is not already present, then it may be the case of connecting with that server for the first time. So, in this case, what you would get is a "WARNING!" like: "&lt;em&gt;Are you sure you want to continue connecting?&lt;/em&gt;"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;coderunner&lt;/span&gt;@&lt;span class="nv"&gt;geekyshacklebolt&lt;/span&gt;:&lt;span class="o"&gt;~&lt;/span&gt;$ &lt;span class="nv"&gt;ssh&lt;/span&gt; &lt;span class="nv"&gt;geekyshacklebolt&lt;/span&gt;
&lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="nv"&gt;authenticity&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;geekyshacklebolt (192.168.42.222)&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;t be established.&lt;/span&gt;
&lt;span class="nv"&gt;ECDSA&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt; &lt;span class="nv"&gt;fingerprint&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;SHA256&lt;/span&gt;:&lt;span class="nv"&gt;Ql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;KnGlolY9eCGuYK3OX3opnSyJQzsbtM3DW&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;UZIxms&lt;/span&gt;.
&lt;span class="nv"&gt;Are&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;sure&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt; &lt;span class="nv"&gt;connecting&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;yes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;no&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you're not connecting with the server for the first time but see this warning, then maybe the server's public key has been changed or you're trying to access a different machine altogether (may be going in hands of an attacker). Therefore this warning is quite useful.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2) &lt;strong&gt;Server's server key&lt;/strong&gt;: (There is no concept of server key in SSH-2) With host key, server also provide one server key.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This server key goes on changing every hour or so. And this key may be of 768 bits or 1024 bits it depends on the configuration. You may find it at  "/etc/ssh/"  in "sshd_config"  file. Let me see mine.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Lifetime&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;ephemeral&lt;/span&gt; &lt;span class="k"&gt;version&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;
&lt;span class="n"&gt;KeyRegenerationInterval&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;
&lt;span class="n"&gt;ServerKeyBits&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yeah, mine is 1024 bits.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3) &lt;strong&gt;8 Random Bytes&lt;/strong&gt;:  These random bytes are known as &lt;em&gt;check bytes&lt;/em&gt;. It is necessary for the client to send these &lt;em&gt;check bytes&lt;/em&gt; in its next reply.&lt;/li&gt;
&lt;li&gt;4) &lt;strong&gt;Authentication methods and list of encryption algorithms&lt;/strong&gt; &lt;strong&gt;supported by server:&lt;/strong&gt; So, that client may decide which encryption algorithm it supports and which authentication methods the client has to follow. The symmetric encryption algorithm that is used to encrypt and decrypt large amounts of data is known as &lt;strong&gt;bulk cipher.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At this point, both sides also compute a common 128-bit &lt;strong&gt;session identifier&lt;/strong&gt;&lt;em&gt;,&lt;/em&gt; which is used in some subsequent protocol operations to uniquely identify this SSH session. This is an MD5 hash of the &lt;em&gt;host key&lt;/em&gt;, &lt;em&gt;server key&lt;/em&gt;, and &lt;em&gt;check bytes&lt;/em&gt; taken together.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;STEP 4: Session key generation and sending it to server&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now the client has server's host key, server key, 8 random bytes, authentication methods and encryption algorithms list.&lt;/p&gt;
&lt;p&gt;The client creates a symmetric session key for a bulk cipher that both client and server support. This key will be used for the entire session of SSH for both encryption and decryption. For a secure transmission, client double encrypts this key before sending it to server. First encryption is done by "server's host key" and second encryption is done by "server key". Encrypting the session key a second time with the server key provides a property called &lt;strong&gt;&lt;em&gt;perfect forward secrecy&lt;/em&gt;&lt;/strong&gt;. This double encryption enhances the security to great extent.&lt;/p&gt;
&lt;p&gt;After double encrypting the session key, the client sends it to the server, along with the check bytes and a choice of algorithms.&lt;/p&gt;
&lt;p&gt;Since it is difficult to have both server's private key and the server key (which keep changing in a fixed interval duration), it is very difficult to know the key. On the other hand, server has its private key and the "session key" that is shared by both client and server. With this data, the server can decrypt and get the session key for further communication.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;STEP 5: Confirmation from the server&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After sending the "session key" client just wait for the server to respond. Because only if the server is original and the one whose host key was provided to the client, then only it would be able to decrypt this session key using the server key, and the corresponding private key of server's host key.&lt;/p&gt;
&lt;p&gt;The server receives this session key and decrypts it, to use it for further transmission of signals. This was the end of asymmetric cryptography. Now, when both server and client posses this symmetric key. The complete communication session would be dealing only with &lt;em&gt;this key&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;STEP 6: Client Authentication begins&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To authenticates a client, the server may use the following methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Password-based&lt;/li&gt;
&lt;li&gt;Kerberos&lt;/li&gt;
&lt;li&gt;Rhosts&lt;/li&gt;
&lt;li&gt;Host keys based&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll explain each part in brief, and 'host keys based' in detail, as it is the most secured.&lt;/p&gt;
&lt;p&gt;1. &lt;strong&gt;Password&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;It is as simple as you log into any of your social websites. The server just asks you for your password to establish the SSH connection, and client takes the responsibility to transfer this password to the server. The session gets started as soon as you give your password. This method is not much recommended. Because if you are really security conscious that you are using SSH for remote login, then password-based authentication can be easily attacked. This type of authentication is convenient for the first time SSH users and those who travel a lot and don't carry their machines.&lt;/p&gt;
&lt;p&gt;2. &lt;strong&gt;Kerberos&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;It is a computer network authentication protocol that works on the basis of &lt;em&gt;tickets&lt;/em&gt; to allow nodes communicating over a non-secure network to prove their identity to one another in a secure manner. It is not much used nowadays. OpenSSH provides Kerberos support only when using the SSH-1 protocol.&lt;/p&gt;
&lt;p&gt;3. &lt;strong&gt;RHosts&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;In this, the server has a list of host keys stored in /etc/ssh_known_host, and additionally, each user has host keys in \$HOME/.ssh/known_hosts. SSH uses the naming service to obtain the canonical name of the client host, looks for its public key in its known_host files, and requires the client to prove that it knows the private host key. This prevents IP and routing spoofing attacks (as long as the client machine private host key has not been leaked), but is still vulnerable to DNS (domain name server) attacks (to a limited extent), and relies on the integrity of the client machine as to who is requesting to log in. If maximal security is desired, only RSA authentication (host keys authentication) should be used.&lt;/p&gt;
&lt;p&gt;4. &lt;strong&gt;Host keys based&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;It is the most secure method of authentication for an SSH session. In this, client authentication is based on a pair of host keys i.e: the public key and the private key that can be seen in "\~/.ssh/" directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;coderunner&lt;/span&gt;&lt;span class="nv"&gt;@geekyshacklebolt&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;coderunner&lt;/span&gt;&lt;span class="nv"&gt;@geekyshacklebolt&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;authorized_keys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;known_hosts&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, &lt;em&gt;id_rsa&lt;/em&gt; is your private (secret) key which should be kept a secret (not to be shared with anyone ever) and id_rsa.pub is your public key, which should be present to every server's (to whom you want to connect to) "authorized_keys" file.&lt;/p&gt;
&lt;p&gt;If you don't have these key pair, you may generate it using the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keygen -t rsa -b &lt;span class="m"&gt;1024&lt;/span&gt; -C  &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;&lt;strong&gt;*note:&lt;/strong&gt; these public and private keys are never used for either encryption or decryption of SSH session. These are only used to authenticate a client.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;An RSA public key has 2 parts, the exponent, and the modulus.The modulus is the long number in the public key file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The client sends the modulus of its public key as an identifier, encrypted using the session key.&lt;/li&gt;
&lt;li&gt;The server decrypts this identity and starts searching for its corresponding public key in "authorized_keys" file.&lt;/li&gt;
&lt;li&gt;If the authorized public key is not found or is restricted to connect, then this authentication request fails. Otherwise, the process continues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;STEP 7: The Game of Challenge and Response&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now, server prepares a random 256 bit-string, and encrypt this string using the client's public key. Then this encrypted string is sent to the client as a &lt;em&gt;challenge. &lt;/em&gt;The challenge for the client is to decrypt this random string and prove that it has the corresponding private key.&lt;/li&gt;
&lt;li&gt;The client receives this encrypted string, and decrypts using its private key, and send it back to the server. But, this string should not be transmitted as it is. Therefore, client combines this challenge with session identifier to prepare an MD5 hash. And then sends its &lt;em&gt;response&lt;/em&gt; to the server.&lt;/li&gt;
&lt;li&gt;The server receives this &lt;em&gt;response&lt;/em&gt; in the form of an MD5 hash. And, the server itself regenerate this, since it is already having the random string and the session identifier. The server compares the 2 hashes with each other, and if both come out to be same, then it means that client had successfully decrypted the string.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The client is now authenticated, and SSH session starts with a terminal allotted to you to start writing commands.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Integrity Checking:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is the process of comparing the state of currently stored data to the state of previously stored data. This protocol uses a weak integrity check e.i a 32-bit cyclic redundancy check or CRC-32. This sort of check is insufficient for detecting deliberate corruption but effective against accidental changes to data.&lt;/p&gt;
&lt;h2&gt;SSH Protocol Version 2&lt;/h2&gt;
&lt;p&gt;There are a lot of places where SSH-1 needed more improvements to make the protocol more secure. Therefore, this version 2 comes into play. It provides some necessary changes in protocol 1 to enhance its security. We will only discuss the changes and won't repeat the common steps.&lt;/p&gt;
&lt;h3&gt;Protocol Differences&lt;/h3&gt;
&lt;p&gt;SSH-1 consists of multiple functions in a single protocol. However, SSH-2 is build up in modules and consists of multiple protocols which work together like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SSH transport layer protocol (SSH-TRANS)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSH authentication protocol (SSH-AUTH)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSH connection protocol (SSH-CONN)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's see their differences in brief.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;SSH-TRANS:&lt;/strong&gt;&lt;/u&gt; This layer of protocol provides initial connection, packet-based protocol, server authentication, basic encryption and integrity check.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;SSH-AUTH:&lt;/strong&gt;&lt;/u&gt; This layer of protocol is used by the client over SSH-TRANS to authenticate itself to server. And, it supports 3 authentication methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Public key:&lt;/strong&gt; It is similar to "host based" of SSH-1. But, it is more general and can accommodate any public-key signature algorithm.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hostbased:&lt;/strong&gt; It is similar to RhostsRSA of SSH-1 by providing cryptographic assurance of client's host identity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Password:&lt;/strong&gt; It is similar to "Password Based" of SSH-1.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Key Differences&lt;/h3&gt;
&lt;p&gt;The Key differences between SSH-1 and SSH-2 are as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Expanded algorithm negotiation&lt;/li&gt;
&lt;li&gt;No server key&lt;/li&gt;
&lt;li&gt;Certificates authorities for public keys&lt;/li&gt;
&lt;li&gt;More flexible authentication&lt;/li&gt;
&lt;li&gt;Stronger integrity checking&lt;/li&gt;
&lt;li&gt;Periodic replacement of session key ("re-keying")&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1. Expanded algorithm negotiation:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In SSH-1, client used to select only one algorithm out of the list of algorithms supported by server, for all category works like, hash function, message authentication, session key exchange, etc. But, SSH-2 provides support for one algorithm per category.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. No server key:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It was recommended that the session key shouldn't be developed alone by the client (as done in SSH 1). The idea was, neither the client nor the server should dictate the SSH session by giving a session key that is created only by one side. So, a new method was adopted in which both server and client equally contribute to the development of session key. This method was based on Diffie - Hellman algorithm.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The classic procedure of Diffie - Hellman algorithm to develop a session key is discussed below step-by-step:&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Firstly, both client and server agree on a large prime number, which will serve as a seed value.&lt;/li&gt;
&lt;li&gt;Then, both parties agree on an encryption generator (typically AES), which will be used to manipulate the values in a predefined way. This encryption generator method is the one which will be supported by both server and client.&lt;/li&gt;
&lt;li&gt;Independently, each party comes up with another prime number which is kept secret from the other party. This number is used as the private (secret) key for this interaction (this private key is different than the private SSH key used for authentication).&lt;/li&gt;
&lt;li&gt;The generated private key (the secret to themselves), the encryption generator (common to both), and the shared prime number (common to both) are used to generate a public key, but which can be shared with the other party.&lt;/li&gt;
&lt;li&gt;Both participants then exchange their generated public keys.&lt;/li&gt;
&lt;li&gt;The receiving party uses their own private key, the other party's public key, and the original shared prime number to compute a shared secret key. Although this is independently computed by each party, using opposite private and public keys, will result in the &lt;em&gt;same&lt;/em&gt; shared secret key.&lt;/li&gt;
&lt;li&gt;The shared secret is then used to encrypt all communication that follows. This key is again known as a session key or symmetric key.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;3. Certificate authorities for public keys:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In SSH-1, there was no method to verify the ownership of the key. But, in SSH-2 we have a room for this as well. This is another layer of security in SSH-2. In which, the public keys of users are signed by some certificate authorities. The certificate attests and confirms the binding between a public key and a particular identity. The attestation is represented by a digital signature from a trusted third party.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. More flexible authentication:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In SSH-1, client could authenticate itself to server using any one of the allowed authentication methods. And if it fails, then it means the connection is refused. But in SSH-2, if initial attempts of any authentication method (say public key) are failed, then the protocol may switch to other methods of authentication (say password). That's why SSH-2 gives more chances to establish a connection.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Stronger Integrity checking:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SSH-1 uses CRC-32 integrity check which is really weak and ineffective against deliberate corruption. On the other hand, SSH-2 uses cryptographically strong Message Authentication Code (MAC) algorithms to provide strong integrity and data origin assurance.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. Periodic replacement of session key ("re-keying")&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The concept was improved with an idea that the session key should not remain same for the complete session as we see in SSH-1. Therefore, in SSH 2, we may have a no. of session keys that keeps on changing with sessions, periodically.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. Implementation Differences&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are mainly 4 Implementation differences in SSH-1 and SSH-2.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Host keys&lt;/strong&gt;: SSH-1 and SSH-2 both manage host keys in different directory structures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No fallback to rsh:&lt;/strong&gt; If a remote host has no SSH server running, then SSH can invoke &lt;code&gt;rsh&lt;/code&gt; automatically, because SSH-1 supports &lt;code&gt;rsh&lt;/code&gt;-style authentication as well. But SSH-2 don't have this feature, due to poor security of &lt;code&gt;rsh&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Setuid client:&lt;/strong&gt; In SSH-1, the client needs to be &lt;code&gt;setuid&lt;/code&gt; root, so that it has access to &lt;em&gt;read&lt;/em&gt; for the &lt;em&gt;private host key&lt;/em&gt; file, which is usually installed as &lt;em&gt;readable only&lt;/em&gt; by the root user. But in SSH-2, the client doesn't need to be &lt;code&gt;setuid&lt;/code&gt;root, due to its programs like &lt;code&gt;ssh-signer2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSH-1 backward compatibility:&lt;/strong&gt; SSH-2 provide backward compatibility to SSH-1, if and only if &lt;em&gt;SSH-1 package&lt;/em&gt; is installed on the same machine. The SSH-2 client and server simply run their SSH-1 counterparts, when they connect to a partner running the older protocol.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll leave the rest for readers to explore on their own. If you've any questions, please feel free to ask in the comments section below.&lt;/p&gt;</content><category term="linux"></category><category term="SSH"></category></entry><entry><title>Have you ever heard of OG-TAGS?</title><link href="//thegeekyway.com/have-you-ever-heard-of-og-tags/" rel="alternate"></link><published>2017-11-30T08:20:00+05:30</published><updated>2017-11-30T08:20:00+05:30</updated><author><name>storymode7</name></author><id>tag:thegeekyway.com,2017-11-30:/have-you-ever-heard-of-og-tags/</id><summary type="html">&lt;p&gt;Ever noticed how Facebook shows an excerpt from a website with its image, or how a tweet with just a URL changes into a short window to the actual website? It's because of og-tags. Let's understand more about it!&lt;/p&gt;
&lt;!--more--&gt;

&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Open Graph Protocol Logo" src="https://i2.wp.com/storymode7.files.wordpress.com/2017/11/open-graph-protocol.png" title="Open Graph Protocol Logo"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Overview of OG Tags&lt;/h2&gt;
&lt;p&gt;The &lt;a href="http://ogp.me/"&gt;Open Graph Protocol&lt;/a&gt; is what works …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever noticed how Facebook shows an excerpt from a website with its image, or how a tweet with just a URL changes into a short window to the actual website? It's because of og-tags. Let's understand more about it!&lt;/p&gt;
&lt;!--more--&gt;

&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Open Graph Protocol Logo" src="https://i2.wp.com/storymode7.files.wordpress.com/2017/11/open-graph-protocol.png" title="Open Graph Protocol Logo"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Overview of OG Tags&lt;/h2&gt;
&lt;p&gt;The &lt;a href="http://ogp.me/"&gt;Open Graph Protocol&lt;/a&gt; is what works behind og-tags. It was introduced by Facebook in 2010 to better integrate a website with Facebook. It turns websites into intractable objects, and makes it easier to share. Like on a website when you choose to share via Facebook, it creates a summary of the URL you wish to share. Like the one below:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" class="aligncenter" src="https://i1.wp.com/storymode7.files.wordpress.com/2017/11/screenshot-2017-11-27-may-jay1.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;See how beautifully it creates the summary of the content! Similarly, it works on Twitter. The level up to which you can interact depends on the type of data shared like:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" class="aligncenter" src="https://i2.wp.com/storymode7.files.wordpress.com/2017/11/screenshot-2017-11-27-mayank-mayank_at_tgw-twitter.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here, twitter even allows playing videos in this twitter post itself.&lt;/p&gt;
&lt;p&gt;Now, Let's see some of the details, how it works, basic syntax etc.&lt;/p&gt;
&lt;p&gt;It's based on &lt;a href="https://en.wikipedia.org/wiki/RDFa"&gt;RDFa: Resource Description Framework in attributes.&lt;/a&gt; Hence, it uses metadata from a page to turn them into these graph objects. You can think of object as the website being displayed, and Graph as the small summary style window created using og-tags. And for it, &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags are required. In each meta tag, a property can be specified. A sample og tag might look like :&lt;/p&gt;
&lt;p&gt;For Facebook:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt; &lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;og:title&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; The Geeky Way&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;

&lt;/div&gt;

&lt;p&gt;For Twitter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;twitter:title&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;The Geeky Way&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;

&lt;/div&gt;

&lt;p&gt;This will set the Title of the object as it should appear in Graph. For example, in the first image that we created using Facebook share as shown above, we have &lt;code&gt;WordPress.com: Create a website or a blog&lt;/code&gt; as the title for the og tag.&lt;/p&gt;
&lt;h2&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;There are a number of &lt;a href="http://ogp.me/#implementations"&gt;parsers&lt;/a&gt; that parse information from these og tags and render them as the social graph that we've seen above.&lt;/p&gt;
&lt;p&gt;Facebook also has its &lt;a href="https://developers.facebook.com/tools/debug/"&gt;official parser&lt;/a&gt; using which you can see how your website will look like after setting all the nice og tags. It'll tell you the value set for the og tags that it read.&lt;/p&gt;
&lt;p&gt;Like if you do that for TheGeekyWay.com you can see the og:title tag as :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;og:title         | The Geeky Way&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And that's just what the image above shows!&lt;/p&gt;
&lt;h2&gt;Some basic OG tags&lt;/h2&gt;
&lt;h3&gt;For Facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;og:title&lt;/code&gt; - The Title of the object, web page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o​g:type&lt;/code&gt; - The &lt;a href="http://ogp.me/#types"&gt;type of content&lt;/a&gt; of that object, like website, music.[song| album| playlist ... ]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;og:image&lt;/code&gt; - URL of an image that represents the object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;og:url&lt;/code&gt; - The &lt;a href="https://en.wikipedia.org/wiki/Canonical_link_element"&gt;canonical&lt;/a&gt; URL of the object, i.e the one you want to provide to a user. Not necessarily the one which created the object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These should get you going with a perfectly working object graph.&lt;/p&gt;
&lt;p&gt;But, that's not all! Extra metadata can be attached to each property. For instance, for an image you can specify width, height, alt text etc. You can refer to &lt;a href="http://ogp.me/#types"&gt;this&lt;/a&gt; link to see how much metadata can be added.&lt;/p&gt;
&lt;h3&gt;For Twitter&lt;/h3&gt;
&lt;p&gt;It's called &lt;a href="https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/abouts-cards"&gt;Twitter cards&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;p&gt;Basic tags for twitter graph can be summarized as :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta name="twitter:card" content="summary"/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;meta name="twitter:site" content="@username"/&amp;gt; &amp;lt;meta name="twitter:title" content="Title Of The Page goes here"/&amp;gt; &amp;lt;meta name="twitter:description" content="This contains a brief description of the page"/&amp;gt; &amp;lt;meta name="twitter:image" content="www.url.of/the/image.jpg"/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;But, It might happen that you inserted the OG tags for the Facebook graph, but you forgot the to add the twitter version of it that helps create twitter card. Well, Twitter takes care of it. If it's not able to find the necessary meta tags, then it uses OG tags, and according to a predefined relationship between them, it uses the value from those OG tags to create the twitter card.&lt;/p&gt;
&lt;p&gt;Hope this quick tip about og tags helps you better set up and optimize your website. If you've any questions, please feel free to ask in the comments section below.&lt;/p&gt;</content><category term="HTML"></category></entry><entry><title>How to Recover Deleted SMS from Samsung Galaxy Phone</title><link href="//thegeekyway.com/how-to-recover-deleted-sms-from-samsung-galaxy-phone/" rel="alternate"></link><published>2017-10-18T16:06:00+05:30</published><updated>2017-10-18T16:06:00+05:30</updated><author><name>sponsored_post</name></author><id>tag:thegeekyway.com,2017-10-18:/how-to-recover-deleted-sms-from-samsung-galaxy-phone/</id><summary type="html">&lt;p&gt;&lt;p .s1&gt;How to recover deleted SMS from Samsung Galaxy has always been one of the frequently asked on the forums and the internet by Samsung users. No matter how wise and cautious person you are, still once in a while you will end up deleting some important message and will instantly …&lt;/p&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;p .s1&gt;How to recover deleted SMS from Samsung Galaxy has always been one of the frequently asked on the forums and the internet by Samsung users. No matter how wise and cautious person you are, still once in a while you will end up deleting some important message and will instantly regret it. There are lots of other reasons to get your SMS deleted for example, factory reset, system crash or installation of a suspicious virus. &lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;With the advancement of technology, recovering deleted SMS from Android phones is not a difficult task anymore. Software developers have designed many Android data recovery tools to retrieve the deleted data from your phone to save your day. Likewise, after testing and researching a lot of Android data recovery tools, we have discovered that Android Data Recovery is the best and most efficient tool among all of them.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;&lt;strong&gt;What is Android Data Recovery?&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;It is a marvelous and creative Android data recovery desktop program that can &lt;a href="https://www.androidphonesoft.com/resources/recover-lost-sms-from-android-phone.html"&gt; &lt;p .s2&gt;retrieve deleted data &lt;/p&gt;&lt;/a&gt;from your Android device including Samsung Galaxy Phones. It can recover your erased SMS within seconds by scanning your phone deeply from Windows or Mac computer. According to over 4 million customers, Android Data Recovery is the best program and most efficient program available on the software market.&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;&lt;strong&gt;Highlighted features of Android Data Recovery&lt;/strong&gt; &lt;/p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p .s1&gt;Recover 17+ data types from any Android smartphone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p .s1&gt;Scan your entire Android phone and tablet to retrieve data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p .s1&gt;Preview each and every item before recovering them so that you can only retrieve the desirable data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p .s1&gt;Supported data types – Contacts, SMS, music, videos, audio, documents, Whatsapp, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p .s1&gt;Works with over 3500+ smartphone brands such as Samsung, Asus, Micromax, Motorola, Google, and LG and so on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p .s1&gt;Compatible with both Windows and Mac.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p .s1&gt;Trusted and download by over 4 million customers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p .s1&gt;Free lifetime support and upgrades.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p .s1&gt;&lt;strong&gt;How to use Android Data Recovery tool to Retrieve Deleted SMS?&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;Although, this program requires no instruction at all but yet, we will write down a step by step tutorial so that novice users can use this program effortlessly.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Step 1. &lt;a href="https://www.androidphonesoft.com/android-data-recovery.html"&gt; &lt;p .s2&gt;Download Android Data Recovery&lt;/p&gt;&lt;/a&gt; on your Windows or Mac computer and install it like regular software. Next, launch the tool to see its attractive user interface.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Step 1: How to recover deleted SMS " src="//thegeekyway.com/uploads/images/2017/10/1-300x182.png" title="Step 1: How to recover deleted SMS"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p .s1&gt;Step 2. Now, get your Samsung Galaxy phone connected to PC and enable USB debugging mode on your phone.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;To enable USB debugging mode on your Samsung Galaxy, kindly follow this path –&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;Open Menu &gt; Settings &gt; Developer Tools &gt; Check USB Debugging mode&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Step 2: How to recover deleted SMS " src="//thegeekyway.com/uploads/images/2017/10/2-300x153.png" title="Step 2: How to recover deleted SMS"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p .s1&gt;Step 3. The tool should recognize your phone now and you will be asked what kind of data to retrieve from your PC. Simply, select “Messaging” and hit the next button.&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Step 3: How to recover deleted SMS " src="//thegeekyway.com/uploads/images/2017/10/3-300x182.png" title="Step 3: How to recover deleted SMS"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p .s1&gt;Step 4. Android data recovery tool provides 2 amazing ways to scan your device named Standard Mode and Advanced Mode. It is recommended to use Standard Mode which uses a powerful algorithm to search your entire phone and Advanced Mode is used for deeper scanning and usually takes longer time to finish the process.&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Step 4: How to recover deleted SMS " src="//thegeekyway.com/uploads/images/2017/10/4-300x182.png" title="Step 4: How to recover deleted SMS"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p .s1&gt;Step 5. Let the program analyze your complete device and kindly have patience because it may take several minutes. Once the scanning is completed, it will let you preview each and every deleted item on your phone. Click on “Messages” from the left sidebar to preview all erased messages.&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Step 5: How to recover deleted SMS " src="//thegeekyway.com/uploads/images/2017/10/5-300x182.png" title="Step 5: How to recover deleted SMS"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p .s1&gt;Finally choose the messages that you wish to retrieve and click on “Recover” to save them on your PC.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;After recovering the messages successfully, you can copy the database file on your Samsung Galaxy phone to read them on your mobile device.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p .s1&gt;Say goodbye to those days when erasing messages was considered to be a permanent action. With Android Data Recovery tool, you can relax and feel free to recover all the deleted data from your Android device seamlessly. Android Data Recovery tool has 4+ million downloads who approved the simplicity and efficiency of this lavishing tool. It is free to try, so go ahead and install it on your computer to see the real power of this program. It is recommended that you guys backup your Android phones regularly once per week to avoid any data loss.&lt;/p&gt;&lt;/p&gt;</content><category term="Android"></category><category term="recovery"></category></entry><entry><title>Introduction to React Native - Part 1</title><link href="//thegeekyway.com/introduction-to-react-native-part-1/" rel="alternate"></link><published>2017-10-07T14:11:00+05:30</published><updated>2017-10-07T14:11:00+05:30</updated><author><name>realslimshanky</name></author><id>tag:thegeekyway.com,2017-10-07:/introduction-to-react-native-part-1/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Introduction to React Native - Part 1" class="aligncenter" src="https://i.imgur.com/7o0tXgF.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;What is all the fuzz about Hybrid Apps?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://facebook.github.io/react-native/"&gt;React Native&lt;/a&gt; is a framework build over the native development kit of both Android and iOS with which you can create mobile apps for both the platforms by just using JavaScript.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;React Native was developed by some group of people working in …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Introduction to React Native - Part 1" class="aligncenter" src="https://i.imgur.com/7o0tXgF.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;What is all the fuzz about Hybrid Apps?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://facebook.github.io/react-native/"&gt;React Native&lt;/a&gt; is a framework build over the native development kit of both Android and iOS with which you can create mobile apps for both the platforms by just using JavaScript.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;React Native was developed by some group of people working in the Facebook and later it was released as an open source project for all the world to use and contribute.&lt;/p&gt;
&lt;h3&gt;Why should you care?&lt;/h3&gt;
&lt;p&gt;Think about being in a hackathon and feeling the need of creating a mobile app for your solution. What should be your quickest solution for a mobile app? A native app would take a lot of work to just get it look good. That's where react-native kicks in. This is one such scenario, if you speak JS and have come from the world of the web then you might love it as well.&lt;/p&gt;
&lt;p&gt;Apart from all of this, many bigger companies have started using react native for their production apps. You can see the complete list &lt;a href="https://facebook.github.io/react-native/showcase.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Getting down to business&lt;/h3&gt;
&lt;p&gt;The prerequisites of developing a react native application are very simple to begin with. Let's look at them one by one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Development Part&lt;/strong&gt;&lt;br&gt;
Step 1 - Install &lt;a href="https://nodejs.org/en/download/"&gt;Node&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Step 2 - Install Create React Native App using npm by running following command on a terminal.&lt;br&gt;
 &lt;p .lang:default .decode:true .crayon-inline&gt;npm install -g create-react-native-app&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Step 3 - Create a new react native app using the following command.  &lt;p .lang:default .decode:true .crayon-inline&gt;newApp&lt;/p&gt; can be any name you want to give your project.&lt;br&gt;
 &lt;p .lang:default .decode:true .crayon-inline&gt;create-react-native-app newApp&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Step 4 - Get inside the project directory and run the server.&lt;br&gt;
 &lt;p .lang:default .decode:true .crayon-inline&gt;cd newApp &amp;amp;&amp;amp; npm start&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;After the last step, you'll have to wait for some time until a QR code appears on the terminal window and then move on to the deployment part.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deployment Part&lt;br&gt;
&lt;/strong&gt;Step 1 - Install &lt;a href="https://expo.io/"&gt;Expo&lt;/a&gt; application from &lt;a href="https://play.google.com/store/apps/details?id=host.exp.exponent&amp;amp;referrer=www"&gt;Google Play Store&lt;/a&gt; or &lt;a href="https://itunes.apple.com/app/apple-store/id982107779?ct=www&amp;amp;mt=8"&gt;Apple App Store&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Step 2 - Connect to the same network as you system onto which you completed development part.&lt;/p&gt;
&lt;p&gt;Step 3 - Scan QR code form the terminal window using Expo app on your smartphone. You can also input the URL given below the QR code on the search box into the explore menu of expo app.&lt;/p&gt;
&lt;p&gt;After the last step, the terminal window will also display the name of the device to which your server is connected. You'll see the expo icon which loads your application afterward on your smartphone which will look like the picture below.&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;img alt="Output to Expo app after first run" class="aligncenter" src="https://i.imgur.com/W6gCzmR.png?1"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h3&gt;Let's understand what just happened&lt;/h3&gt;
&lt;p&gt;By running  &lt;p .lang:default .decode:true .crayon-inline&gt;npm start&lt;/p&gt; we started the node server, as well as some other magic processes who's job is mainly to gather all the code inside your project directory, reduce it into a single file namely  &lt;p .lang:default .decode:true .crayon-inline&gt;index.android.bundle&lt;/p&gt; or  &lt;p .lang:default .decode:true .crayon-inline&gt;index.ios.bundle&lt;/p&gt; for Android and iOS respectively. So all the code you have written inside your project directory which is nothing but a bunch of  &lt;p .lang:default .decode:true .crayon-inline&gt;.js&lt;/p&gt;  files are only the ones you require at this point to define how your app looks like.&lt;/p&gt;
&lt;p&gt;Once you scan the QR code using Expo app, the  &lt;p .lang:default .decode:true .crayon-inline&gt;.bundle&lt;/p&gt; is sent over to the smartphone with some other configuration files. Now Expo app has a JSCore which understands the js code you have written, maps to whichever native component you wanted your app to show with the appropriate style you provided.&lt;/p&gt;
&lt;p&gt;Now, when you look into the contents of  &lt;p .lang:default .decode:true .crayon-inline&gt;App.js&lt;/p&gt;  in out project directory, it would be like the one as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;React&lt;/span&gt; &lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;React&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;styles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;working&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Changes&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt; &lt;span class="nb"&gt;reload&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Shake&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;developer&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="n"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;alignItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the next post, we'll discuss each and every element of `App.js` file in-depth to get the most out of it.&lt;/p&gt;
&lt;h3&gt;Prerequisites to learn further&lt;/h3&gt;
&lt;p&gt;We'll break down the above code into different segments and I'll try to explain each one of them using a different blog. To understand the next set of blog posts in the series and get the most out of react native you should understand a little something of topics below.&lt;/p&gt;
&lt;p&gt;1. ES6 - We'll be using goodness of a bunch of ES6 statements which will make our application simple and effective in fewer lines of code. Since we'll only deal with JavaScript side of things it'll be better for you to have an intermediate intellect in the same.&lt;/p&gt;
&lt;p&gt;2. NodeJS - All the packages in react native are dealt with using NodeJS and npm packages. Get acquainted with how it works.&lt;/p&gt;
&lt;p&gt;3. ReactJS (optional) - Entire framework is build using ReactJS to provide you with components having their own dedicated life cycle. It's optional since we'll go though how those components work ourselves and you'll learn to adore ReactJS starting from there.&lt;/p&gt;
&lt;p&gt;I know this blog doesn't give it all away but this is how I wanted it to be, a spark so that I can explain to you all I've learned with a chain of posts instead of sharing some key elements in just one blog post. If you've any questions, please feel free to ask in the comments section below.&lt;/p&gt;</content><category term="Android"></category><category term="application"></category><category term="iOS"></category><category term="Javascript"></category><category term="mobile"></category><category term="native"></category><category term="react"></category><category term="react native"></category></entry><entry><title>How to Make Bootable Linux Pendrive</title><link href="//thegeekyway.com/how-to-make-bootable-linux-pendrive/" rel="alternate"></link><published>2016-01-01T17:04:00+05:30</published><updated>2016-01-01T17:04:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2016-01-01:/how-to-make-bootable-linux-pendrive/</id><summary type="html">&lt;p&gt;Well, you may not realize today, but it is very essential to have a Bootable Linux Pen Drive with you. Many times, your system may crash unexpectedly, or even your DVD ROM faces some problem or you might just want to dual boot Linux with Windows to give it a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, you may not realize today, but it is very essential to have a Bootable Linux Pen Drive with you. Many times, your system may crash unexpectedly, or even your DVD ROM faces some problem or you might just want to dual boot Linux with Windows to give it a try? In these scenarios a bootable pen drive might come to rescue. It is the most easy and efficient way to install Linux on your computer. You may also use bootable drive to run a live image of the OS just like we have Live CD.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LinuxLive USB Creator&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this tutorial, we’ll learn how to make a bootable linux pen drive quickly and keep it ready to fight with unexpected tragedies that might occur with computers or even just to have a taste of new Linux Distros?&lt;br&gt;
Steps to Make Bootable Linux Live USB:&lt;/p&gt;
&lt;p&gt;1) Download your favourite Linux Distro (.iso file) from their official site and keep it ready with you.&lt;/p&gt;
&lt;p&gt;Quick links for Ubuntu, Fedora 20 (x86_64).&lt;/p&gt;
&lt;p&gt;2) Go to LinuxLive USB Creator website and download it.&lt;/p&gt;
&lt;p&gt;3) Now run the LinuxLive USB Creator as shown:&lt;/p&gt;
&lt;p&gt;LinuxLive USB Creator steps&lt;/p&gt;
&lt;p&gt;All the steps are indicated in the above image along with step no.&lt;/p&gt;
&lt;p&gt;4) Select the USB drive/ CD (preferably do it on a USB) you want to install the image on.&lt;/p&gt;
&lt;p&gt;5) Now choose the source of image file downloaded earlier. Alternatively, you can download the iso file in this step too or even select a CD as a source.&lt;/p&gt;
&lt;p&gt;The system would analyze the image. This would take a few moments.&lt;/p&gt;
&lt;p&gt;6) Now you can select the Persistence. Keep it more than 300 MB.&lt;/p&gt;
&lt;p&gt;What is Persistence?&lt;/p&gt;
&lt;p&gt;On Live USB or Live CD, after you reboot, all the preferences would be lost. The persistence data helps in storing these preferences so that they won’t be discarded after you reboot your live machine.&lt;/p&gt;
&lt;p&gt;7) Now you can select three easy options as per your requirements:&lt;/p&gt;
&lt;p&gt;Hide Created files on key.&lt;br&gt;
Format the key in FAT32.&lt;br&gt;
Enable launching LinuxLive in Windows (This would require Internet)&lt;/p&gt;
&lt;p&gt;You should select all the three options.&lt;/p&gt;
&lt;p&gt;8) Now click on the lightening button and the process will begin. It would take some time depending on the size of the OS. Once the process is finished, you have a bootable linux USB key/ CD with you.&lt;/p&gt;
&lt;p&gt;Special Feature: If you install Ubuntu for instance, you’ll find wubi.exe file in your key which you can execute inside windows to set up Ubuntu.&lt;/p&gt;
&lt;p&gt;Have you faced any problem in executing the above steps? or have something to say? Do let us know through the comments section below or give me a shout on Twitter \@ErSanyamKhurana&lt;/p&gt;</content><category term="linux"></category><category term="usb"></category></entry><entry><title>Understanding Complete Boot Process In Linux</title><link href="//thegeekyway.com/understanding-complete-boot-process-linux/" rel="alternate"></link><published>2014-09-11T14:48:00+05:30</published><updated>2014-09-11T14:48:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-09-11:/understanding-complete-boot-process-linux/</id><summary type="html">&lt;p&gt;Ever wondered, what happens behind the scenes to boot Linux? Knowing about what happens from the time you press the power button to the time when you get the login screen on Linux, i.e. boot process in Linux is very important. It can come very handy when you're debugging …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever wondered, what happens behind the scenes to boot Linux? Knowing about what happens from the time you press the power button to the time when you get the login screen on Linux, i.e. boot process in Linux is very important. It can come very handy when you're debugging why isn't a system booting properly or even when it refuses to boot completely.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/09/Linux_boot.png"&gt;&lt;img alt="Boot Process in Linux" src="//thegeekyway.com/uploads/images/2014/09/Linux_boot.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So, let's start to understand the boot process in Linux in a step-by-step manner.&lt;/p&gt;
&lt;h2&gt;1) POST (POWER ON SELF TEST)&lt;/h2&gt;
&lt;p&gt;When you press the Power Button, the &lt;em&gt;POST operation (Power on Self Test)&lt;/em&gt; occurs when &lt;em&gt;BIOS (Basic Input / Output System)&lt;/em&gt; initializes the hardware, testing the main memory of your system and looking for all other hardware device including keyboard, screen, mouse etc. The BIOS is actually stored on the &lt;em&gt;ROM ( Read Only Memory)&lt;/em&gt; on the Motherboard and after BIOS, all the operation is controlled by the Operating System itself.&lt;/p&gt;
&lt;h2&gt;2) Boot Loader - First &amp;amp; Second stage Boot Loader&lt;/h2&gt;
&lt;p&gt;The control from BIOS is then passed to the Boot Loader once the POST operation is completed as explained above. The Boot Loader is actually stored in the boot sector, often the first sector of your disk for BIOS or &lt;strong&gt;&lt;em&gt;MBR (Master Boot Records) System&lt;/em&gt;&lt;/strong&gt; . The boot loader then searches for a bootable partition, and once it finds the bootable partition, it transfers control to (second stage) boot loader like GRUB and then loads it into the memory. This process can be carried out by &lt;strong&gt;&lt;em&gt;EFI partition for Unified Extensible Firmware Interface (UEFI) systems.&lt;/em&gt;&lt;/strong&gt; These systems reads the Boot Manager data to determine which UEFI application to load and from which partition on the disk. And then it launches the UEFI application like GRUB. This method is complicated yet versatile than the previous MBR method.&lt;/p&gt;
&lt;p&gt;The second stage boot loader is found in /boot directory and it presents a UI (splash screen) to the user where they can choose which OS to boot, in case of Multi-Boot system. The main aim of the boot loader is to lead kernel image along with initializing the RAM to load all the device drivers needed to start the system. There are many boot loaders available for Linux. However the most important one include &lt;em&gt;GRUB (Grand Unified Boot Loader) &amp;amp; ISOLINUX&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;3) CMOS comes into play&lt;/h2&gt;
&lt;p&gt;Then the most crucial information about peripherals and current date and time are then loaded form CMOS, which is actually a battery-powered small store capable of storing and keeping track of date and time of the system even when it is turned off.&lt;/p&gt;
&lt;h2&gt;4) initramfs &amp;amp; Kernel loaded&lt;/h2&gt;
&lt;p&gt;The boot loader loads the &lt;strong&gt;&lt;em&gt;initramfs (initial RAM-based file system)&lt;/em&gt;&lt;/strong&gt; and kernel into the main memory. Once the kernel is loaded into the memory, it configures the hardware that is attached to the system and loads important applications for users.&lt;/p&gt;
&lt;p&gt;The initramfs filesystem consists of Program and binary files which is essential for mounting proper root filesystem, providing kernel functionality, locating of devices, locating of drivers for devices and loading them and checking of errors in the root filesystem.&lt;/p&gt;
&lt;p&gt;The mount system actually instructs if the filesystem is ready to be used and then associates it with particular point in the overall hierarchy of the filesystem or the mount point. If this step is successfully carried out, then the initramfs would be cleared out from the RAM and then the init program from &lt;strong&gt;/sbin/init&lt;/strong&gt; is executed. The init actually handles the mounting and pivoting of the final root system. This is the initial process of the system which then helps in starting other processes to get system running. If there are special device drivers needed to be accessed, then they must be included in the initramfs image.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;When you trace the path of origin for the processes, you’ll find all of them originated from init itself expect the kernel process which are started by kernel itself for managing of internal operating system details.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;5) Runlevels in Linux&lt;/h2&gt;
&lt;p&gt;In the traditional System V Unix, there was a sequence of runlevels containing different scripts to start and stop services. There are a total of 6 runlevels:&lt;/p&gt;
&lt;p&gt;Runlevel 0&lt;/p&gt;
&lt;p&gt;Runlevel 1&lt;/p&gt;
&lt;p&gt;Runlevel 2&lt;/p&gt;
&lt;p&gt;Runlevel 3&lt;/p&gt;
&lt;p&gt;Runlevel 4&lt;/p&gt;
&lt;p&gt;Runlevel 5&lt;/p&gt;
&lt;p&gt;Within each runlevel, user can set each individual services to run or to shut down (We would understand about RunLevels in detail in the next post). Most distributions are now moving away from this standard of System V standard. init is responsible for system running and shutting it down for cleaning up the non-kernel processes whenever necessary. It also restarts the login services for users as needed when users login and logout.&lt;/p&gt;
&lt;h2&gt;6) Text-Mode Login&lt;/h2&gt;
&lt;p&gt;Next, there is a text-mode login prompt started by init (done by program getty). After entering the username and password, user is offered with a command shell which is often &lt;strong&gt;&lt;em&gt;(Bourne After Shell) BASH&lt;/em&gt;&lt;/strong&gt;, in most of the linux distros which is ready to take in commands and then execute the operation associated with each command.&lt;/p&gt;
&lt;h2&gt;7) X Window System&lt;/h2&gt;
&lt;p&gt;At the end of the boot process, the X Windows system is loaded which starts a display manager, loads x server for the x clients and manage graphical logins by starting with a desktop environment like Gnome, KDE etc. depending on the system.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;And Linux is now up and running for use. I hope this would be bit informative for you and would help you. Please let us know your thoughts through comments below.&lt;/p&gt;</content><category term="boot"></category><category term="linux"></category></entry><entry><title>How To Save Logs In IRC using XChat</title><link href="//thegeekyway.com/save-logs-irc-using-xchat/" rel="alternate"></link><published>2014-08-24T22:21:00+05:30</published><updated>2014-08-24T22:21:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-08-24:/save-logs-irc-using-xchat/</id><summary type="html">&lt;p&gt;Howdy Readers! Wonder if you're facing any problem regarding any FOSS project, the first thing you'll do is Google it to solve your problem. But sometime it can happen, you couldn't find it on the net, may be you discovered a bug? or let's say you just want to contribute …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Howdy Readers! Wonder if you're facing any problem regarding any FOSS project, the first thing you'll do is Google it to solve your problem. But sometime it can happen, you couldn't find it on the net, may be you discovered a bug? or let's say you just want to contribute or discuss about any FOSS Projects. You can communicate directly with Developers of that specific project mainly via two mediums, IRC (Internet Relay Chat) or Mailing List. But don't just rush to mailing list, first ask on IRC itself, if you didn't get any reply or no one is available, then you can drop a mail to the mailing list.&lt;/p&gt;
&lt;p&gt;There are various Clients you can use for IRC, and sometimes it's crucial to have logs with you. They can be important to refer back in near future, about what conversation you had. So, today, we'll see how you can save logs via &lt;strong&gt;xChat (an IRC client)&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Here is a quick step by step guide to save your logs in xChat:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Open up XChat, on whatever OS you are using. Currently, this tutorial would include images from Fedora.&lt;/p&gt;
&lt;p&gt;Connect to any Server and channel of your choice.&lt;/p&gt;
&lt;p&gt;From the Menu at the Title Bar, select Settings -&gt; Preferences.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/08/Preferences_XChat.png" title="Select Settings -&gt; Preferences from xchat"&gt;&lt;img alt="Select Settings -&gt; Preferences from xchat" src="{static}/uploads/images/2014/08/Preferences_XChat.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A window will pop up like this.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/08/Logging_xchat.png" title="Selecting Logging Option from left window pane"&gt;&lt;img alt="Selecting Logging Option from left window pane" src="//thegeekyway.com/uploads/images/2014/08/Logging_xchat.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now select the Logging tab from the Left pane, and you'll see something like the one shown below. Now select the option of "&lt;u&gt;&lt;strong&gt;Enable Logging of conversations to Disk&lt;/strong&gt;&lt;/u&gt;".&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/08/enablelogging_xchat.png" title="Enabling logging in xChat"&gt;&lt;img alt="Enabling logging in xChat" src="//thegeekyway.com/uploads/images/2014/08/enablelogging_xchat.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;(Optional): You can select how the name of the log file should be by entering in the text box shown above.&lt;/p&gt;
&lt;p&gt;You can use these options to save the logs : &lt;strong&gt;%s = server, %n = Network, %c = Channel&lt;/strong&gt;, or just leave the default and you're good to go.&lt;/p&gt;
&lt;p&gt;That's it !&lt;/p&gt;
&lt;p&gt;Now you can see all your logs via the &lt;strong&gt;Open Data Folder&lt;/strong&gt; button.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/08/xchat_enable_login.png" title="View the logs by clicking on Open Data Folder"&gt;&lt;img alt="View the logs by clicking on Open Data Folder" src="//thegeekyway.com/uploads/images/2014/08/xchat_enable_login.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The logs would be saved exactly in the format you chose.&lt;/p&gt;
&lt;p&gt;If you have any difficulty in the procedure, please leave a comment below. We'll help you at the earliest.&lt;/p&gt;</content><category term="FOSS"></category><category term="IRC"></category><category term="logging"></category><category term="xChat"></category></entry><entry><title>Structures And User Defined Data Types (Part - I)</title><link href="//thegeekyway.com/structures-c-programming-language-user-defined-data-types/" rel="alternate"></link><published>2014-08-05T00:17:00+05:30</published><updated>2014-08-05T00:17:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-08-05:/structures-c-programming-language-user-defined-data-types/</id><summary type="html">&lt;p&gt;Howdy folks, hope you're doing well. We've already discussed about &lt;a href="http://www.thegeekyway.com/learning-1-dimensional-arrays/" title="Learning About 1 Dimensional Arrays (1 D Arrays)"&gt;1D Arrays and their memory organization&lt;/a&gt; and further about &lt;a href="http://www.thegeekyway.com/learning-2d-multidimensional-arrays/" title="Learning About 2D And Multidimensional Arrays"&gt;2D arrays and multidimensional arrays&lt;/a&gt;. In case you missed it, read them first. Coming to this tutorial, we'll be discussing the way to develop our own data types in the C …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Howdy folks, hope you're doing well. We've already discussed about &lt;a href="http://www.thegeekyway.com/learning-1-dimensional-arrays/" title="Learning About 1 Dimensional Arrays (1 D Arrays)"&gt;1D Arrays and their memory organization&lt;/a&gt; and further about &lt;a href="http://www.thegeekyway.com/learning-2d-multidimensional-arrays/" title="Learning About 2D And Multidimensional Arrays"&gt;2D arrays and multidimensional arrays&lt;/a&gt;. In case you missed it, read them first. Coming to this tutorial, we'll be discussing the way to develop our own data types in the C programming language. It is done through something known as structures, and that's what we'll explore about here.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/08/structures-and-user-defined-data-types-I.png" title="Structure and User Defined Data Types in C Programming"&gt;&lt;img alt="Structure and User Defined Data Types in C Programming" src="//thegeekyway.com/uploads/images/2014/08/structures-and-user-defined-data-types-I.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;What is a structure in C ?&lt;/h2&gt;
&lt;p&gt;Structure is basically a derived data type in C programming language. It is defined as a collection of variables (which may be of different data types) to be grouped together and referred to as a single entity. This gives you ability to define your own data types i.e. user defined data types.&lt;/p&gt;
&lt;h2&gt;Difference between a structure and an array?&lt;/h2&gt;
&lt;p&gt;The next question which may arise, would be what's the difference between array and structure. Well, an array is homogeneous set of elements i.e. array is capable of holding different values but of same data type. On the other hand, structure is combination of variables of different data types.&lt;/p&gt;
&lt;p&gt;Structures can be used to track information which is common to large group of entities.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to declare a structure?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let us first see the basic semantics of declaring a structure. It is much like defining ordinary variable like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;data_type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;variable_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nv"&gt;variable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now for structure, it is done through keyword struct like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;struct_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let us take an example to track record of students in a high school. Each student would have certain set of properties/attributes which would differentiate them from one another. We'll consider a student has a roll number of type integer , name of type string and  marks of type float for the time being. Now, let's define our structure named student with these properties.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;student&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollno&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;char&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Taking&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;character&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="k"&gt;free&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;declare&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;many&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt; &lt;span class="n"&gt;restricting&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;Size&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;structure&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;known&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;compiler&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that we have our basic structure with it's data members ready, we can declare instances of it like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;student&lt;/span&gt; &lt;span class="n"&gt;George&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, all members of the structure can be accessed via our instance named George using membership access or dot operator like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;George&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rollno&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;George&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and so on...&lt;/p&gt;
&lt;p&gt;It's essential to remember here that the members we declare in a structure would take the memory only when instances are declared. You're free to name your instance anything. It's just like declaring a variable whose data type would be now your own defined data type, which is struct student here.&lt;/p&gt;
&lt;p&gt;Notice above how we've defined the instances of a structure, another way of declaring them can be like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;Members&lt;/span&gt;

&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;structure&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, for the above example, it can be done as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;student&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollno&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;char&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Taking&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;character&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="n"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="n"&gt;George&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Henry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Steve&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;Declare&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;many&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, you can access each of the properties for a particular structure variable like :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;George&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rollno&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;George&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;strycpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;George&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;George&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Similarly all other structure variables' data members can be defined.&lt;/p&gt;
&lt;p&gt;That's solve for this tutorial, a lot more is there to know about structure, which we'll cover in the second part.&lt;/p&gt;</content><category term="c programming"></category><category term="structures"></category><category term="user defined data types"></category></entry><entry><title>Learning About 2D And Multidimensional Arrays</title><link href="//thegeekyway.com/learning-2d-multidimensional-arrays/" rel="alternate"></link><published>2014-07-24T13:04:00+05:30</published><updated>2014-07-24T13:04:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-07-24:/learning-2d-multidimensional-arrays/</id><summary type="html">&lt;p&gt;Well, I'm glad you reached at this point, we've already discussed about &lt;a href="http://www.thegeekyway.com/learning-1-dimensional-arrays/" title="Learning About 1 Dimensional Arrays (1 D Arrays)"&gt;1D arrays and the memory organization&lt;/a&gt;, and in this post, we'll know about 2D arrays and Multidimensional Arrays. They are not very much different from 1 D arrays as we looked in the last tutorial. So, let's start …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, I'm glad you reached at this point, we've already discussed about &lt;a href="http://www.thegeekyway.com/learning-1-dimensional-arrays/" title="Learning About 1 Dimensional Arrays (1 D Arrays)"&gt;1D arrays and the memory organization&lt;/a&gt;, and in this post, we'll know about 2D arrays and Multidimensional Arrays. They are not very much different from 1 D arrays as we looked in the last tutorial. So, let's start:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/07/2D_mutlidimensional_arrays.png" title="Learning about 2D and multidimensional arrays in C"&gt;&lt;img alt="Learning about 2D and multidimensional arrays in C" src="//thegeekyway.com/uploads/images/2014/07/2D_mutlidimensional_arrays.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this tutorial, we'll cover the following topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.TheGeekyWay.com/learning-2d-multidimensional-arrays/#2d_arrays"&gt;&lt;strong&gt;&lt;em&gt;2 Dimensional Arrays (2D Arrays)&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.TheGeekyWay.com/learning-2d-multidimensional-arrays/#2d_declare"&gt;&lt;strong&gt;&lt;em&gt;Declaration of 2D Arrays&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2d_input"&gt;&lt;strong&gt;&lt;em&gt;Inputting Data in 2D Arrays&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2d_output"&gt;&lt;strong&gt;&lt;em&gt;Traversing and Output from 2D Array&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#multidimensional_arrays"&gt;&lt;strong&gt;&lt;em&gt;Multidimensional Arrays&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#multidimensional_declare"&gt;&lt;strong&gt;&lt;em&gt;Declaration of Multidimensional Arrays&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multidimensional_input"&gt;&lt;strong&gt;&lt;em&gt;Inputting Data in Multidimensional Arrays&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multidimensional_output"&gt;&lt;strong&gt;&lt;em&gt;Traversing and output from Multidimensional Arrays&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dimensional-arrays" style="text-align: center;"&gt;&lt;strong&gt;2 Dimensional Arrays&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Without saying anything much about 2D arrays here, let's first have a look at the memory organization in 2D arrays:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/07/2DArrays_Representation.png" title="Memory Organization of 2D Arrays in memory"&gt;&lt;img alt="Memory Organization of 2D Arrays in memory" src="//thegeekyway.com/uploads/images/2014/07/2DArrays_Representation.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Clearly, it's much like 1D arrays but this time the contiguous memory blocks have to be occupied in two directions considered as along x and y co-ordinates.&lt;/p&gt;
&lt;p&gt;With this basic memory organization picture in mind, let's now see how we declare a 2D Array.&lt;/p&gt;
&lt;p&gt;&lt;p #2d_declare&gt;&lt;/p&gt;&lt;strong&gt;Declaration of 2D Array:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let's take an example that you want to create a 3 x 3 Matrix named mat of integer data type, so we would declare as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first number in square brackets is for the number of rows and the next one is for number of columns. For instance, now say we need to create a matrix of say 4 rows and 6 columns, of float data type. it would look like this:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/07/mat_4x6.png" title="Matrix memory representation 4 X 6"&gt;&lt;img alt="Matrix memory representation 4 X 6" src="//thegeekyway.com/uploads/images/2014/07/mat_4x6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, it would be declared as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let us come back to our original mat, which is a 3 x 3 matrix and see how to fill it.&lt;/p&gt;
&lt;p&gt;&lt;p #2d_input&gt;&lt;/p&gt;&lt;strong&gt;Putting in data to 2D Arrays:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since we need to refer a location by both the row number and the column number, we need to fill in each block of memory by traversing through each row first and then each column in that row, then come to next row, traverse each column and so on...&lt;/p&gt;
&lt;p&gt;Here we would need two loops, one for updating the row number and the next to update the column number. Since we are moving from left to right for each row, remember that we will update the row value less frequently than the column value.&lt;/p&gt;
&lt;p&gt;So, basic syntax would be something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;lt;= row; i++ )&lt;/span&gt;
{
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; j &amp;lt;= col; j++)&lt;/span&gt;
  {
     &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;matrix&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;][&lt;span class="nv"&gt;j&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here row and col would correspond to the total number of rows and columns in the matrix. Inside the loop, we're just taking input from the user such that the value of &lt;strong&gt;j&lt;/strong&gt; i.e. our column would update more frequently from left to right than the value of &lt;strong&gt;i&lt;/strong&gt; i.e. our row.&lt;/p&gt;
&lt;p&gt;Now, let's start accepting values from user for our for our matrix named mat which is a 3 x 3 matrix.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;mat&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;][&lt;span class="mi"&gt;3&lt;/span&gt;]&lt;span class="c1"&gt;; //Declaring 3 x 3 , 2D matrix&lt;/span&gt;

&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;,&lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="c1"&gt;; //Declaring variables to be used in loop&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;lt; 3; i++ )  // loop for updating row number&lt;/span&gt;
{
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; j &amp;lt; 3; j++)  // loop for updating col number&lt;/span&gt;
  {
     &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;mat&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;][&lt;span class="nv"&gt;j&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p #2d_output&gt;&lt;/p&gt;&lt;strong&gt;Traversing and Printing 2D Array:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Next, we need to traverse this array, it would be done as:&lt;/p&gt;
&lt;p&gt;Traversing means just processing through each element of the array and apply an operation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;We&lt;/span&gt; &lt;span class="nv"&gt;have&lt;/span&gt; &lt;span class="nv"&gt;assumed&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;initialized&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;taking&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;shown&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="nv"&gt;snippet&lt;/span&gt; &lt;span class="nv"&gt;above&lt;/span&gt;.

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Traversing&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;lt; 3; i++)&lt;/span&gt;
{
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; j &amp;lt; 3; j++)&lt;/span&gt;
  {
    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Traversing&lt;/span&gt; &lt;span class="nv"&gt;here&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;applying&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;printing&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt; &lt;span class="nv"&gt;operation&lt;/span&gt;
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;mat&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;][&lt;span class="nv"&gt;j&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="multidimensional-array" style="text-align: center;"&gt;&lt;strong&gt;Multidimensional Array :&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Extending what we've learned about 1D and 2D arrays, there can be 3D, 4D, 5D and even 100D arrays, though the complexity would multiply at each level, so we don't use beyond 2D arrays generally. In some complex application, we may use 3D arrays, but beyond that, because of the increase in the complexity, they are hardly used.&lt;/p&gt;
&lt;p&gt;&lt;p #multidimensional_declare&gt;&lt;/p&gt;&lt;strong&gt;Declaration of Multidimensional Arrays:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So, for declaring a 3 D array, you just have to define one more dimension as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Declaring&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Similarly, for a 4 D array,  declaration would be :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Declaring&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt;
                         &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, generally, whatever dimension you want, you can add while declaring.&lt;/p&gt;
&lt;p&gt;&lt;p #multidimensional_input&gt;&lt;/p&gt;&lt;strong&gt;Putting in data to Multidimensional Array:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Very similar to filling up a 2 D array,  a 3D array can be filled up by using 3 loops (one for iterating through each dimension). Remember, the inner loop will always has a fast frequency to iterate than the loop enclosing it and so on...&lt;/p&gt;
&lt;p&gt;Let's fill up a 3D array of type float here as an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;float&lt;/span&gt; &lt;span class="nv"&gt;mat&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;][&lt;span class="mi"&gt;4&lt;/span&gt;][&lt;span class="mi"&gt;5&lt;/span&gt;]&lt;span class="c1"&gt;; // Declaring array mat of type float with dimensions&lt;/span&gt;
                    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Filling&lt;/span&gt; &lt;span class="nv"&gt;up&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;taking&lt;/span&gt; &lt;span class="nv"&gt;values&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;lt; 3; i++)&lt;/span&gt;
{
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; j &amp;lt; 4; j++)&lt;/span&gt;
  {
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; k &amp;lt; 5; k++)&lt;/span&gt;
    {
      &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Taking&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="nv"&gt;here&lt;/span&gt; &lt;span class="nv"&gt;corresponding&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt; &lt;span class="nv"&gt;dimension&lt;/span&gt;
      &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;mat&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;][&lt;span class="nv"&gt;j&lt;/span&gt;][&lt;span class="nv"&gt;k&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
  }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Similarly, just increase the number of loops depending on the dimensions. Thus, if you have created an N dimension array, it would take N loops to fill it.&lt;/p&gt;
&lt;p&gt;&lt;p #multidimensional_output&gt;&lt;/p&gt;&lt;strong&gt;Traversing and Output of a  Multidimensional Array:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the same way as explained above, you can print a multidimensional array by iterating through it using the same no. of loops as the dimension of the array as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="nv"&gt;snippet&lt;/span&gt; &lt;span class="nv"&gt;assumes&lt;/span&gt; &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;we&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;ve declared and filled up the array as shown // above.&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Traversing&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;lt; 3; i++)&lt;/span&gt;
{
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; j &amp;lt; 4; j++)&lt;/span&gt;
  {
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; k &amp;lt; 5; k++)&lt;/span&gt;
    {
      &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Taking&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="nv"&gt;here&lt;/span&gt; &lt;span class="nv"&gt;corresponding&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt; &lt;span class="nv"&gt;dimension&lt;/span&gt;
      &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;mat&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;][&lt;span class="nv"&gt;j&lt;/span&gt;][&lt;span class="nv"&gt;k&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
  }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hope this had been a bit informative for you and would help you. Next, we'll be going to discuss about Structures in C language.&lt;/p&gt;
&lt;p&gt;Have any doubts? Just leave a comment below or give me a shout on twitter \@ErSanyamKhurana&lt;/p&gt;</content><category term="2D"></category><category term="arrays"></category><category term="multidimensional"></category></entry><entry><title>ASP.Net Basics : Populate checkboxlist from database using C#</title><link href="//thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/" rel="alternate"></link><published>2014-07-19T12:31:00+05:30</published><updated>2014-07-19T12:31:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-07-19:/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/</id><summary type="html">&lt;p&gt;In this tutorial we will be discussing how to populate data in checkboxlist or radiobutton list from the values taken from database and display them on the screen.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/asp-net11.jpg" title="Populate checkboxlist from database using C#"&gt;&lt;img alt="Populate checkboxlist from database using C#" src="//thegeekyway.com/uploads/images/2014/03/asp-net11.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let us assume a database with following table definitions (from my &lt;a class="external" href="http://myCampusNotes.com"&gt;next project&lt;/a&gt;) and table values.&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/03/asp1.png"&gt;&lt;img alt="populate checkboxlist from database using c# and .net" src="//thegeekyway.com/uploads/images/2014/03/asp1.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/div&gt;
and the output should be&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/asp2.png"&gt;&lt;img alt="populate checkboxlist from database using c# and .net" src="//thegeekyway.com/uploads/images/2014/03/asp2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Various …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this tutorial we will be discussing how to populate data in checkboxlist or radiobutton list from the values taken from database and display them on the screen.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/asp-net11.jpg" title="Populate checkboxlist from database using C#"&gt;&lt;img alt="Populate checkboxlist from database using C#" src="//thegeekyway.com/uploads/images/2014/03/asp-net11.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let us assume a database with following table definitions (from my &lt;a class="external" href="http://myCampusNotes.com"&gt;next project&lt;/a&gt;) and table values.&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/03/asp1.png"&gt;&lt;img alt="populate checkboxlist from database using c# and .net" src="//thegeekyway.com/uploads/images/2014/03/asp1.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/div&gt;
and the output should be&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/asp2.png"&gt;&lt;img alt="populate checkboxlist from database using c# and .net" src="//thegeekyway.com/uploads/images/2014/03/asp2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Various steps involved in populating data from database to CheckBoxList (You can directly jump to that link by clicking on the following links)&lt;/p&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_1"&gt;Step 1 : Select the checkBoxList control from the toolbox.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_2"&gt;Step 2 : On the C# side coding create a SQL connection.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_3"&gt;Step 3 : Write your SQL Query.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_4"&gt;Step 4 : Create a SQL Adapter.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_5"&gt;Step 5 : Create a Dataset.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_6"&gt;Step 6 : Fill the dataset with the values from the SqlDataAdapter.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_7"&gt;Step 7 : Check if the resultant dataset produce rows or not.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_8"&gt;Step 8 : Provide the dataSet to the Checkbox list.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_9"&gt;Step 9 : Bind the data of the checkboxlist.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_10"&gt;Step 10: The final step : Provide the DataTextField and DataValueField to the checkbox list.&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a href="http://www.thegeekyway.com/asp-net-basics-populate-checkboxlist-database-using-c-dotnet/#h_4_11"&gt;Step 11: The complete code&lt;/a&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_1&gt;Step 1 :  &lt;p style="text-decoration: underline; color: black;"&gt;Select the checkBoxList control from the toolbox.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;You can get to the toolbox by pressing ctrl W,X and typing checkBoxList you can drag drop the checkBoxList control on the aspx page. You will get the following code :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;asp:CheckBoxList&lt;/span&gt; &lt;span class="na"&gt;ID=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CheckBoxList1&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;runat=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/asp:CheckBoxList&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;ID = “CheckBoxList1″&lt;/strong&gt; means that the CheckBoxList has been allotted a specific ID so that we can work on the C# page using that reference.&lt;br&gt;
&lt;strong&gt;runat=”server”&lt;/strong&gt; means that the code will run on the server side (i.e. on the C# end) also, if we remove the code then we are left with the client side scripting only.&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_2&gt;Step 2 :  &lt;p style="text-decoration: underline; color: black;"&gt;On the C# side coding create a SQL connection.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;Sql connection can be created using the following asp (C#) snippet&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SqlClient&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;SqlConnection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newSqlConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Web&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebConfigurationManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionStrings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;ConnectionString&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;Conn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and in web.config add the following lines under configurations tab&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;connectionStrings&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;add&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ConnectionString&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;connectionString=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Data Source=(LocalDB)v11.0;AttachDbFilename=|DataDirectory|(your database name);Integrated Security=True&amp;quot;&lt;/span&gt;
      &lt;span class="na"&gt;providerName=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;System.Data.SqlClient&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/connectionStrings&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;you need to include the System.Data.SqlClient class inorder to work with sql.&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_3&gt;Step 3 :  &lt;p style="text-decoration: underline; color: black;"&gt;Write your SQL Query.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;The next step after creating the connection is to open the connection we can use con.open() [here con is the object of SqlConnection class created in Step2]. The SQL query for this table will be :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;stringquery&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;SELECT distinct[Clg_name] FROM [Complete_table]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_4&gt;Step 4 :  &lt;p style="text-decoration: underline; color: black;"&gt;Create a SQL Adapter.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;SQL adapter is derived from calss System.Data.SqlClient.SqlDataAdapter which represents a set of data commands and a database connection that are used to fill the System.Data.Dataset and update a SQL Server database. This class cannot be inherited.&lt;/p&gt;
&lt;p&gt;
The following C\# snippet creates a SQL adapter

&lt;textarea class="crayon-plain print-no" style="-moz-tab-size: 4; font-size: 16px ! important; line-height: 16px ! important; opacity: 0; overflow: hidden; z-index: 0;" readonly="readonly" wrap="soft" data-settings="dblclick"&gt;
&lt;/textarea&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SqlDataAdapter&lt;/span&gt; &lt;span class="n"&gt;da&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newSqlDataAdapter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_5&gt;Step 5 :  &lt;p style="text-decoration: underline; color: black;"&gt;Create a Dataset.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;Dataset represents an in-memory cache of data, i.e. the data which is being retrieved from database and stored into checkboxlist is being stored in cache and data is retreived from cache using Dataset.&lt;/p&gt;
&lt;p&gt;The C# snippet to create a Dataset is as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DataSet&lt;/span&gt; &lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newDataSet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_6&gt;Step 6 :  &lt;p style="text-decoration: underline; color: black;"&gt;Fill the dataset with the values from the SqlDataAdapter.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;Now we need to fill in the data from sql dataAdapter using dataset, the C# snippet for the same is :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;da&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_7&gt;Step 7 :  &lt;p style="text-decoration: underline; color: black;"&gt;Check if the resultant dataset produce rows or not.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;We can check if the dataset which populates checkboxlist from database produce rows or not, if it doesnt produce rows we can simply give an error message that no results available.&lt;br&gt;
Here is the C# snippet for the same :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt;.&lt;span class="nv"&gt;Tables&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;Rows&lt;/span&gt;.&lt;span class="nv"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
{
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;more&lt;/span&gt; &lt;span class="nv"&gt;coding&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;discussed&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="k"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;steps&lt;/span&gt;
}&lt;span class="k"&gt;else&lt;/span&gt;{
   &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Give&lt;/span&gt; &lt;span class="nv"&gt;an&lt;/span&gt; &lt;span class="nv"&gt;error&lt;/span&gt; &lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;no&lt;/span&gt; &lt;span class="nv"&gt;results&lt;/span&gt; &lt;span class="nv"&gt;found&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_8&gt;Step 8 :  &lt;p style="text-decoration: underline; color: black;"&gt;Provide the dataSet to the Checkbox list.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;Next step is to point the checkBoxList towards the SQL database for that we will use the dataset to point to the database. Here is the following C# snippet.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CheckBoxList1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataSource&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_9&gt;Step 9 :  &lt;p style="text-decoration: underline; color: black;"&gt;Bind the data of the checkboxlist.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;Now the next and the second last step is to bind the data. It can be done using following C# snippet&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CheckBoxList1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataBind&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;on writing till here we get the following output :-&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/asp4.png"&gt;&lt;img alt="populate checkboxlist from database using c# and .net" src="//thegeekyway.com/uploads/images/2014/03/asp4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_10&gt;Step 10:  &lt;p style="text-decoration: underline; color: black;"&gt;The final step : Provide the DataTextField and DataValueField to the checkbox list.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;Here the DataTextField and DataValueField is the name of the column in our database, the C# snippet for the same is :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CheckBoxList1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataTextField&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Clg_Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;CheckBoxList1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataValueField&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Clg_Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thats it, the data in database will be binded to checkbox list and will be displayed.&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;&lt;p #h_4_11&gt;Step 11:  &lt;p style="text-decoration: underline; color: black;"&gt;The complete code.&lt;/p&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p&gt;here is the complete code :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;protectedvoidPage_Load&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;objectsender&lt;/span&gt;,&lt;span class="nv"&gt;EventArgse&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    {
        &lt;span class="nv"&gt;SqlConnection&lt;/span&gt; &lt;span class="nv"&gt;con&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;newSqlConnection&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;Configuration&lt;/span&gt;.&lt;span class="nv"&gt;WebConfigurationManager&lt;/span&gt;.&lt;span class="nv"&gt;ConnectionStrings&lt;/span&gt;[&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ConnectionString&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;].&lt;span class="nv"&gt;ConnectionString&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;stringquery&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;try&lt;/span&gt;
        {
            &lt;span class="nv"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;SELECT distinct[Clg_name] FROM [Complete_table]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;con&lt;/span&gt;.&lt;span class="nv"&gt;Open&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;SqlDataAdapter&lt;/span&gt; &lt;span class="nv"&gt;da&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;newSqlDataAdapter&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;query&lt;/span&gt;,&lt;span class="nv"&gt;con&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;DataSet&lt;/span&gt; &lt;span class="nv"&gt;ds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;newDataSet&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;da&lt;/span&gt;.&lt;span class="nv"&gt;Fill&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt;.&lt;span class="nv"&gt;Tables&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;Rows&lt;/span&gt;.&lt;span class="nv"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            {
                &lt;span class="nv"&gt;CheckBoxList1&lt;/span&gt;.&lt;span class="nv"&gt;DataSource&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;CheckBoxList1&lt;/span&gt;.&lt;span class="nv"&gt;DataTextField&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Clg_Name&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;CheckBoxList1&lt;/span&gt;.&lt;span class="nv"&gt;DataValueField&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Clg_Name&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;CheckBoxList1&lt;/span&gt;.&lt;span class="nv"&gt;DataBind&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="k"&gt;else&lt;/span&gt;
            {
                &lt;span class="nv"&gt;Response&lt;/span&gt;.&lt;span class="nv"&gt;Write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;No Results found&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
        }
        &lt;span class="nv"&gt;catch&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;ex&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Response&lt;/span&gt;.&lt;span class="nv"&gt;Write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;ex&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
        &lt;span class="nv"&gt;finally&lt;/span&gt;
        {
            &lt;span class="nv"&gt;con&lt;/span&gt;.&lt;span class="nv"&gt;Close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Have any doubt or stuck at any step? Feel free to ask in the comments section below.&lt;/p&gt;</content><category term="asp.net"></category><category term="checkboxlist"></category><category term="database"></category></entry><entry><title>Android Activity LifeCycle</title><link href="//thegeekyway.com/android-activity-lifecycle/" rel="alternate"></link><published>2014-07-18T00:35:00+05:30</published><updated>2014-07-18T00:35:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-07-18:/android-activity-lifecycle/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Activity&lt;/strong&gt; is the base class of an Android &lt;strong&gt;Activity (package android.app). &lt;/strong&gt;An Activity represents a view to the user. For eg. When we open Messaging app to write a new message, it is an Activity. After writing the message, when we open contacts to select the person, it can …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Activity&lt;/strong&gt; is the base class of an Android &lt;strong&gt;Activity (package android.app). &lt;/strong&gt;An Activity represents a view to the user. For eg. When we open Messaging app to write a new message, it is an Activity. After writing the message, when we open contacts to select the person, it can be considered as another activity and so on. So in simpler words, anything which completely occupies the screen and is different from the previous screen is called an Activity. In this tutorial we'll get to know about Android Activity Lifecycle.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="http://blog.mycampusnotes.com/wp-content/uploads/2014/07/Example_sketch.jpg"&gt;&lt;img alt="Example_sketch" src="http://blog.mycampusnotes.com/wp-content/uploads/2014/07/Example_sketch.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Two screens showing different activities&lt;/p&gt;
&lt;p&gt;As shown in previous tutorials, each android activity &lt;strong&gt;extends &lt;/strong&gt;the &lt;strong&gt;android.app.Activity &lt;/strong&gt;class. Activity is a concrete class and contains many methods which can be overwritten so that the activity behaves as per our choice. Such methods are called as lifecycle methods (discussed below).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; Each new activity must extend the Activity class (or its direct subclasses) and have corresponding entry in the AndroidManifest.xml file as shown below&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="http://blog.mycampusnotes.com/wp-content/uploads/2014/07/12.jpg"&gt;&lt;img alt="1" src="http://blog.mycampusnotes.com/wp-content/uploads/2014/07/12.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There are many methods to go from one activity to another. Also, we can either choose to &lt;strong&gt;finish &lt;/strong&gt;the previous activity, or leave it as it is.&lt;/p&gt;
&lt;p&gt;LifeCycle of Android Activity&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="http://blog.mycampusnotes.com/wp-content/uploads/2014/07/rVnSi.jpg"&gt;&lt;img alt="rVnSi" src="http://blog.mycampusnotes.com/wp-content/uploads/2014/07/rVnSi.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Source : Android Developers Website&lt;/p&gt;
&lt;p&gt;Some of you may have seen this screenshot in various books or on websites. Lifecycle is a fundamental concept in android which consists of many methods from &lt;strong&gt;Activity&lt;/strong&gt; class. Any practical application uses at least one lifecycle method. &lt;strong&gt;onCreate() &lt;/strong&gt;is one such method. People knowing about &lt;strong&gt;Java Applets &lt;/strong&gt;must be knowing what a lifecycle methods are, for others you’ll get to know shortly.&lt;/p&gt;
&lt;p&gt;The image shown above gives an overview of basic lifecycle methods. When an application starts, few of them are called. When it exits, different set of methods are called. Similarly when you navigate from one activity to another or come back, some methods are called. Below we have summarized what all methods are called in which situations.&lt;/p&gt;
&lt;p&gt;(The parameters, return types and access specifiers are not shown for now. )&lt;/p&gt;
&lt;p&gt;Below I have summarized what all methods are called in which situations.&lt;/p&gt;
&lt;p&gt;1. When an application starts, these methods are called :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)     onCreate()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)    onStart()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c)     onResume().&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2. When some other application is called, while your application was running :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)     onPause()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)    onStop()&lt;/strong&gt; are called as new activity completely blocks the screen.&lt;/p&gt;
&lt;p&gt;3. When you go back to your application, which was running previously,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)     onRestart()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)    onStart()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c)     onResume()&lt;/strong&gt; are called. Here,it is similar to 1st one except for the difference that &lt;strong&gt;onRestart()&lt;/strong&gt; is called rather than &lt;strong&gt;onCreate()&lt;/strong&gt;. This is because the app exists in memory and just need to be loaded from it.&lt;/p&gt;
&lt;p&gt;4. When the user presses back button to exit the application or there is no memory for the app, the &lt;strong&gt;onDestroy() &lt;/strong&gt;method is called. In normal case, the order of execution for a running application would be,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)     onPause()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)    onStop()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c)     onDestroy().&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Difference between &lt;strong&gt;“onPause()”&lt;/strong&gt;   and   &lt;strong&gt;“onPause() + onStop()” &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are some situations when some new activity partially occupies the screen. In such cases, some part of our activity is still visible to the user and is not shifted to &lt;strong&gt;&lt;a href="http://developer.android.com/guide/components/tasks-and-back-stack.html"&gt;BackStack&lt;/a&gt;. &lt;/strong&gt;On the other hand, there are some cases when some new activity or application completely blocks the GUI (or screen), our activity’s GUI is shifted to BackStack. So in the first case (partially occupied), only the &lt;strong&gt;onPause()&lt;/strong&gt; method is called. Whereas in the second case (completely blocked GUI), &lt;strong&gt;onPause() + onStop()&lt;/strong&gt; methods are called. I hope you have now understood the difference between the situations where one or both of them are called.&lt;/p&gt;
&lt;p&gt;In the next tutorial, I’ll show the code for the same thing which we have discussed till now. It will also cover debugging in android using a special class (&lt;strong&gt;android.util.Log&lt;/strong&gt;). Stay tuned for more tutorials.&lt;/p&gt;</content><category term="activity"></category><category term="Android"></category><category term="lifecycle"></category></entry><entry><title>Android Activity lifecycle (Code) &amp; Debugging using LogCat (Android Part – 8)</title><link href="//thegeekyway.com/activity-lifecycle-and-debugging/" rel="alternate"></link><published>2014-07-17T12:37:00+05:30</published><updated>2014-07-17T12:37:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-07-17:/activity-lifecycle-and-debugging/</id><summary type="html">&lt;p&gt;Hello Geeks, hope you have read the &lt;a href="http://www.thegeekyway.com/android-activity-lifecycle/"&gt;previous article&lt;/a&gt; and are clear with the theoretical concepts of an &lt;strong&gt;Android Activity&lt;/strong&gt; and its &lt;strong&gt;Lifecycle.&lt;/strong&gt; Now we will create a code for the same to see what all methods are called in which cases. This code is similar to what you might …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello Geeks, hope you have read the &lt;a href="http://www.thegeekyway.com/android-activity-lifecycle/"&gt;previous article&lt;/a&gt; and are clear with the theoretical concepts of an &lt;strong&gt;Android Activity&lt;/strong&gt; and its &lt;strong&gt;Lifecycle.&lt;/strong&gt; Now we will create a code for the same to see what all methods are called in which cases. This code is similar to what you might have created to study lifecycle of an &lt;strong&gt;Applet in Java (&lt;/strong&gt;for those who are from java background). Create a new Android Application in Eclipse IDE and paste &lt;a class="external" href="http://pastebin.com/pN7bx4ii"&gt;this&lt;/a&gt; code.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Android Lifecycle and Debugging" src="//thegeekyway.com/uploads/images/2014/03/command_line_android_debugging.jpg" title="Android Lifecycle and Debugging"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As you can see in the code, that we have extended the &lt;strong&gt;Activity&lt;/strong&gt; class and overwritten all the methods which we had discussed in previous tutorial. In each method, we first call the super class version of the method (using &lt;strong&gt;super&lt;/strong&gt; keyword) and then we write our own statement. Here we use a special class from android.util package. This is the &lt;strong&gt;Log&lt;/strong&gt; class which is used for debugging in android. We use Log.d method in this program which has the following signature.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;static void d ( String tag, String message )&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First parameter takes the tag (you will shortly get to know what it is) and second takes the message to be printed. Anything printed using &lt;strong&gt;Log.d&lt;/strong&gt; method is shown on the LogCat. LogCat is generally visible at the bottom as shown below:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/logcat.jpg"&gt;&lt;img alt="logcat" src="//thegeekyway.com/uploads/images/2014/03/logcat.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The above screenshot shows the LogCat under the text area where we code. We can use the position marked as “Extend” in above screenshot to extend the logcat upwards so that it more messages are visible without scrolling.&lt;/p&gt;
&lt;p&gt;Moreover, we also have a &lt;strong&gt;Debug perspective&lt;/strong&gt; in which tabs like Console, Logcat, Variables and program breakpoints as shown here :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/debug_perspective.jpg"&gt;&lt;img alt="debug_perspective" src="//thegeekyway.com/uploads/images/2014/03/debug_perspective-1024x545.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The default perspective is &lt;strong&gt;Java&lt;/strong&gt; (extreme left). In the above screenshot, the &lt;strong&gt;Tag&lt;/strong&gt; is nothing but the string visible inside “Tag” column (Lifecycle here) and &lt;strong&gt;Message&lt;/strong&gt; is the string visible inside “Text” column (inside onCreate(), inside onStart() etc).&lt;/p&gt;
&lt;p&gt;For those who are from pure java background, we can also use System.out.println() for debugging, and it will be visible in &lt;strong&gt;Console&lt;/strong&gt; tab, but it is not recommended by Android Developers. Moreover, it may or may not work for some versions.&lt;/p&gt;
&lt;p&gt;When we execute a typical android application in android virtual device, we get many messages from the system (or the virtual device). So sometimes it may become hard to locate our own messages in the LogCat. To overcome this problem, we can create custom LogCat filters so that our custom LogCat reads only specific tags or messages.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/11.jpg"&gt;&lt;img alt="1" src="//thegeekyway.com/uploads/images/2014/03/11.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the above screenshot, we need to focus only on the tags marked above, but the LogCat shows all the tags which are coming from AVD. So we can create custom LogCat filter by clicking on this icon present on left side of LogCat filter.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/add_filter.jpg"&gt;&lt;img alt="add_filter" src="//thegeekyway.com/uploads/images/2014/03/add_filter.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Then this dialog box appears&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/create_filter.jpg"&gt;&lt;img alt="create_filter" src="//thegeekyway.com/uploads/images/2014/03/create_filter.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I have all tags with name “LifeCycle”, so I have named the tag “LifeCycle”. The message doesn’t matter so I keep it blank. Click OK to create the filter.Now we are clear with basics of debugging and will execute our application with our virtual device and notice the output in LogCat when the Lifecycle methods are called.Execute the application and select your custom filter.&lt;/p&gt;
&lt;p&gt;As per the &lt;a href="http://www.thegeekyway.com/android-activity-lifecycle/"&gt;previous tutorial&lt;/a&gt;, when the application starts, the methods shown below are called:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/111.jpg"&gt;&lt;img alt="11" src="//thegeekyway.com/uploads/images/2014/03/111.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When we come back to home screen (using Home button on emulator), the GUI is updated and our activity is no more visible so these methods are called:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/2.jpg"&gt;&lt;img alt="2" src="//thegeekyway.com/uploads/images/2014/03/2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The application still remains in memory, so onDestroy() is not called yet !  Now we come back to our application using Menu and these methods are called in quick succession :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/3.jpg"&gt;&lt;img alt="3" src="//thegeekyway.com/uploads/images/2014/03/3.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now we use &lt;strong&gt;BACK&lt;/strong&gt; button to exit the application and these methods are called :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/4.jpg"&gt;&lt;img alt="4" src="//thegeekyway.com/uploads/images/2014/03/4.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So this completes the 7 basic methods in Android Lifecycle. Comment if you have any doubt !&lt;/p&gt;</content><category term="Android"></category><category term="debugging"></category><category term="life cycle"></category></entry><entry><title>Resetting Windows Password</title><link href="//thegeekyway.com/resetting-windows-password/" rel="alternate"></link><published>2014-07-17T12:22:00+05:30</published><updated>2014-07-17T12:22:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-07-17:/resetting-windows-password/</id><summary type="html">&lt;p&gt;In past, some of you have used clever utilities like Kon Boot Utility to reset your window password, or asked your engineer to format C:/ drive if there was no way out. This article will introduce various ways to reset password in Windows xp,vista, 7,8 &amp;amp; 8.1. Please …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In past, some of you have used clever utilities like Kon Boot Utility to reset your window password, or asked your engineer to format C:/ drive if there was no way out. This article will introduce various ways to reset password in Windows xp,vista, 7,8 &amp;amp; 8.1. Please note that this knowledge is shared for educational purpose only. Resetting passwords in windows is resetting the SAM (Security Account Manager)&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="Windows Password Recovery" src="//thegeekyway.com/uploads/images/2014/04/rsz_1wvn_copy.png" title="Windows Password Recovery"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;&lt;strong&gt;Bootable disks (&lt;a class="external" href="http://www.hirensbootcd.org/download/"&gt;Hiren’s Boot CD&lt;/a&gt; / &lt;a class="external" href="http://download.cnet.com/Windows-Password-Unlocker-Enterprise/3000-18501_4-75285788.html"&gt;Windows Unlocker Enterprise&lt;/a&gt; / &lt;a class="external" href="http://pcsupport.about.com/gi/o.htm?zi=1/XJ&amp;amp;zTi=1&amp;amp;sdn=pcsupport&amp;amp;cdn=compute&amp;amp;tm=6&amp;amp;f=00&amp;amp;su=p284.13.342.ip_&amp;amp;tt=65&amp;amp;bt=9&amp;amp;bts=9&amp;amp;zu=http%3A//www.piotrbania.com/all/kon-boot/index2.html%23free"&gt;Kon Boot&lt;/a&gt; etc.)&lt;/strong&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These  disks are Windows XP based operating systems, even lighter than that in size. The size is kept to its lowest and more utilities like Registry Scanners, Password Reset / Bypass Utilities, File Explorer etc. Using GRUB loaders, we have option to install these OS on a USB Diskette (pen drive). We can create Bootable CD / pendrive to boot this temporary OS directly from USB to RAM and reset password or fix a broken system. Such CD’s are more popularly known as &lt;strong&gt;LIVE CD’s,&lt;/strong&gt; but &lt;strong&gt;It is important to note&lt;/strong&gt; that such Disks can be used to  repair only &lt;strong&gt;Windows xp,Vista and 7. &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The reason behind this is, that in most of the laptops in which windows 8 comes pre-installed, the BIOS is configured in &lt;strong&gt;UEFI mode&lt;/strong&gt; (Unified Extensible Firmware Interface). The UEFI mode does not allow to boot legacy OS like Windows xp, DOS etc. If you enable the LegacyBoot option, it will boot your legacy OS (like xp, DOS etc) but will not allow you to access the Hark Disk. A typical BIOS screen of a windows 8 system is shown here :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/20121207140026232.jpg"&gt;&lt;img alt="20121207140026232" src="//thegeekyway.com/uploads/images/2014/04/20121207140026232.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This screenshot explain the aim of having &lt;strong&gt;Legacy mode&lt;/strong&gt; in newer BIOS systems. So here we have two Boot orders (or Boot device priorities), one for UEFI or newer systems, &amp;amp; one for older or Legacy systems. So to reset Windows 8/8.1 password, our conventional methods do not work. We’ll study resetting Windows 8 / 8.1 password in the last section of this article, methods for older Windows systems are described here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a) &lt;a class="external" href="http://www.hirensbootcd.org/download/"&gt;Hiren’s Boot CD Series&lt;/a&gt;:&lt;/strong&gt; It is a set of  powerful utilities. The oldest edition was around 186 MB, including a rich set of utilities (shown below). The executables are compressed using &lt;strong&gt;UHA compression standard &lt;/strong&gt;and extracted on the go when user executes a particular program. The newer version includes many On-Boot utilities and a richer set of windows utilities so the size is now 700 MB. Screenshot of Utilities available in Hiren’s 15.2 (Size : 594 MB) is shown below :&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/04/hirens.jpg"&gt;&lt;img alt="hirens" src="//thegeekyway.com/uploads/images/2014/04/hirens.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)  &lt;a class="external" href="http://download.cnet.com/Windows-Password-Unlocker-Enterprise/3000-18501_4-75285788.html"&gt;Windows Unlocker Enterprise&lt;/a&gt; :&lt;/strong&gt; This is another Windows xp based light OS but its current version is only 43 MB in size because it includes only windows xp image + password unlocker software. It locates the partition containing windows installed, and at the same time gives option to choose another partition (in case it has located wrong partition or in case of multi-boot system). As it is also a windows xp based utility, it doesn’t work for windows 8/8.1  A screenshot of this utility is shown below :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/136093-windows-password-unlocker-enterprise.jpg"&gt;&lt;img alt="136093-windows-password-unlocker-enterprise" src="//thegeekyway.com/uploads/images/2014/04/136093-windows-password-unlocker-enterprise.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;c)&lt;a class="external" href="http://pcsupport.about.com/gi/o.htm?zi=1/XJ&amp;amp;zTi=1&amp;amp;sdn=pcsupport&amp;amp;cdn=compute&amp;amp;tm=6&amp;amp;f=00&amp;amp;su=p284.13.342.ip_&amp;amp;tt=65&amp;amp;bt=9&amp;amp;bts=9&amp;amp;zu=http%3A//www.piotrbania.com/all/kon-boot/index2.html%23free"&gt;Kon Boot&lt;/a&gt;&lt;/strong&gt; : It is a DOS based utility used to Reset / Bypass / Remove Windows password. It is even lighter than the other two due to the fact that it contains image of DOS based OS. As it is also a legacy OS based utility, it doesn’t work for windows 8/8.1. Screen shot of KonBoot Reset tool is shown below :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/booting-konboot-11.png"&gt;&lt;img alt="booting-konboot-11" src="//thegeekyway.com/uploads/images/2014/04/booting-konboot-11.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;Net user command Method&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Net user is one of the oldest commands used to reset Windows password without using any external utility. Its idea is simple, we can reset password of any user if we are one of the Admins of system. The general syntax of this command is :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;net user \&amp;lt;user-name&gt; * (Press Enter)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Open CMD (command prompt) &lt;strong&gt;with administrative rights&lt;/strong&gt; to type this command.&lt;/p&gt;
&lt;p&gt;For eg : &lt;strong&gt;net user gagan * (Enter)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To view list of users on the system, use \&amp;lt;&lt;strong&gt;net user&gt; &lt;/strong&gt;command.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;Resetting Windows 8/8.1 passwords&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When we want to reset password of a Windows 8.1 based system (where windows 8/8.1 was pre-installed), the conventional methods described above do not work due to UEFI firmware settings. We need Windows 8/8.1 based Live CD to reset such passwords (or Linux based Live CDs). The most popular and easy to use Windows 8.1 based Live CD is &lt;strong&gt;&lt;a class="external" href="https://onedrive.live.com/?cid=c3a5af1919cddbc6&amp;amp;id=C3A5AF1919CDDBC6%216863&amp;amp;ithint=folder,.ISO&amp;amp;authkey=%21AP0ZfWlWP9BUHQc"&gt;Gandalf Windows 8 PE&lt;/a&gt;. &lt;/strong&gt;It allows to boot using &lt;strong&gt;Legacy mode &lt;/strong&gt;and still accesses Hard Disk because its not a legacy OS. We can easily boot using this disk and reset it using any utility from Hiren’s collection  (like Windows Gate) or any other available utility. Please note that here we are referring to Windows 8/8.1 &lt;strong&gt;local account password&lt;/strong&gt; and not &lt;strong&gt;Microsoft account password.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We can also Reset Windows 8/8.1 password using our vendor’s &lt;strong&gt;Recovery module. &lt;/strong&gt;For Eg. in &lt;strong&gt;HP &lt;/strong&gt;based laptops, F11 is the recovery key. To enter Recovery mode, we can press F11 continuously as soon as system starts. After that, windows starts in recovery mode. Similarly in some Dell based laptops, to enter recovery mode, restart  with &lt;strong&gt;Shift key&lt;/strong&gt; pressed. The following screens appear one after another, after following your vendor’s method of entering into recovery mode.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/keyboard-layout.jpg"&gt;&lt;img alt="keyboard-layout" src="//thegeekyway.com/uploads/images/2014/04/keyboard-layout.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;My keyboard layout is US (top left), choose yours accordingly.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/jTw1r.png"&gt;&lt;img alt="jTw1r" src="//thegeekyway.com/uploads/images/2014/04/jTw1r.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Choose Troubleshooting option&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/ZOfn7.png"&gt;&lt;img alt="ZOfn7" src="//thegeekyway.com/uploads/images/2014/04/ZOfn7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Choose Advanced option&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/uVNVJ.png"&gt;&lt;img alt="uVNVJ" src="//thegeekyway.com/uploads/images/2014/04/uVNVJ.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Choose Command Prompt option.&lt;/p&gt;
&lt;p&gt;After that we’ll use a trick called utilman trick. We know that when logon screen opens and prompts for password, we have Utility Manager setting on the left which can be used to open Narrator and other things as shown&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/04/login-screen-windows-8-Custom.jpg"&gt;&lt;img alt="login-screen-windows-8 (Custom)" src="//thegeekyway.com/uploads/images/2014/04/login-screen-windows-8-Custom.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The trick is simple, we will enter command prompt mode of recovery mode and rename &lt;strong&gt;command prompt&lt;/strong&gt; to &lt;strong&gt;utility manager&lt;/strong&gt; so that when we click on this button (left bottom corner of above screenshot), it opens cmd and we can use our regular &lt;strong&gt;net user &lt;/strong&gt;command to reset the password. When we open command prompt mode, we have a command prompt pointing to&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;X:/Windows/System32&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First of all, we’ll change the prompt to C:/ drive (or drive containing installed windows) because X is our recovery drive. then we’ll use commands to enter into system32 directory of c: drive using &lt;strong&gt;cd&lt;/strong&gt;  (change directory) command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cd Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cd System32&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now our prompt is on desired directory. We’ll rename Utility Manager to some other name and command prompt to utility manager using these commands :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rename utilman.exe utilman2.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rename cmd.exe utilman.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now restart your computer, at the logon screen, click on bottom left icon and command prompt will open. Now use the &lt;strong&gt;net user &lt;/strong&gt;trick (described above).&lt;/p&gt;
&lt;p&gt;Post your queries in comments section (if any)&lt;/p&gt;</content><category term="password"></category><category term="recovery"></category><category term="reset"></category><category term="windows"></category></entry><entry><title>Learning About 1 Dimensional Arrays (1 D Arrays)</title><link href="//thegeekyway.com/learning-1-dimensional-arrays/" rel="alternate"></link><published>2014-07-12T02:55:00+05:30</published><updated>2014-07-12T02:55:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-07-12:/learning-1-dimensional-arrays/</id><summary type="html">&lt;p&gt;You may have heard of arrays or "tuples" before, if you've learnt any programming language. If not, then don't worry, you'll learn everything about them in this tutorial and how are they used in C to handle &lt;strong&gt;large amounts of data of same data type&lt;/strong&gt; effectively and easily. So, let's …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You may have heard of arrays or "tuples" before, if you've learnt any programming language. If not, then don't worry, you'll learn everything about them in this tutorial and how are they used in C to handle &lt;strong&gt;large amounts of data of same data type&lt;/strong&gt; effectively and easily. So, let's know about them. In this tutorial we'll learn about 1 Dimensional Arrays and in later tutorials we'll look at 2 Dimensional Arrays and Multidimensional arrays.&lt;/p&gt;
&lt;h2 id="what-is-an-array" style="text-align: center;"&gt;&lt;strong&gt;What is an array?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;An array can be defined as a way to store list of large no. of items of same data type in contiguous memory location&lt;/em&gt;. Whenever we need to store some information about the same data type, we use arrays. For instance, consider a case when you need to store roll numbers of all students in the class. One way to do this is, I can define separately variables for all roll numbers like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollno1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollno2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollno3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollno4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollnon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Here&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;last&lt;/span&gt; &lt;span class="n"&gt;roll&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Surely, this would be an inefficient approach, and thus, a better way to do this is would be through arrays like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;rollno&lt;/span&gt;[&lt;span class="nv"&gt;n&lt;/span&gt;]&lt;span class="c1"&gt;; //Here n is the total number of students for which roll numbers are to be stored.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I know, you haven't been introduced to "How to declare arrays", which we would see in just a moment, but I just wanted to show how systematically you can use array to store and manage data efficiently. Below is an image describing how array is stored in the memory location. Note here, that each item can be accessed via index number (explained in detail later), and remember, this index value as shown would always start from 0. Many errors, newbie programmers fall trap to, is because they confuse the first index of the array to be 1, which is not the case, as the first index is always 0.&lt;/p&gt;
&lt;p&gt;The contiguous memory means, the data cells of memory would be one after the other, so if we need to store 60 items, we need a location in memory with at least 60 cells one after the other. Consider contiguous as being "continuous".&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/07/arrays11.png" title="Array representation in memory."&gt;&lt;img alt="Array representation in memory." src="//thegeekyway.com/uploads/images/2014/07/arrays11.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="how-to-declare-a-1-dimensional-array" style="text-align: center;"&gt;How to declare a 1 Dimensional array?&lt;/h2&gt;
&lt;p&gt;Now let us see how you can declare an array :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here data type is the actually the type of data of the elements you would store in your array, array name is simply the name you give to your array (similar to the name of a variable, in order to access it later), which would follow the general rules of naming a variable which we have discussed previously. After the name of the array, we would have a set of square brackets in which we would mention the size of the array.&lt;/p&gt;
&lt;p&gt;Now, let's again quickly take a look at our rollno array :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rollno&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Technically, before declaring this statement, you should first define the value of variable n, or else you'll face an error.&lt;/p&gt;
&lt;p&gt;Here, n is just use to make you first comfortable with basic declaration of array. More sophisticatedly, you can simply use a definite value of n to define an array as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rollno&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Enough&lt;/span&gt; &lt;span class="k"&gt;space&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt; &lt;span class="n"&gt;roll&lt;/span&gt; &lt;span class="k"&gt;no&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we need to fill in the values for our array. Traditionally, following an approach as we've seen in the beginning would not only take a lot of time to define each variable corresponding to each student, but makes it a hectic process.&lt;/p&gt;
&lt;p&gt;But first, we need to explore more about what exactly the index no or indices of the array is?&lt;/p&gt;
&lt;p&gt;Well, typically, the computer memory is divided into small data cells (as shown above in the picture), occupying contiguous memory location. To access any element stored in an array we need something to reference it, like a variable name. In case we followed, the very first traditional approach defining 60 variables, they would have different names, which would be difficult to remember, but we could refer a single element. Using array, makes this more efficient by providing us with index no. or indices, as each subsequent element can be addressed / referred to by it's index value, which we would see in just a moment.&lt;/p&gt;
&lt;h2 id="what-would-be-the-size-of-the-array" style="text-align: center;"&gt;What would be the size of the array?&lt;/h2&gt;
&lt;p&gt;An array would consist of many elements and hence the size of the array would be the sum of size of all elements in the array. For instance, in our example of rollno array for 60 student, which is of type int, the memory locations are occupied such that each cell has capacity to store an integer. We know, that in C , integer takes two bytes, so total memory occupied by rollno array would be 2 * 60  = 120.&lt;/p&gt;
&lt;p&gt;Thus, you can easily calculate the amount of memory an array occupies by using the following formula:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Size of array = Size of data type * Total no. of elements in the array&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now let's see how to fill up the array:&lt;/p&gt;
&lt;h2 id="putting-values-in-array" style="text-align: center;"&gt;Putting values in array&lt;/h2&gt;
&lt;p&gt;Filling up an array is very simple using for loop, as we would see here :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;rollno&lt;/span&gt;[&lt;span class="mi"&gt;60&lt;/span&gt;]&lt;span class="c1"&gt;; //Declaring array with 60 elements storage space&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;i &amp;lt; 60; i++)&lt;/span&gt;
{
  &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;rollno&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;  //Here value of i increments, and allow to store next input to the very next space till value of i = 60 where for loop terminates.&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The working is very straight forward as explained in the comments.&lt;/p&gt;
&lt;p&gt;One important thing to note here is that, as previously mentioned the index of array would start from 0 not 1. You should always remember this thing while handling data with arrays and your loops should also work in the same fashion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; : Newbies mistake, assuming array to be start from 1. Remember, it would be started from 0.&lt;/p&gt;
&lt;h2 id="printing-out-elements-of-array" style="text-align: center;"&gt;Printing out elements of Array&lt;/h2&gt;
&lt;p&gt;Now, after filling up the array, let's see how we can access one particular element. For instance, let's say I need to look for roll no. of 11th student, so I know it would be stored as 10th element in memory (not 11th) as indices start from 0. So, let's print the value of 11th student.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;rollno&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In case you want to print all values stored in the array, we simply apply a loop to loop through the all the values in the array from indices 0 to indices 59 (a total of 60 values in this case).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
{
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;rollno&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, now that you've learned about 1 dimensional arrays, it's time to look for two dimensional arrays.&lt;/p&gt;
&lt;p&gt;Have any doubts till now? Please feel free to mention in comments section below, or give me a shout on twitter \@ErSanyamKhurana.&lt;/p&gt;</content><category term="1 dimensional"></category><category term="array"></category></entry><entry><title>Getting Started With Git</title><link href="//thegeekyway.com/getting-started-git/" rel="alternate"></link><published>2014-04-02T22:24:00+05:30</published><updated>2014-04-02T22:24:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2014-04-02:/getting-started-git/</id><summary type="html">&lt;p&gt;Git is the most popular version control system now a days. The reason behind popularity is its simple yet tremendous functionality. Unlike other VCSs (Version Control Systems), Git has some unique ways to control and share your data. Because of its huge functionality it also tends to become a lot …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Git is the most popular version control system now a days. The reason behind popularity is its simple yet tremendous functionality. Unlike other VCSs (Version Control Systems), Git has some unique ways to control and share your data. Because of its huge functionality it also tends to become a lot complex for advanced users. As they say a thousand miles journey starts with a single step, we are going to understand the very basics of git in this article!&lt;/p&gt;
&lt;p&gt;So, before starting anything we need to understand what Git is and what it does. Git is a version control system, which records changes in your code/files over a period of time. You can recall older version and manage changes. The working of Git is a little different than other VCSs. Most of the VCSs store the information about the data as the changes that have been made in different files. If you have 3 files in a project and you change any one of them, the VCSs will keep record of the change. That’s where Git differs, it keeps record of the changes along with the new changed file. Moreover, other VCSs generally operate online, storing all the data at the remote servers, while Git stores all the data on the local system as well as the remote server, which makes it easy for the user to make changes even when she is offline and commit the changes when she gets the network connection. In other benefits of Git, you don’t need to go to remote server to check for your project history, it’s all there on your local machine.&lt;/p&gt;
&lt;p&gt;Before getting started, I would like to discuss one more feature of Git and that is repositories. There are two kind of repositories in Git, namely, local repositories and remote repositories. And believe me, they are the exact same thing! So, what exactly is a repository? It’s the place where you store all of your working data, your project files etc. Local repository is the one that is set up on your system and the remote is the one that is hosted on a server, probably on another continent! And here is the beauty of a distributed version control system, you can work with both of them just as they are the same thing! You can make changes to your local repository, add/delete files etc. and push them to remote repository.&lt;/p&gt;
&lt;p&gt;Enough of concepts, let’s get started! The very basic thing to do with Git is to create a local repository, of-course, first you have to install it on your system! Type this in your RHEL based system to install git (make appropriate changes for Debian based systems):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;yum&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the next step is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git init

Initialized empty Git repository in /home/peeyush/git_test/.git/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;And that’s it, there is your local repository. You can add files, make changes to them, commit the changes etc. (How? We will see shortly!). Now, generally after this people keep going on about working with local repository, but as I am getting you started, I am going to take a little different but practical approach. We are going to start with a remote repository! Now, where do you get a remote repository? Well, GitHub, of-course! Go to &lt;/p&gt;&lt;a href="http://www.github.com"&gt;www.github.com&lt;/a&gt; &lt;p style="line-height: 1.5em;"&gt; and create a account there if you don’t already have one. Now, create a new repository by clicking on the link on the top left corner:&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-04-01 15:59:59.png" src="https://lh6.googleusercontent.com/dMsAdtBhU35X5J11FkmC4QSU8DwHfHx1bF-IHDLutUsI3qdpSmzP3JM9Kn274A0QQnnAyNhU2iLU99j-ADvlPd4CDGDrr87X7Fv6Eozdr4080iTPi8WCti132SMCIA"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, enter a name for the repository and click on the “create repository” button. And your remote repository is ready! First of all you need to copy you remote repository to your local repository. Copy the http address and you can copy the repository using git protocol, like this:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-04-01 16:21:57.png" src="https://lh3.googleusercontent.com/k2Lo1r1Z3uaUXlu9rf-h9cAphKIemCUq9dBQSO3KOSDJaDzX6j25um04Iyi5L0HmLk7PFo-L7Wci6p0Nu77vuslWDB9PtPX0ZPeyux2UcV9xe6XP2VqHn3V2G1cUZw"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/Pensu/test.git
Cloning into &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;...
warning: You appear to have cloned an empty repository.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, there appears to be a warning, but we already know that as we haven’t added anything to the repository! Now you will see a directory by the name of remote repository in your current directory. That is your local repository. To verify try this on your system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; test/

$ git remote -v

origin https://github.com/Pensu/test.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
origin https://github.com/Pensu/test.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here fetch and push are the repositories where your local repository gets the data from and where it sends the changes respectively. As I just cloned a remote repository, I can fetch and push from this repository. Now, we are going to add a file and pushing it to the remote repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nv"&gt;touch&lt;/span&gt; &lt;span class="nv"&gt;newfile&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;
$ &lt;span class="nv"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Getting Started With Git&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;newfile&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt; 
$ &lt;span class="nv"&gt;git&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt;
# &lt;span class="nv"&gt;On&lt;/span&gt; &lt;span class="nv"&gt;branch&lt;/span&gt; &lt;span class="nv"&gt;master&lt;/span&gt;
#
# &lt;span class="nv"&gt;Initial&lt;/span&gt; &lt;span class="nv"&gt;commit&lt;/span&gt;
#
# &lt;span class="nv"&gt;Untracked&lt;/span&gt; &lt;span class="nv"&gt;files&lt;/span&gt;:
#   &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;use&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;git add &amp;lt;file&amp;gt;...&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;what&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;committed&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
#
# &lt;span class="nv"&gt;newfile&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;
&lt;span class="nv"&gt;nothing&lt;/span&gt; &lt;span class="nv"&gt;added&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;commit&lt;/span&gt; &lt;span class="nv"&gt;but&lt;/span&gt; &lt;span class="nv"&gt;untracked&lt;/span&gt; &lt;span class="nv"&gt;files&lt;/span&gt; &lt;span class="nv"&gt;present&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;use&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;git add&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;track&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;I created a new file, echoed some content and I checked the status of my repository. Git can track what new files have been added and what files have changed using checksum. So, it shows me that my “newfile.txt” is untracked. Before committing any changes to the repositories, we need to add the files/changes to Git.&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add newfile.txt
$ git status
&lt;span class="c1"&gt;# On branch master&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Initial commit&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Changes to be committed:&lt;/span&gt;
&lt;span class="c1"&gt;#   (use &amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# new file:   newfile.txt&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;As you can see the file is ready to be committed now. Let’s do it:&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git commit -m &lt;span class="s2"&gt;&amp;quot;Added new file&amp;quot;&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;master &lt;span class="o"&gt;(&lt;/span&gt;root-commit&lt;span class="o"&gt;)&lt;/span&gt; 0c53cdc&lt;span class="o"&gt;]&lt;/span&gt; Added new file
&lt;span class="m"&gt;1&lt;/span&gt; file changed, &lt;span class="m"&gt;1&lt;/span&gt; insertion&lt;span class="o"&gt;(&lt;/span&gt;+&lt;span class="o"&gt;)&lt;/span&gt;
create mode &lt;span class="m"&gt;100644&lt;/span&gt; newfile.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;Here -m denotes the message which you will need to remember the changes you made in this commit. I am adding newfile.txt here, so the message says that a new file has been added. You local repository is fully updated now, with all the changes. If you want to check, what all changes you have made to the local repository before pushing it to remote repository, just run “git log”.&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git log
commit 0c53cdc27eda90c67219ba15ff8457f337c4aa14
Author: Peeyush Gupta &amp;lt;peeyushgupta91@gmail.com&amp;gt;
Date:   Tue Apr &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:37:59 &lt;span class="m"&gt;2014&lt;/span&gt; +0530

   Added new file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;It will show you the commit checksum, author name/email, date and time of the commit and the message you provided at the time of commit. Well, it seems alright, so now we are gonna push the changes to remote repository.&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;span class="n"&gt;Username&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com&amp;#39;: Pensu&lt;/span&gt;
&lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//Pensu@github.com&amp;#39;: &lt;/span&gt;
&lt;span class="n"&gt;Counting&lt;/span&gt; &lt;span class="nl"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Writing&lt;/span&gt; &lt;span class="nl"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;249&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delta&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reused&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delta&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/Pensu/test.git&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;branch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;      &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;So, what’s origin and master? Here master is the branch where I am working on my local repository and origin is the branch where master is going to be merged at the remote repository. Wait, what is a branch? Branch is basically the context that you are working in. You can have many branches in the same project and merge them in the remote repository branches. For our purpose we only need one branch and that is the master one. You can verify it using:&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch
* master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;Now, as it’s all done and dusted, time to check the remote repository if the changes were successfully committed. Open up your browser and go to your repository, you should see a newfile.txt there.  &lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-04-01 16:55:31.png" src="https://lh4.googleusercontent.com/yktfgORxxyXn4QDOho-38Ow0kd99LnUalRvlzOk-8AF_m-PsufDyGXPB0VRgLTIWDJlmD5_GVZgMMEP8pnrD-mWQViYKM5usgeWhNrVO2TydcF6PEctybVm0shyNeA"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-04-01 16:55:40.png" src="https://lh6.googleusercontent.com/qwKYV6kTOGF7TFLW5q-Pim8eQ_55ZRNkV7eTHFAg4cJ1Qnw-IvbBLq3Frult5WPCdbZoOoYqRLztdAw0uQsgATHUhO2IBC-FOom5p-qx59L8_yBVt1DQtRFx520W4g"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-04-01 16:55:40.png" src="https://lh6.googleusercontent.com/qwKYV6kTOGF7TFLW5q-Pim8eQ_55ZRNkV7eTHFAg4cJ1Qnw-IvbBLq3Frult5WPCdbZoOoYqRLztdAw0uQsgATHUhO2IBC-FOom5p-qx59L8_yBVt1DQtRFx520W4g"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Git is a very huge topic, but this article should get you started to clone remote repositories and push the changes. Happy sharing!&lt;/p&gt;</content><category term="Git"></category><category term="starting with Git"></category><category term="Understanding Git"></category><category term="VCS"></category><category term="version control systems"></category></entry><entry><title>How to copy camera photos to Android phone directly without any app</title><link href="//thegeekyway.com/android-4-4-2-how-to-copy-camera-photos-to-android-phone-directly/" rel="alternate"></link><published>2014-03-30T20:27:00+05:30</published><updated>2014-03-30T20:27:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2014-03-30:/android-4-4-2-how-to-copy-camera-photos-to-android-phone-directly/</id><summary type="html">&lt;p&gt;There are some of application to control/Copy your photos directly from DSLR from your phone like DSLR dashboard app but for Point and Shoot (P&amp;amp;S) .But now with latest android release you can copy any camera photos to Android Phone directly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why this is great trick?&lt;/strong&gt; No matter …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are some of application to control/Copy your photos directly from DSLR from your phone like DSLR dashboard app but for Point and Shoot (P&amp;amp;S) .But now with latest android release you can copy any camera photos to Android Phone directly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why this is great trick?&lt;/strong&gt; No matter which phone  you have ,even  a point and shoot gives you better great result.  This is very handy while travelling and even general, you can copy your photos to phone just in time and share with your friends.  No need to buy expensive Eye-Fi card.&lt;/p&gt;
&lt;p&gt;I have tested to import photo using &lt;strong&gt;&lt;em&gt;default Gallery/Photo importer app&lt;/em&gt;&lt;/strong&gt; from android with &lt;strong&gt;&lt;em&gt;Canon Powershot Sx40Hs&lt;/em&gt;&lt;/strong&gt; and &lt;em&gt;&lt;strong&gt;Nikon D7000.&lt;/strong&gt; &lt;/em&gt;No additional app required, just additional &lt;a href="http://www.amazon.in/APS-Micro-Mobile-Phones-Tablets/dp/B00GTADSXQ/" title="http://www.amazon.in/APS-Micro-Mobile-Phones-Tablets/dp/B00GTADSXQ/"&gt;On-The-Go connector.&lt;/a&gt;  You can buy from nearby local store for \$1-\$2. I brought in India for INR. 70/-.&lt;/p&gt;
&lt;p&gt;Here the full tutorial to copy any camera photos directly to your phone without any app.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;What do you need:&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Camera:&lt;/strong&gt; Should work with any camera.&lt;br&gt;
&lt;strong&gt;2. Android Phone:&lt;/strong&gt; *Running on &lt;strong&gt;KitKat 4.4.2 /CM11&lt;strong&gt;&lt;em&gt;, (should work with &lt;/em&gt;updated Google Gallery/Google+ app*, needs to verify on other version of Android)&lt;br&gt;
&lt;/strong&gt;3. Camera PC connector :&lt;/strong&gt; &lt;p style="line-height: 1.5em;"&gt; &lt;p style="line-height: 1.5em;"&gt; &lt;p style="line-height: 1.5em;"&gt; &lt;p style="line-height: 1.5em;"&gt; Usually mini usb cable of you camera which you use to connect with computer&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/images1.jpg" title="Mini USB Data Cable"&gt;&lt;img alt="Mini USB Data Cable" src="//thegeekyway.com/uploads/images/2014/03/images1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;4. On-The-Go connector :&lt;/strong&gt; &lt;p style="line-height: 1.5em;"&gt; &lt;p style="line-height: 1.5em;"&gt; &lt;p style="line-height: 1.5em;"&gt;Basically a  micro USB with female connector&lt;/p&gt;&lt;/p&gt;&lt;/p&gt; &lt;p style="line-height: 1.5em; text-align: center;"&gt; &lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/41+N9v0CUjL1.jpg" title="On-The-Go micro USB"&gt;&lt;img alt="On-The-Go micro USB" src="//thegeekyway.com/uploads/images/2014/03/41+N9v0CUjL1-300x300.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now,&lt;strong&gt; how to copy camera photos to Android phone directly&lt;/strong&gt; &lt;strong&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;i. Connect your camera to phone using both cable like following setup&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/SX40ConnectionWithAndroid1.jpg"&gt;&lt;img alt="SX40ConnectionWithAndroid" src="//thegeekyway.com/uploads/images/2014/03/SX40ConnectionWithAndroid1-300x211.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ii. You will get pop-up to choose from USB device. Select Camera importer or Gallery (If any other popup appears cancel that).&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/ChooseApptoImport1.jpg" title="Choose App to Import"&gt;&lt;img alt="Choose App to Import" src="//thegeekyway.com/uploads/images/2014/03/ChooseApptoImport1-180x300.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;iii. You will get following window on selecting Camera Importer&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/CameraThumNails1.jpg" title="Camera Thumbnails"&gt;&lt;img alt="Camera ThumNails" src="//thegeekyway.com/uploads/images/2014/03/CameraThumNails1-180x300.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;iv. Now select directory or images to import.&lt;/p&gt;
&lt;p&gt;v. Images will be saved in your SDCard --&gt; {CameraNameDirectory}&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
&lt;p&gt;PS: I have tested this with Galaxy SII running CM11 (Android 4.4.2) and Canon SX40Hs/Nikon D7000. I have to test with other version of android and with other Point &amp;amp; Shoot camera. If you happen to test please update here.&lt;/p&gt;</content><category term="Android"></category></entry><entry><title>[Ultimate Guide] What are loops in programming and how are they important?</title><link href="//thegeekyway.com/loops-programming-important/" rel="alternate"></link><published>2014-03-27T21:40:00+05:30</published><updated>2014-03-27T21:40:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-03-27:/loops-programming-important/</id><summary type="html">&lt;p&gt;Welcome everyone to yet another tutorial on C Programming language. In this tutorial we'll be learning about a great concept of loops. Most of the programming languages would use exactly the same syntax for loops, so understand this carefully. Loops provide with great utility and power and saves from a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome everyone to yet another tutorial on C Programming language. In this tutorial we'll be learning about a great concept of loops. Most of the programming languages would use exactly the same syntax for loops, so understand this carefully. Loops provide with great utility and power and saves from a lot of overhead which may be there without them.&lt;/p&gt;
&lt;p&gt;In this tutorial, we'll be discussing about various topics which revolves around concept of loops and understand them. They are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Basic-Definition-and-Types-of-Loops" title="ASP.Net Basics : Populate checkboxlist from database using C#"&gt;Basic Definition and Types of Loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Basic-section-of-Loop" title="[Ultimate Guide] What are loops in programming and how are they important?"&gt;Basic Section of Loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#For-While-and-do-whlie-loop"&gt;For, While and Do-While Loops&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#for-loop"&gt;For Loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#while-loop"&gt;While Loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#do-while-loop"&gt;Do While loop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Difference-between-entry-controlled-and-exit-controlled-loop" title="ASP.Net Basics : Populate checkboxlist from database using C#"&gt;Difference between Entry Controlled and exit controlled loop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/Ultimage-Guide-on-Loops-in-programming1.png" title="Understand about Loops in Programming, for, while, do while"&gt;&lt;img alt="Understand about Loops in Programming, for, while, do while " src="//thegeekyway.com/uploads/images/2014/03/Ultimage-Guide-on-Loops-in-programming1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;p #Basic-Definition-and-Types-of-Loops&gt;&lt;/p&gt;&lt;/h2&gt;
&lt;h2&gt;Basic Definition and Types of Loops&lt;/h2&gt;
&lt;p&gt;The basic concept behind &lt;strong&gt;&lt;em&gt;"Loop"&lt;/em&gt;&lt;/strong&gt; is to &lt;u&gt;&lt;em&gt;execute certain set of statements as far as a given condition is true, or in many cases a counter variable gets out of a specific range defined, or we use may use some Logical operators to control the flow in our loop.&lt;/em&gt; &lt;/u&gt;There are basically three types of loops in the C language. They are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;for loop&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;while loop&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;do while loop&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, let's look at the syntax of each of these and how they can be used, in detail. To understand all these in a better way, let's consider a common and simple example to print numbers from 1 to let's say 500.&lt;/p&gt;
&lt;p&gt;The most basic approach to carry out this task is to keep printing each line having different numbers from 1 to 500 which would look something like this :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;1 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;2 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;3 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;4 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;5 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;6 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;7 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  . 
  .
  .
  .
  .
  .
  .
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;499 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;500 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, let's try to improve upon this a little bit.&lt;br&gt;
We can take a counter variable and after each step just update it's value, then it would be something like this :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  .
  .
  .
  .
  .
  .
  .
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;    /* Carry on this &lt;/span&gt;
  &lt;span class="nv"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="c1"&gt;;                      500 times   */&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this simple approach although we used a counter variable to avoid writing different numbers and updating the value of counter is left to the computer. But, it lead to an increase in the Lines Of Code (LOC) which is considered as an important parameter to compare any software.&lt;/p&gt;
&lt;p&gt;So, it would be good, if we could use this counter variable approach but reduce the LOC. We can do it by using loops, now let's carry this out using different loops.&lt;/p&gt;
&lt;p&gt;&lt;p #Basic-section-of-Loop&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Basic sections of the loops&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;All loops have three basic sections which are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initialization&lt;/strong&gt; : we need to initialize our counter variable in this statement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test Condition&lt;/strong&gt; : is the condition which needs to be true for the loop to keep running, as soon as it becomes false, the loop would stop executing, and the control would be directed to the next statement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Updation&lt;/strong&gt; : In this statement the value of counter variable is updated (either incremented or decremented )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p #For-While-and-do-whlie-loop&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;For, While and Do While Loops :&lt;/h2&gt;
&lt;p&gt;Now, we'll look here how we can print numbers from 1 to 500 using for, while and do-while loops by first understanding their syntax and then understanding the flow of control of these loops.&lt;/p&gt;
&lt;p&gt;&lt;p #for-loop&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;&lt;u&gt;&lt;strong&gt;Understanding and using for loop&lt;/strong&gt;&lt;/u&gt;&lt;/h3&gt;
&lt;p&gt;* &lt;strong&gt;Syntax&lt;/strong&gt; :*&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;initialization&lt;/span&gt; &lt;span class="c1"&gt;; test condition ; updation )&lt;/span&gt;
{
  .
  .
  .
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's carry out the given task to print numbers from 1 to 500.&lt;/p&gt;
&lt;p&gt;The for loop for this would be something like this, here we have a counter variable named i which would be incremented from 1 to 500.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;; i&amp;lt;=500 ; i++ )&lt;/span&gt;
{
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can also define the counter variable inside the loop, and then it would have&lt;a href="http://www.thegeekyway.com/what-is-scope-and-lifetime-of-a-variable-in-c-language/" title="What is scope and lifetime of a variable in C language"&gt;scope of the loop as explained in tutorial on Scope and lifetime of variables.&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;; i&amp;lt;=500 ; i++ )&lt;/span&gt;
{
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Understanding flow of  for loop&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First time, when the control enters the loop, value of counter i is 1. The test condition would be checked, it would be true in this case, as 1 is less than or equal to 500. Hence control enters the loop and the statement to print value of i would be executed. We don't have more statements here, so control would go to updation, and update the value of i, it would be incremented.&lt;/p&gt;
&lt;p&gt;Next the test condition would be again checked, here value of i is 2. So, test condition would be true in this case. Hence, control enters the loop and again print statement would be executed. This time value 2 would be printed. Once again, the control goes to updation statement, and value of i is incremented. It becomes 3 now, and again test condition would be checked.&lt;/p&gt;
&lt;p&gt;This would continue till the value reaches 499, after updation, the value of i would be 500. The control again enters the loop, and value of 500 would be printed. Next updation takes place and value of i becomes 501, the test condition here becomes false, because, 501 is not less than or equal to 500. So, the loop would terminate, and the control would go to the next immediate next statement following the loop.&lt;/p&gt;
&lt;h3&gt;&lt;p #while-loop&gt;&lt;/p&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;u&gt;&lt;strong&gt;Understanding and Using while loop&lt;/strong&gt;&lt;/u&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Syntax:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;initialization&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;test_condition&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
{
 &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;all&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt;
  &lt;span class="nv"&gt;updation&lt;/span&gt; 
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In while loop, initialization is done even before control enters the loop, as shown. Updation is done as the last statement of the loop and test condition is given as shown.&lt;/p&gt;
&lt;p&gt;Now let us print the numbers from 1 to 500 using while loop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
{
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The initialization is need is just once, whatever loop it is, so in while loop, we have done initialization, before entering the while loop.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Understanding flow of  while loop&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First of all the test condition is checked, which would be true, since 1 is less than or equal to 500, so control enters loop, and the print statement would be executed and updation statement also takes place. There is no other statement to be executed as end of the loop is reached. Before the control leaves the loop, the test condition would be checked, which would be again true as 2 is less than equal to 500.&lt;/p&gt;
&lt;p&gt;This would continue until value is 500. Next, the value would be printed, and value is incremented by 1. So, condition is tested again, now, 501 would not be less than or equal to 500. Hence, the test condition becomes false and the control exits the loop executing the immediate next statement following the loop.&lt;/p&gt;
&lt;h3&gt;&lt;p #do-while-loop&gt;&lt;/p&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;u&gt;&lt;strong&gt;Understanding and Using do - while loop&lt;/strong&gt;&lt;/u&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;initialization&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt; {
  &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;executing&lt;/span&gt; &lt;span class="nv"&gt;statements&lt;/span&gt;
  &lt;span class="nv"&gt;updation&lt;/span&gt;
} &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;condition&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;u&gt;Notice that in do while loop, we have a semi-colon at the end of while statement.&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Let's now print the numbers from 1 to 500 using do while loop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt; {
     &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
} &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Understanding flow of do while loop&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The do while loop has an interesting feature, which is it would &lt;strong&gt;execute at least once&lt;/strong&gt; whether the condition is true or not.&lt;/p&gt;
&lt;p&gt;In the above case, the control enters the loop, and execute the statements. So, the value 1 would be printed. Next updation is done in the value of i, and the condition is checked against value 2, so 2 is less than or equal to 500 and hence the control once again start executing from the first statement. Next the test condition is checked against the value of 3 and so on.&lt;/p&gt;
&lt;p&gt;This would continue till value of 500, next after printing value of 500, the updation takes place, and then the condition would become false. The control would get out of the loop and be ready to execute the immediate next statement.&lt;/p&gt;
&lt;p&gt;&lt;p #Difference-between-entry-controlled-and-exit-controlled-loop&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;u&gt;Difference between Entry Controlled and Exit Controlled loop&lt;/u&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Entry Controlled&lt;/strong&gt; loops are those in which the test condition is checked first, and then if the condition is true, the control enters the loop and all the statements inside the loops are executed. For example, &lt;u&gt;for&lt;/u&gt; and &lt;u&gt;while loop&lt;/u&gt; are entry controlled loop.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exit Controlled&lt;/strong&gt; loops are those in which the statements inside loops are executed first, and then the condition is tested. Even if the condition is false, the loop is executed at least once. For example, &lt;u&gt;do-while&lt;/u&gt; loop is an exit controlled loop and it is executed at least once, whether the condition is true of false. If the condition is true, the loop is executed one more time, and if it's false, termination occurs, as we have discussed in detail above.&lt;/p&gt;
&lt;p&gt;In the next tutorial, we'll learn about structures in the C language.&lt;/p&gt;</content><category term="C"></category><category term="do while"></category><category term="entry controlled"></category><category term="exit controlled"></category><category term="for"></category><category term="loops"></category><category term="programming"></category><category term="while"></category></entry><entry><title>Running A Python Script Using Chef</title><link href="//thegeekyway.com/running-python-script-using-chef/" rel="alternate"></link><published>2014-03-18T15:39:00+05:30</published><updated>2014-03-18T15:39:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2014-03-18:/running-python-script-using-chef/</id><summary type="html">&lt;p&gt;Chef is an amazing configuration management tool, widely used in a lot of industries. If you are not familiar with how to run chef/chef-solo, please go through &lt;a href="http://www.thegeekyway.com/learning-basics-chef-solo-example/"&gt;this&lt;/a&gt; article first. One of the best feature of Chef is it’s collection of resources. Resources allows Chef to handle configuration …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Chef is an amazing configuration management tool, widely used in a lot of industries. If you are not familiar with how to run chef/chef-solo, please go through &lt;a href="http://www.thegeekyway.com/learning-basics-chef-solo-example/"&gt;this&lt;/a&gt; article first. One of the best feature of Chef is it’s collection of resources. Resources allows Chef to handle configuration of the designated server. Resource have their predefined task like to run a command, to copy a file, to use a template etc. In this article we are going to talk about script resource. This is going to run any script, it could be bash, python or perl. There are separate resources for these scripts.&lt;/p&gt;
&lt;p&gt;You put the resources in your recipe. Here is a simple bash script example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;bash&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;install_something&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
 &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;root&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;cwd&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/home&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="nv"&gt;EOH&lt;/span&gt;
 &lt;span class="nv"&gt;echo&lt;/span&gt; “&lt;span class="nv"&gt;Hello&lt;/span&gt; &lt;span class="nv"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;”

 &lt;span class="nv"&gt;ls&lt;/span&gt;
 &lt;span class="nv"&gt;EOH&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, the bash resource will run the script in the code section and will print “Hello World” to the terminal and the content of /home directory.&lt;/p&gt;
&lt;p&gt;So, when you are going to run a python script, the first choice to come to mind is “python” script resource. But there is a limitation to script resources. They only run in-line scripts. Meaning you will have to write the whole script in the code section and it will be executed one line at a time. But you can’t run an external script. Here comes the “execute” resource to rescue!&lt;/p&gt;
&lt;p&gt;To run an external script, the structure of the execute resource is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;test.py&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;execute&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;execute_file&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
 &lt;span class="nv"&gt;cwd&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/home/peeyush&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
 &lt;span class="nv"&gt;command&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;python #{static}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here the filename contains the name of the script. Then in the execute block, we have cwd which represents the current working directory. This is the directory where the script is present. Then the “command” tells the shell to execute the script. Just put the above lines in your recipe, edit test.py according to the ouput you want and let chef run the script for you! Here is the sample test.py:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-03-18 15:19:33.png" src="https://lh5.googleusercontent.com/JihU-gdBpBp0eeYxeqIlDMBW-HjlSbYLCchDA56_DQqEbdSDuj0CtoD5x_q-Rk9tSrB4VvpOcpuEzf9_ZmQqM4ioc9VO5SqTXviSc7S2a5c6tzKFBAph0PhF28Z4hg"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, I am printing “Hello, chef!” and redirecting some out to a text file. Redirection is needed because Chef will just execute the script and won’t show you the output, until it’s an error. Here is what the recipe look like:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-03-18 15:15:20.png" src="https://lh6.googleusercontent.com/Xg83QDTJ7qeMTFUMgqrwtnGydgegGGFx_7NzGhADUch8b2Qzw7YncSMelwzEd7h7xMr7I4GKPpzGszQXdfvGMxxF4vVNOTSfojoeefNOVSBuZhmJ46_TXWWwntDO9A"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Remember to change the current working directory (cwd) according to your setup.Everything else is same as previous article and you can test it out using chef-solo.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-03-18 15:18:51.png" src="https://lh4.googleusercontent.com/FXzkjCooBE7AGaHapRX_7IwhwvrADtaJBSbYGiepY-0BXiPI0PVLKNhSDPhO6ZKhB9-6KZTaDE3ln0zmMDFB-WNJD9ELZ20XZeiuO1ryQuqB30yHK0BqmUAU0xvZTA"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;</content><category term="automation"></category><category term="Chef"></category><category term="chef-solo"></category><category term="Python"></category><category term="python with chef"></category></entry><entry><title>Storage Classes in C language</title><link href="//thegeekyway.com/storage-classes-c-language-2/" rel="alternate"></link><published>2014-03-17T17:55:00+05:30</published><updated>2014-03-17T17:55:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-03-17:/storage-classes-c-language-2/</id><summary type="html">&lt;p&gt;In the previous tutorials, we have discussed about the conditional statements. In this tutorial we'll be learning about something known as Storage Classes in the C language. Every variable you define in the C language is generally associated with a Storage class which basically defines the Scope and lifetime of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the previous tutorials, we have discussed about the conditional statements. In this tutorial we'll be learning about something known as Storage Classes in the C language. Every variable you define in the C language is generally associated with a Storage class which basically defines the Scope and lifetime of that variable.&lt;/p&gt;
&lt;p&gt;Before we get into detail about this, let's first understand&lt;a href="http://www.TheGeekyWay.com/what-is-scope-and-lifetime-of-a-variable-in-c-language"&gt;what is exactly meant by scope and lifetime of variable.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, let us take a look at different types of storage classes available in C programming language:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;auto&lt;/li&gt;
&lt;li&gt;register&lt;/li&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;extern&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/storage_class1.png" title="Storage classes in C language and keywords used to define them. auto, extern, static and register."&gt;&lt;img alt="Storage classes in C language and keywords used to define them. auto, extern, static and register." src="//thegeekyway.com/uploads/images/2014/03/storage_class1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, we'll understand each one of this in detail :&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;Auto (Automatic) :&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;The default storage class of any variable is Automatic . It is created as soon as the declaration statement is encountered and is destroyed as soon as the program control leaves the block which contains your variable.&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: comic sans ms,sans-serif;"&gt;&lt;em&gt;&lt;u&gt;Keyword used - auto&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;For example, here we define two variables, first, count, which is a local variable and second,  counter inside a block (local variable using auto class).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;auto&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;u&gt;&lt;strong&gt;External Storage Class (Extern) :&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;They are the Global Variables, i.e. declared outside the function block but are accessible inside the function block as well. They are accessible by all the function blocks present in the program and hence they have lifetime for entire program.&lt;/p&gt;
&lt;p&gt;It is actually used to give a reference to the global variable which can be accessed in all your files. If we need to have a global variable, then in one file, we use that particular variable or function, and in the other file we define it by keyword extern so that when it is used in our other file, the reference is used from the first file.&lt;/p&gt;
&lt;p&gt;&lt;p style="text-decoration: underline;"&gt; &lt;p style="font-family: comic sans ms,sans-serif;"&gt;Keyword used - extern&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;For example, let's have two files, first which would have our main function (main.c) and second one having a function named extern_storage (extern.c)&lt;/p&gt;
&lt;p&gt;First file : main.c&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;Global&lt;/span&gt; &lt;span class="k"&gt;Variable&lt;/span&gt;

&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;extern_storage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;extern_storage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="c1"&gt;--;&lt;/span&gt;
  &lt;span class="n"&gt;extern_storage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Second file : extern.c&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;extern_storage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;extern&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;extern_storage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Current value of extern counter is %d n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When the above two files are executed, the function extern_storage picks up the current value from our main.c file. So, the following output will be produced.&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: courier new,courier;"&gt;Current value of extern counter is 1&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: courier new,courier;"&gt;Current value of extern counter is 2&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: courier new,courier;"&gt;Current value of extern counter is 1&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;Static Storage Class (static) :&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;It has visibility of a local variable but lifetime of external variable. Thus, once defined, it would not be destroyed after the function finishes execution but would retain it's value in memory and can be used further in future function calls.&lt;/p&gt;
&lt;p&gt;&lt;p style="text-decoration: underline;"&gt;&lt;em&gt; &lt;p style="font-family: comic sans ms,sans-serif;"&gt;Keyword used - static&lt;/p&gt;&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;(Self-Explanatory through post on &lt;a href="http://www.thegeekyway.com/what-is-scope-and-lifetime-of-a-variable-in-c-language/" title="What is scope and lifetime of a variable in C language"&gt;Scope and lifetime of variables&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;Register Storage Class (register) :&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;It is very similar in behavior to an automatic storage class variable. The difference between the two comes from the fact that auto storage class uses main memory for storage but register storage class variables might use CPU Registers.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; register keyword doesn't guarantee that CPU Registers would be used every time, it depends on hardware and other restrictions that may be there.&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;The use of these registers facilitates faster accessing and helps in running programs faster. Thus variables that need quick access  like variables for storing counter values should be declared by using register keyword.&lt;/p&gt;
&lt;p&gt;For example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;register&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;We hope the concept of storage classes is now clear ! Have any doubt or something to say? Let us know through comments section below.&lt;/em&gt;&lt;/p&gt;</content><category term="auto"></category><category term="C language"></category><category term="extern"></category><category term="register"></category><category term="static"></category><category term="storage classes"></category></entry><entry><title>Learn To Manage Packages Using APT-GET &amp; APT-CACHE Commands In Ubuntu/Debian. Part-3</title><link href="//thegeekyway.com/manage-package-apt-get-apt-cache-ubuntu-commands/" rel="alternate"></link><published>2014-03-11T08:10:00+05:30</published><updated>2014-03-11T08:10:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2014-03-11:/manage-package-apt-get-apt-cache-ubuntu-commands/</id><summary type="html">&lt;p&gt;This is last &amp;amp; final chapter of this tutorial. Before proceeding further, I would like to link first two parts here just incase you haven't checked it out.&lt;/p&gt;
&lt;p&gt;(&lt;a href="http://www.thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu/" title="Learn To Manage Packages Using APT-GET &amp;amp; APT-CACHE Commands In Debian/Ubuntu. Part-I"&gt;PART-1&lt;/a&gt;  &amp;amp;  &lt;a href="http://www.thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu-part-2/" title="Learn To Manage Packages Using APT-GET &amp;amp; APT-CACHE Commands In Debian/Ubuntu. Part-2"&gt;PART-2&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Continuing from Part-2,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;19) Checking The Stats Of Cache Using APT-CACHE :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This command will display all the statistics of the cache …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is last &amp;amp; final chapter of this tutorial. Before proceeding further, I would like to link first two parts here just incase you haven't checked it out.&lt;/p&gt;
&lt;p&gt;(&lt;a href="http://www.thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu/" title="Learn To Manage Packages Using APT-GET &amp;amp; APT-CACHE Commands In Debian/Ubuntu. Part-I"&gt;PART-1&lt;/a&gt;  &amp;amp;  &lt;a href="http://www.thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu-part-2/" title="Learn To Manage Packages Using APT-GET &amp;amp; APT-CACHE Commands In Debian/Ubuntu. Part-2"&gt;PART-2&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Continuing from Part-2,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;19) Checking The Stats Of Cache Using APT-CACHE :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This command will display all the statistics of the cache, from total number of packages to total number of dependencies, total number of globbed strings, slack space ,etc.&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;20) Listing All The Packages Available In The Repository Using APT-CACHE :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using this command you can list all the packages that are available in the repository.&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;pkgnames&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;21) Checking The Package Details Using APT-CACHE :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This command will give you details of any package available in the repository, alongwith maintainer's name, description details, size, dependency, architecture,etc.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;sudo&lt;/span&gt; &lt;span class="nv"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;cache&lt;/span&gt; &lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;sudo&lt;/span&gt; &lt;span class="nv"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;cache&lt;/span&gt; &lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="nv"&gt;minitube&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;22) Searching The Package Using APT-CACHE :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can find the package name alongwith description using the following command syntax. Very handy tool when you're looking for similar name of packages.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="k"&gt;search&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;word_close_to_package_you&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;re_searching_for&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="k"&gt;search&lt;/span&gt; &lt;span class="n"&gt;mini&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You'll see that first results of search will give me all packages name with prefix 'mini'. This can be helpful when you don't know correct package name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;23) Getting Dependency Details Using APT-CACHE :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can easily obtain dependency details using following command. It also gives details whether those packages are already installed in your system or not.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;showpkg&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;showpkg&lt;/span&gt; &lt;span class="n"&gt;vlc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are chances that I might've missed few commands. You can suggest some of commands in the comments below, so I can add it.&lt;/p&gt;
&lt;p&gt;However, you can get more details of apt-get &amp;amp; apt-cache by typing "man apt-get" &amp;amp; "man apt-cache" respectively from Debian/Ubuntu system.&lt;/p&gt;</content><category term="apt-get"></category><category term="linux"></category><category term="Ubuntu"></category></entry><entry><title>Convert GIMP Into Photoshop Like UI</title><link href="//thegeekyway.com/convert-gimp-photoshop-like-ui/" rel="alternate"></link><published>2014-03-10T08:11:00+05:30</published><updated>2014-03-10T08:11:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2014-03-10:/convert-gimp-photoshop-like-ui/</id><summary type="html">&lt;p&gt;An artist in Deviantart with profile name &lt;a href="http://doctormo.deviantart.com/" title="Doctormo Profile"&gt;'doctormo'&lt;/a&gt; published an awesome tweak which let's you to change the user-interface of the GIMP something similar to world popular image editing software Photoshop. This tweak currently works on GIMP 2.8 .It does works for GIMP 2.9 but some features might …&lt;/p&gt;</summary><content type="html">&lt;p&gt;An artist in Deviantart with profile name &lt;a href="http://doctormo.deviantart.com/" title="Doctormo Profile"&gt;'doctormo'&lt;/a&gt; published an awesome tweak which let's you to change the user-interface of the GIMP something similar to world popular image editing software Photoshop. This tweak currently works on GIMP 2.8 .It does works for GIMP 2.9 but some features might be missing&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/TGW-imported-3.0-RGB-color-1-layer-351x320-%e2%80%93-GIMP_0051.png"&gt;&lt;img alt="[TGW] (imported)-3.0 (RGB color, 1 layer) 351x320 – GIMP_005" src="//thegeekyway.com/uploads/images/2014/03/TGW-imported-3.0-RGB-color-1-layer-351x320-%e2%80%93-GIMP_0051.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Steps To Installation :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1) Download Tweaks.zip from &lt;a href="http://doctormo.deviantart.com/art/Gimp-2-8-Photoshop-Tweaks-432736644" title="Download Tweaks"&gt;Official Page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2) Make backup of your current GIMP configuration (Just incase if anything goes wrong, you can back it up). To do so, go to /home and press 'Ctrl+h' it will show hidden files. Now copy entire folder named &lt;strong&gt;'.gimp-2.8'&lt;/strong&gt; to anywhere but /home&lt;/p&gt;
&lt;p&gt;3) Extracted the downloaded .zip file&lt;/p&gt;
&lt;p&gt;4) It will contain file named .gimp-2.8&lt;/p&gt;
&lt;p&gt;5) Simply copy that file &amp;amp; paste it in /Home &amp;amp; overwrite it on current .gimp-2.8&lt;/p&gt;
&lt;p&gt;And you're done!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE :&lt;/strong&gt; You can perform this tweak in &lt;strong&gt;Windows&lt;/strong&gt; &amp;amp; &lt;strong&gt;OS X&lt;/strong&gt; operating systems too. I don't use Windows nor OS X so I don't know how to do it. But I guess from these steps you can figure it out on your own.&lt;/p&gt;</content><category term="GIMP"></category><category term="Photoshop"></category><category term="Tweaks"></category></entry><entry><title>Learn To Manage Packages Using APT-GET &amp; APT-CACHE Commands In Debian/Ubuntu. Part-2</title><link href="//thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu-part-2/" rel="alternate"></link><published>2014-03-10T05:36:00+05:30</published><updated>2014-03-10T05:36:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2014-03-10:/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu-part-2/</id><summary type="html">&lt;p&gt;This is second part of the tutorial.You would like to read the first part before you proceed further. Here is the &lt;a href="http://www.thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu/" title="First Part"&gt;&lt;strong&gt;LINK&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Continuing from the first part,&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/slide_apt-11.png" title="APT Ubuntu"&gt;&lt;img alt="APT Ubuntu" src="//thegeekyway.com/uploads/images/2014/03/slide_apt-11.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;11) Removing Packages From The System Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This command will help you to remove the installed packages from the system. However …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is second part of the tutorial.You would like to read the first part before you proceed further. Here is the &lt;a href="http://www.thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu/" title="First Part"&gt;&lt;strong&gt;LINK&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Continuing from the first part,&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/slide_apt-11.png" title="APT Ubuntu"&gt;&lt;img alt="APT Ubuntu" src="//thegeekyway.com/uploads/images/2014/03/slide_apt-11.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;11) Removing Packages From The System Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This command will help you to remove the installed packages from the system. However, you should note that it won't remove configuration files at all. Which means, if you remove the application using this command &amp;amp; then re-install it later, then the application settings you had previously will still be there.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="n"&gt;vlc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;12) Removing Packages With Configuration Settings Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using this command, you can completely remove packages alongwith configuration settings. So, if you will reinstall that application later, you'll have to reconfigure again. This command can be extremely useful when you're messing with configuration settings &amp;amp; something goes extremely wrong &amp;amp; you cannot back it up to original state. Removing with this command &amp;amp; re-installing the package can help you in such case.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;purge&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;purge&lt;/span&gt; &lt;span class="n"&gt;synaptic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;13) Cleaning Up The Disk Space Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It will cleanup the disk space by cleaning debian packages (.deb) that are downloaded from local repository.&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;14) Auto Cleaning The Cache Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The packages which users download is usually stored in /var/cache/apt/archives in form of cache, consuming hefty amount of space. You can simply remove all the .deb cache packages from this directory using this command.&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;autoclean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;15) Observe The Changelog Of The Package :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using the following command you can view the changelog of the desired application. It is usually useful to see what new features are included in the latest build or upgrade.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;changelog&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;changelog&lt;/span&gt; &lt;span class="n"&gt;wine&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;16) Fixing Missing Dependencies &amp;amp; Re-installing The Package Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are times when you're having poor internet connectivity, some packages are unable to retrieve but easily can. However, an application depends on some of it's dependencies, due to such problems it doesn't meet the require dependency &amp;amp; package won't get install. So, the following command usually helpful when the dependencies are missing &amp;amp; you want to install the missing dependencies to fix the problem.&lt;/p&gt;
&lt;p&gt;Command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;17) Auto-Removing The Installed Packages Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sometimes, when you remove any package, it's dependencies are not removed with it. They remain in system as 'Orphan'. To remove the Orphan packages auto-remove command is used.&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;autoremove&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;18) Checking The Dependencies Of The Application Using APT-GET :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can check the broken dependencies required for the package you wanna install using the following command. Quite handy, it is!&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Rest of the commands that are related to APT-CACHE command will be covered in next part. i.e Part-3&lt;/em&gt;&lt;/p&gt;</content><category term="apt-get"></category><category term="linux"></category><category term="Ubuntu"></category></entry><entry><title>What is scope and lifetime of a variable in C language</title><link href="//thegeekyway.com/what-is-scope-and-lifetime-of-a-variable-in-c-language/" rel="alternate"></link><published>2014-03-10T00:28:00+05:30</published><updated>2014-03-10T00:28:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-03-10:/what-is-scope-and-lifetime-of-a-variable-in-c-language/</id><summary type="html">&lt;p&gt;Welcome to your next tutorial, here we would be discussing about the scope and lifetime of a variable, and how exactly they are similar yet different from each other. We'll try to understand all this by using an example to understand the concepts in a better way.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/scope-and-lifetime-variable-c1.png" title="Scope and life time of a variable in C programming language"&gt;&lt;img alt="Scope and life time of a variable in C programming language" src="//thegeekyway.com/uploads/images/2014/03/scope-and-lifetime-variable-c1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So, let's understand …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome to your next tutorial, here we would be discussing about the scope and lifetime of a variable, and how exactly they are similar yet different from each other. We'll try to understand all this by using an example to understand the concepts in a better way.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/scope-and-lifetime-variable-c1.png" title="Scope and life time of a variable in C programming language"&gt;&lt;img alt="Scope and life time of a variable in C programming language" src="//thegeekyway.com/uploads/images/2014/03/scope-and-lifetime-variable-c1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So, let's understand each of these :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Life Time&lt;/strong&gt; - Life time of any variable is the time for which the particular variable outlives in memory during running of the program.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scope&lt;/strong&gt; - The scope of any variable is actually a subset of life time. A variable may be in the memory but may not be accessible though. So, the area of our program where we can actually access our entity (variable in this case) is the scope of that variable.&lt;/p&gt;
&lt;p&gt;The scope of any variable can be broadly categorized into three categories :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Global scope&lt;/strong&gt; : When variable is defined outside all functions. It is then available to all the functions of the program and all the blocks program contains.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Local scope&lt;/strong&gt; : When variable is defined inside a function or a block, then it is locally accessible within the block and hence it is a local variable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Function scope&lt;/strong&gt; : When variable is passed as formal arguments, it is said to have function scope.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's understand this with help of an example :&lt;/p&gt;
&lt;p&gt;Consider this snippet of program :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;global&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="c1"&gt;;          // global variable declared&lt;/span&gt;
&lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
   &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;local&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="c1"&gt;;         // local variable declared&lt;/span&gt;
   &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Global variable is %d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;global&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Local variable is %d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;local&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;func1&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

}
&lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;func1&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
   &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Global inside func1 is %d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;global&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;  // Would print the global variable successfully.&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we have a variable named global which is defined outside all the functions (generally at the top of the program) , it is defined even outside main, and hence would be available to every function defined in the program , here we consider only one function func1() .&lt;/p&gt;
&lt;p&gt;The output of the above program would be :&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: arial,helvetica,sans-serif;"&gt;Global variable is 100&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: arial,helvetica,sans-serif;"&gt;Local variable is 10&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: arial,helvetica,sans-serif;"&gt;Global inside func1 is 100&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Let us consider the same program again but this time, let us change the definition of our function func1() as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;func1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="err"&gt;{&lt;/span&gt; 
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Global inside func1 is %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;global&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Would&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Local inside func1 is %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* It would produce an error, because local&lt;/span&gt;
&lt;span class="cm"&gt;                                                  is a local variable and can be accessed &lt;/span&gt;
&lt;span class="cm"&gt;                                                  only inside main function. */&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Clearly, as mentioned in the comment, the printing of global variable would be done, but that of local variable would produce an error, as the variable named local is actually local to the function main() and hence can be accessed only through that function not from any other function, but for global variable, it can be accessed by all functions/ blocks a program is using.&lt;/p&gt;
&lt;p&gt;Here our variable named global has global scope and lifetime, hence it outlives in memory till the program execution is completed and can be accessed by any function / block locally too. But in case of our local variable, it may outlives in memory till program execution is completed but it can be accessed from only within  the function or block it is defined in.&lt;/p&gt;
&lt;p&gt;The basic problem here can be, we can have variable with same name defined as a global as well as local variable, and hence, it would be ambiguos as to which variable we want to actually refer to. We can resolve this issue in C++ (Advancement of C language) by the use of a special operator known as scope resolution operator. We'll look into this, when we'll cover tutorials for C++.&lt;/p&gt;
&lt;p&gt;I hope all the concepts of scope and lifetime are now clear, but still if you have any doubt/ suggestion, please let us know through the comments section below.&lt;/p&gt;</content><category term="C language"></category><category term="life time"></category><category term="scope"></category><category term="variable"></category></entry><entry><title>Learn To Manage Packages Using APT-GET &amp; APT-CACHE Commands In Debian/Ubuntu. Part-I</title><link href="//thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu/" rel="alternate"></link><published>2014-03-09T05:43:00+05:30</published><updated>2014-03-09T05:43:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2014-03-09:/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu/</id><summary type="html">&lt;p&gt;&lt;strong&gt;APT&lt;/strong&gt; abbreviated as &lt;strong&gt;A&lt;/strong&gt;dvanced &lt;strong&gt;P&lt;/strong&gt;ackaging &lt;strong&gt;T&lt;/strong&gt;ool, is the package management tool used in Debian based distributions to install new applications from repository, removing installed applications, upgrading the system, updating the repository and bunch full of other useful tasks, all that from terminal itself.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/abhishek@abhishek-desktop-_0021.png" title="APT"&gt;&lt;img alt="APT" src="//thegeekyway.com/uploads/images/2014/03/abhishek@abhishek-desktop-_0021.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;1) Installing Application In …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;APT&lt;/strong&gt; abbreviated as &lt;strong&gt;A&lt;/strong&gt;dvanced &lt;strong&gt;P&lt;/strong&gt;ackaging &lt;strong&gt;T&lt;/strong&gt;ool, is the package management tool used in Debian based distributions to install new applications from repository, removing installed applications, upgrading the system, updating the repository and bunch full of other useful tasks, all that from terminal itself.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/03/abhishek@abhishek-desktop-_0021.png" title="APT"&gt;&lt;img alt="APT" src="//thegeekyway.com/uploads/images/2014/03/abhishek@abhishek-desktop-_0021.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;1) Installing Application In Ubuntu/Debian Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;gimp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where gimp is the package name which is to be installed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Updating The System Repository Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This command will update the Debian/Ubuntu repository with the newer latest version that's available.&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3) Upgrading The Software Packages Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is usually used to upgrade the installed packages in the system. For example, if new updated package are available in the repository, then this command will upgrade the installed package with the latest one that is available in repository.&lt;/p&gt;
&lt;p&gt;Command :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4) Upgrading Specific Desired Packages Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using this command you can upgrade stacks of desired packages you want. The command is very much similar to that of installing packages.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;--only-upgrade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;gimp&lt;/span&gt; &lt;span class="c1"&gt;--only-upgrade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; 5) Installing Packages Without Upgrading Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following command will install the desired package, but won't upgrade even if the upgrade is available.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;--no-upgrade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;wine&lt;/span&gt; &lt;span class="c1"&gt;--no-upgrade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;6) Installing Multiple Packages All At Once In One Command Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This command is used to install as many packages/application you want using one single command. Quite a productive command it is!&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;gimp&lt;/span&gt; &lt;span class="n"&gt;wine&lt;/span&gt; &lt;span class="n"&gt;vlc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; 7) Install Only Desired Version Package Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Inserting '&lt;strong&gt;=&lt;/strong&gt;' after the package name and appending desired version, you can install specific version of the package&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;version_number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;wine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;8) Download Only Source Code Of The Desired Package Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can download source code of the desired package from the repository using following syntax.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="c1"&gt;--download-only source &amp;lt;package_name&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="c1"&gt;--download-only source synapse&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;9) Downloading The .deb Package Without Installing It Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can download the .deb package of the desired application using following command. The downloaded .deb package is usually stored in /var/cache/apt/archive directory.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;package_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt; &lt;span class="n"&gt;synaptic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;10) Download The Source Code, Decompress It &amp;amp; Then Compile It Using APT-GET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can download source code of the application you want to use, then decompress it &amp;amp; compile it using one single command.&lt;/p&gt;
&lt;p&gt;Command Syntax :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="c1"&gt;--compile source &amp;lt;package_name&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="c1"&gt;--compile source gimp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Dozens of other commands will be covered in next part of the tutorial. Stay tuned.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Edit : You can read Part-2 Of The Tutorial From &lt;a href="http://www.thegeekyway.com/learn-manage-packages-using-apt-get-apt-cache-commands-debianubuntu-part-2/" title="Part-2 Of Tutorial"&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="apt-get"></category><category term="linux"></category><category term="Ubuntu"></category></entry><entry><title>Benchmarking OpenStack With Rally</title><link href="//thegeekyway.com/benchmarking-openstack-rally/" rel="alternate"></link><published>2014-02-28T11:48:00+05:30</published><updated>2014-02-28T11:48:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2014-02-28:/benchmarking-openstack-rally/</id><summary type="html">&lt;p&gt;When you are trying to make changes in a code, there is a big chance of failure. And if the system is as huge as OpenStack, it becomes really hard to figure the error out. Here comes Rally. Rally makes benchmarking of OpenStack simple and automated. Rally works in three …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When you are trying to make changes in a code, there is a big chance of failure. And if the system is as huge as OpenStack, it becomes really hard to figure the error out. Here comes Rally. Rally makes benchmarking of OpenStack simple and automated. Rally works in three steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Deployment:&lt;/strong&gt; Rally is not a deployment tool by itself, instead it works as a plugin with devstack, RDO etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Verification:&lt;/strong&gt; Here Rally uses tempest to verify the OpenStack cloud deployment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Benchmarking:&lt;/strong&gt; This step is used to calculate load and performance of the particular cloud deployment.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/openstack-logo1.jpg" title="Openstack with Rally"&gt;&lt;img alt="Openstack with Rally" src="//thegeekyway.com/uploads/images/2014/02/openstack-logo1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Rally generally works a command line tool (GUI is work in progress) and helps in detecting scaling and performance issues, figuring out how the code change affects the system and finding out suitable architecture of deployment etc.&lt;/p&gt;
&lt;p&gt;The first step is to install rally in OpenStack environment. I am going to use rally as a plugin with devstack, though it is possible to install it manually in an already deployed environment. To start, clone the following repositories from github:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;openstack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;devstack&lt;/span&gt;

&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stackforge&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rally&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, execute the following commands from your terminal in order to set devstack up with rally:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="n"&gt;rally&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;devstack&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rally&lt;/span&gt; &lt;span class="n"&gt;devstack&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="n"&gt;rally&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;devstack&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;extras&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rally&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="n"&gt;devstack&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;extras&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;devstack&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;enable_service rally&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;localrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, as usual, we run the installation script of devstack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go for a coffee or take a walk, until devstack completes its work!&lt;/p&gt;
&lt;p&gt;After the installation is done, source the openrc file present in \~/.rally/ directory to start using OpenStack.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rally&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;openrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To use rally, we first need to tell it about the OpenStack deployment which is going to be benchmarked. To do that, we have a deployment configuration file. That means, you need to provide configuration details of your OpenStack deployment in form of a json file. Go to the rally directory and create a my-deployment.json file. The content of the file should be like this:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-02-27 17:20:18.png" src="https://lh6.googleusercontent.com/kRZy9MBq6cBMDPrVgwm9nXRDrBasz2tbBqXJvTmGD0FrU1eUOTucylKtHzYVU5BHmz1OfDQRxzzoyO1s6qccUofo0ILWNx_WZX3QmGoK7AAcSfjemvwQmLs1BQ"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can find the relevant information for you system in openrc file. Next, we create a deployment named test using the following command:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;*&lt;img alt="Screenshot from 2014-02-27 17:19:54.png" src="https://lh3.googleusercontent.com/_lAcpSqYhUncDSomOX8fjW_vcMthYAAU5L_HhNuHK3V4ZpEYlhFToDctsPE9Z7HWOc6pAqBKAg_rlnVqxXa2IWLyEBm5rrG_S0rkJcZNJNsPaxzpt1EZp2zuRw"&gt;&lt;/strong&gt;****&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Run ‘rally deployment check’ to check if current deployment is ready to be benchmarked. You should get an output like this:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-02-27 17:21:26.png" src="https://lh6.googleusercontent.com/CujE4Dm-jfe4s5aSB3eCpNwxWQWqedxz6oSFuvHZoSmppfLzmz17nxQb-6W_lUsNBds9XpjEA1PHyy8M4dyUh6adwwA7w7Euz7PN_Oe-hQlH8MHIszqKrmbj-w"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Next, we come to benchmarking. There are a lot of ways to test the deployment, we will use an example that comes with rally. This is a boot and delete test. First copy the test to you current directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, edit the my-task.json file to look like:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-02-27 17:25:25.png" src="https://lh6.googleusercontent.com/Wi-J5GrWHYqoyY-buqPouTYbeuSrsqwTVDhmqCL0j7CKpJCDaasJpZhuz-TRdb7Ew5w1B-5ikyQpFBSGp_uHG_RYBGOvnrDr9JXhAVTwNfNbouHZxAwvvYxyOQ"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Edit the falvor_id and image_id according to your system. Use “glance image-list” and “nova flavor-list” commands. And now we are ready to run our first task. Type this on your machine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;rally&lt;/span&gt; &lt;span class="c1"&gt;--verbose task start --task=my-task.json&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should see the output:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-02-27 17:29:29.png" src="https://lh6.googleusercontent.com/6RAxgAkO135b4iMW1sn8ghAHojAA1aJmLamDp_CqtYHSwAbqL6Dy9WjOoN5dM1FDEISZp8YRg-Ij5az03jfYXiExERGk21Tx5eqPeS9DQI2SOL17cdDpNiR5Pw"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can also find out the detailed report about all the task.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="Screenshot from 2014-02-27 17:30:25.png" src="https://lh5.googleusercontent.com/nZ35zyKAr8V8rPF9HJ9revry8MVpdjZo7q5wwqAwImn1_ccLQt9lP-pj-MEsIG9E7OS4oWEMPXzWPpCTE_mX0IvkzXFrO2XPKGvZk5n_G6Cy8rfbpO-3jYF2yg"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There are other examples available in the doc/samples/ directory. You can learn more about test cases from these files. Happy benchmarking!&lt;/p&gt;</content><category term="benchmarking"></category><category term="Openstack"></category><category term="openstack benchmarking"></category><category term="performance measure"></category><category term="rally"></category><category term="scaling"></category></entry><entry><title>Block ads to make your web experience beautiful and speed up your Internet</title><link href="//thegeekyway.com/block-ads-speed-internet-2/" rel="alternate"></link><published>2014-02-27T21:52:00+05:30</published><updated>2014-02-27T21:52:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2014-02-27:/block-ads-speed-internet-2/</id><summary type="html">&lt;p&gt;Everyone of us annoyed by creepy ads everywhere on internet. From mailbox to keep waiting for video  in Youtube.&lt;/p&gt;
&lt;p&gt;But ads not only makes your internet looks ugly but most of them sneak cookie, steal other website data and track your internet activity.  Also these ads eats up your precious …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Everyone of us annoyed by creepy ads everywhere on internet. From mailbox to keep waiting for video  in Youtube.&lt;/p&gt;
&lt;p&gt;But ads not only makes your internet looks ugly but most of them sneak cookie, steal other website data and track your internet activity.  Also these ads eats up your precious bandwidth.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/home-splash-stop1.png" title="Block ads for smoother experience"&gt;&lt;img alt="Block ads for smoother experience" src="//thegeekyway.com/uploads/images/2014/02/home-splash-stop1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So here is one time little setup to get rid of ads and tracking.&lt;/p&gt;
&lt;p&gt;1. &lt;a href="#host"&gt;Block ads and tracking from Host file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2. &lt;a href="#adblock"&gt;Install Adblock extension to Firefox/Chrome to block all ads, even in Youtube &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;p style="font-size: large;"&gt; &lt;p #host&gt;&lt;/p&gt; Block ads and tracking from Host file &lt;/p&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Step1. Locate your host file&lt;/p&gt;
&lt;p&gt;Linux:   &lt;p style="font-family: 'courier new', courier;"&gt;\$ sudo nano /etc/hosts  &lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Windows:  &lt;p style="font-family: 'courier new', courier;"&gt; %systemroot%System32driversetc (right click on host file and open with notepad)&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Step2.  To edit host file, you need roor/administrator privilege. If  direct editing not allowed save the host file somewhere else and then replace original host including these line.  Remember while saving host file do not add any extension.&lt;/p&gt;
&lt;p&gt;(Geeky Tip:  If you open notpad/text editor with run as administrator, you can directly edit host file and save. For Linux user you already opening file using sudo.)&lt;/p&gt;
&lt;p&gt;I found these list &lt;a href="http://someonewhocares.org/hosts/"&gt;here&lt;/a&gt;, and also added few server to remove annoying Skype ads.&lt;/p&gt;
&lt;p&gt;If following embed file talking long time to load find &lt;a href="https://docs.google.com/file/d/0B5_j19lviiqyQURvM2o3Wkt0SFE/preview?pli=1"&gt;Google Drive notepad here.&lt;/a&gt; Just click inside following copy all (Ctrl+a --&gt; Ctrl+c) and paste at end of host file.&lt;br&gt;
&lt;iframe width="100%" height="580" src="https://docs.google.com/file/d/0B5_j19lviiqyQURvM2o3Wkt0SFE/preview?pli=1" max-width="640"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;To get rid of all ads from webpage use following.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;p style="font-size: large;"&gt; &lt;p #adblock&gt;&lt;/p&gt; Install Adblock extension to Firefox/Chrome to block all ads, even in Youtube &lt;/p&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Chrome extension : A&lt;a href="https://chrome.google.com/webstore/detail/adblock/gighmmpiobklfepjocnamgkkbiglidom"&gt;dblock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Firefox extension: &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/adblock-plus/developers?src=api"&gt;AdblockPlus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This setup definitely remove all ads, also from YouTube.&lt;/p&gt;
&lt;p&gt;If you find any other server to add in host file, let us know.&lt;/p&gt;</content><category term="web"></category></entry><entry><title>XHTML and CSS -2- Understanding Basic Semantics of Webpage</title><link href="//thegeekyway.com/xhtml-css-2-understanding-basic-semantics-webpage-2/" rel="alternate"></link><published>2014-02-26T20:52:00+05:30</published><updated>2014-02-26T20:52:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-02-26:/xhtml-css-2-understanding-basic-semantics-webpage-2/</id><summary type="html">&lt;p&gt;In the previous tutorial, we took a brief overview, of what we'll be going to discuss in this tutorial series and how to see the rendered XHTML coding of any webpage. You can see the &lt;a href="http://www.thegeekyway.com/video-tut-xhtml-and-css-1-overview-downloading-text-editor/" title="XHTML and CSS – 1 – Overview and Downloading Text Editor"&gt;previous tutorial&lt;/a&gt; , in this video tutorial, we'll first understand the difference between XHTML and a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the previous tutorial, we took a brief overview, of what we'll be going to discuss in this tutorial series and how to see the rendered XHTML coding of any webpage. You can see the &lt;a href="http://www.thegeekyway.com/video-tut-xhtml-and-css-1-overview-downloading-text-editor/" title="XHTML and CSS – 1 – Overview and Downloading Text Editor"&gt;previous tutorial&lt;/a&gt; , in this video tutorial, we'll first understand the difference between XHTML and a Programming Language and know why it is not a programming language but a Mark - Up language. We'll go through the Basic Semantics of any webpage, and understand about tags used in XHTML.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/VideoTut2XHTMLandCSS1.jpg" title="Free video tutorial - understanding basic semantics of the webpage"&gt;&lt;img alt="Free video tutorial - understanding basic semantics of the webpage" src="//thegeekyway.com/uploads/images/2014/02/VideoTut2XHTMLandCSS1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We'll know about the head section, body sections and the "sandwich" type structure of the webpage, and how the two sections are important and what they include in them.&lt;/p&gt;
&lt;p&gt;Here is the video tutorial : &lt;a href="http://www.youtube.com/watch?v=Jy3IqfdSVjI"&gt;&lt;strong&gt;Understanding Basic Semantics of a WebPage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="425" height="350" src="http://www.youtube.com/embed/Jy3IqfdSVjI" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;If you have any questions or doubts in this tutorial, please feel free to ask in the comments section below, and don't forget to &lt;a href="http://www.youtube.com/user/TheGeekyWayDotCom"&gt;SUBSCRIBE us on YOUTUBE&lt;/a&gt;.&lt;/p&gt;</content><category term="CSS"></category><category term="overview"></category><category term="Tutorial"></category><category term="video"></category><category term="xhtml"></category></entry><entry><title>Conditional Statements in Python</title><link href="//thegeekyway.com/conditional-statements/" rel="alternate"></link><published>2014-02-26T17:44:00+05:30</published><updated>2014-02-26T17:44:00+05:30</updated><author><name>Simerdeep Singh</name></author><id>tag:thegeekyway.com,2014-02-26:/conditional-statements/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/Conditional_Statements1.jpg" title="Conditional Statements in python"&gt;&lt;img alt="Conditional Statements in python" src="//thegeekyway.com/uploads/images/2014/02/Conditional_Statements1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this tutorial we will discuss about conditional statements in python. Conditional statements are used to perform different computation based on the &lt;strong&gt;Boolean expression&lt;/strong&gt; which turns out to be true or false . &lt;strong&gt;Boolean expression&lt;/strong&gt; is on which these conditional statement works. Various Conditional statement used are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If&lt;/li&gt;
&lt;li&gt;Else&lt;/li&gt;
&lt;li&gt;Else if …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/Conditional_Statements1.jpg" title="Conditional Statements in python"&gt;&lt;img alt="Conditional Statements in python" src="//thegeekyway.com/uploads/images/2014/02/Conditional_Statements1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this tutorial we will discuss about conditional statements in python. Conditional statements are used to perform different computation based on the &lt;strong&gt;Boolean expression&lt;/strong&gt; which turns out to be true or false . &lt;strong&gt;Boolean expression&lt;/strong&gt; is on which these conditional statement works. Various Conditional statement used are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If&lt;/li&gt;
&lt;li&gt;Else&lt;/li&gt;
&lt;li&gt;Else if&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If&lt;/strong&gt; condition&lt;/p&gt;
&lt;p&gt;The general syntax for using if statement is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Boolean&lt;/span&gt; &lt;span class="nv"&gt;expression&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; :
   &lt;span class="nv"&gt;code&lt;/span&gt;  #&lt;span class="nv"&gt;indentation&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;required&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;if&lt;/strong&gt; is a keyword used for if statements ,it is a followed by a boolean expression which is evaluated  . Now question arises is why space is given in front when we have written code statement . This is because as no brackets are used to hold the computations after the if statement as this is a case in c++,java which uses curly brackets {}. The symbol : signifies that from here if block starts .&lt;/p&gt;
&lt;p&gt;In Python indentation is given rather than using brackets . If we not give the indentation compiler will give an error in case when no line is there in the if block .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
&lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;NO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-7.png"&gt;&lt;img alt="Screenshot-7" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If statement can be used with else statements and can be used alone . If the condition evaluates to true then code inside if block is executed otherwise it is skip to the next line.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;else&lt;/strong&gt; condition&lt;/p&gt;
&lt;p&gt;The syntax of the else statement is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; :
  &lt;span class="nv"&gt;code&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here else is a keyword used and there are no brackets used as in if statement ,else is also followed by the code segment and indentation is required. Else statement are followed by if statement and cant be used alone . Compiler checks the if block first if Boolean expression doesn't come out to be true ,code inside else statement gets executed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
 &lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;YES&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; :
 &lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;NO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this example a has been assigned a value 2 , after that value of a is checked by using if statement . The statement (a==2) means a is compared to the value 2 if it comes to be true if statement will execute otherwise else statement will execute. The output for this case will be "YES".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Elif&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To avoid multiple if else statements we use else if .It is just like a else followed by a if .elif is a keyword used for else-if statemnts . This example will tell the use of elif keyword.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
 &lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;YES&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;elif&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
 &lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;YES&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
 &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;NO&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here first if condition is checked ,if it comes out to be false it goes to elseif block and if that also comes to be false ,it finally goes to else block.&lt;/p&gt;
&lt;p&gt;\% is an operator used to find modulus of a number .It find the remainder when two numbers are divided.&lt;/p&gt;
&lt;p&gt;Any doubts related to conditional statement can be asked in comment section .In next tutorial we will discuss about looping .&lt;/p&gt;</content><category term="Conditional Statements"></category><category term="Python"></category></entry><entry><title>Writing your First Javascript code</title><link href="//thegeekyway.com/writing-first-javascript-code/" rel="alternate"></link><published>2014-02-24T18:11:00+05:30</published><updated>2014-02-24T18:11:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-02-24:/writing-first-javascript-code/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/Introduction-to-javascript.png" title="Writing your first javascript code"&gt;&lt;img alt="Writing your first javascript code" src="//thegeekyway.com/uploads/images/2014/02/Introduction-to-javascript.png"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the &lt;a href="http://www.thegeekyway.com/introduction-javascript/"&gt;previous article&lt;/a&gt; we discussed about introduction to javascript, in this article we will discuss about how to write a javascript code, where we can add javascript in our web pages, how to use tools that are built in our web browser, how to validate HTML5/javascript code.&lt;/p&gt;
&lt;p&gt;&lt;p style="font-size: x-large;"&gt;&lt;u&gt;Validation …&lt;/u&gt;&lt;/p&gt;&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/Introduction-to-javascript.png" title="Writing your first javascript code"&gt;&lt;img alt="Writing your first javascript code" src="//thegeekyway.com/uploads/images/2014/02/Introduction-to-javascript.png"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the &lt;a href="http://www.thegeekyway.com/introduction-javascript/"&gt;previous article&lt;/a&gt; we discussed about introduction to javascript, in this article we will discuss about how to write a javascript code, where we can add javascript in our web pages, how to use tools that are built in our web browser, how to validate HTML5/javascript code.&lt;/p&gt;
&lt;p&gt;&lt;p style="font-size: x-large;"&gt;&lt;u&gt;Validation of HTML5 document&lt;/u&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;In order to validate HTML5 code, we write the following code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;TheGeekyWay.com&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome to TheGeekyWay.com&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are various validators online to check the validation, the reason we are doing this so as to correct them now as it might create a problem in future when we are writing the code. The famous validator is &lt;a href="http://html5.validator.nu"&gt;http://html5.validator.nu&lt;/a&gt;/ validator. Copy and paste the code there, and select the text field and click on validate. After validation you must get this green box.&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;img alt="validated" src="//thegeekyway.com/uploads/images/2014/02/validated.png"&gt;&lt;br&gt;
&lt;/div&gt;
If you are getting a red/pink box, please recheck the code.&lt;/p&gt;
&lt;p&gt;&lt;p style="font-size: x-large;"&gt;&lt;u&gt;Find your Javascript editor &lt;/u&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;A good editor is a must, some features that might help you to determine what makes a good editor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Code is more writable&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auto-typing&lt;/li&gt;
&lt;li&gt;Block balancing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Code is more readable&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Syntax Highlighting&lt;/li&gt;
&lt;li&gt;Code Folding&lt;/li&gt;
&lt;li&gt;Function navigation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Some of the good editors are&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.sublimetext.com"&gt;Sublime Text&lt;/a&gt;(Windows, Linux, Mac)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.adobe.com/in/products/dreamweaver.html"&gt;Adobe Dreamweaver&lt;/a&gt;(Mac, Windows)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aptana.com/"&gt;Aptana Studio&lt;/a&gt;(Mac, Windows, Linux)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.barebones.com/products/bbedit/"&gt;BBEdit&lt;/a&gt;(Mac)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://download.cnet.com/TextWrangler/3000-2351_4-10220012.html"&gt;Text Wrangler&lt;/a&gt;(Mac)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p style="font-size: x-large;"&gt;&lt;u&gt;Browsers&lt;/u&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;In this section we are going to discuss browsers and web consoles, various tools that are used for intersection between browsers and web pages. For now you just should pick one, any browser you pick will probably have some tools built in.&lt;br&gt;
Here are some of the options :-&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Google Chrome&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Console : Developer Tools&lt;/li&gt;
&lt;li&gt;Developer Version : Chrome Canary (if you are a serious developer then you should use chrome canary, it has great development tools).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It has a web inspector but generally speaking if you want to do any serious work you need to have a firebug addon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Safari&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Console : Web inspector&lt;/li&gt;
&lt;li&gt;Developer version : Webkit Nightly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Internet Explorer&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;F12 Developer Tools(built-in)&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-decoration: underline;"/p&gt;&lt;p style="font-size: x-large;"&gt;Writing your first javascript code&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;In order to write our first javascript code, we need to include a script tag in the head section of html coding (later in the articles Ill show why we should never use script tag in javasctipt inside html) but for now, since the code is small, so we can use this method.&lt;/p&gt;
&lt;p&gt;Analyze the following code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;TheGeekyWay&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;script&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;text/javascript&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nv"&gt;function&lt;/span&gt; &lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
            &lt;span class="nv"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;myValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;document&lt;/span&gt;.&lt;span class="nv"&gt;getElementById&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;textBox1&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;var&lt;/span&gt; &lt;span class="k"&gt;getTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;document&lt;/span&gt;.&lt;span class="nv"&gt;getElementById&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;title&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;myValue&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="k"&gt;getTitle&lt;/span&gt;.&lt;span class="nv"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Nothing entered, enter a valid character&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="k"&gt;else&lt;/span&gt; {
                &lt;span class="k"&gt;getTitle&lt;/span&gt;.&lt;span class="nv"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;myValue&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }                
        }

    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;form&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;form1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;runat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;server&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;h1&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;title&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Welcome&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;TheGeekyWay&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;text&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;textBox1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Submit&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;myButton&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;replace()&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;form&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[codepen_embed height=220 theme_id=3 slug_hash='wLDGe' user='Deep_Singh' default_tab='Result' animations='run'/]&lt;/p&gt;
&lt;p&gt;Remember that all your javascript code will be written under script tag with the type "text/javascript". Now lets analyze line by line, in the first line we are creating a variable myValue which gets the value from textbox via getElementById() method which takes the value from the text box id, similarly we take the id from title. In the if condition, if the length of the code entered is 0, then it will display "Nothing entered, enter a valid character", else it will take the value from textbox and put the value in title. (Remember that this is just the starting of the javascript series tutorial, its highly recommended not to put your javascript code under the head tag, the exact reason will be discussed in the following tutorials.&lt;/p&gt;
&lt;p&gt;Hope this tutorial finds you interesting, hit the following social buttons below and spread this article.&lt;/p&gt;</content><category term="Javascript"></category></entry><entry><title>Introduction to Javascript</title><link href="//thegeekyway.com/introduction-javascript/" rel="alternate"></link><published>2014-02-23T18:55:00+05:30</published><updated>2014-02-23T18:55:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-02-23:/introduction-javascript/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/IntroductionToJavascript.png" title="Introduction to Javascript"&gt;&lt;img alt="Introduction to Javascript" src="//thegeekyway.com/uploads/images/2014/02/IntroductionToJavascript.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Hi everyone, welcome to this brief article discussing about javascript, we'll do this by discussing various fundamentals of javascript, javascript is a programming language that as a software developer you can't ignore. Javascript was first demonstrated and announced at conference at SanFrancisco in 1995, over the time web browsers emerged …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/IntroductionToJavascript.png" title="Introduction to Javascript"&gt;&lt;img alt="Introduction to Javascript" src="//thegeekyway.com/uploads/images/2014/02/IntroductionToJavascript.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Hi everyone, welcome to this brief article discussing about javascript, we'll do this by discussing various fundamentals of javascript, javascript is a programming language that as a software developer you can't ignore. Javascript was first demonstrated and announced at conference at SanFrancisco in 1995, over the time web browsers emerged and javascript became one of the premium programming language of the future.&lt;/p&gt;
&lt;p&gt;Javascript is not only used for making web pages but also for making applications, infact in September 2011 Microsoft announced it that it would be making javascript as a first class language for making native windows applications alongside C++ and C#.&lt;/p&gt;
&lt;p&gt;Javascript is moved mainly from inside a browser only to also being used on web server for application logic, file logic, accessing database server and so on.&lt;/p&gt;
&lt;p&gt;When your web browser downloads a web page it starts to parse all the html of webpage it starts creating a series of object of the webpage, that series of objects contains like its content and attributes and so on. This is known as &lt;strong&gt;Document Object Model&lt;/strong&gt; or the &lt;strong&gt;DOM&lt;/strong&gt; Elements. So you can use javascript to access the DOM in order to change the response on the web page. For example : A user might hover its mouse over an element, or clicking an element.&lt;/p&gt;
&lt;p&gt;There is no "RIGHT WAY" to include a javascript file in html, but there are some practices that are being followed to include javascript. There is at least 3 different ways to include javascript.&lt;/p&gt;
&lt;p&gt;Various uses of Javascript are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Javascript is used for show or hide text or image, based on some interaction on webpage.&lt;/li&gt;
&lt;li&gt;Javascript is being used to apply styling on webpage.&lt;/li&gt;
&lt;li&gt;Javascript is used for client side form field validation, as a first line of defense before sending data to web server.&lt;/li&gt;
&lt;li&gt;Javascript has been used to animate element on screen (such as color/ opacity transition, moving graphics around the page, sliding elements around the page).&lt;/li&gt;
&lt;li&gt;Entire games can be loaded via javascripts.&lt;/li&gt;
&lt;li&gt;It can be used to communicate to web server without the need for http post or get.&lt;/li&gt;
&lt;li&gt;And many more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML 5 and CSS 3 has reduced the need for javascript in some of these scenarios, some form validations, some animations, these are now handled by HTML 5 and CSS 3.&lt;/p&gt;
&lt;p&gt;What you should know before we move on to our next article&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First of all since you have interest in javascript then you are an active web designer, then you should be familiar with HTML and CSS and good understanding on how to work.&lt;/li&gt;
&lt;li&gt;Recognize JavaScript in documents if you saw it, you dont have to use it before you should know how a javascript looks like.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p style="font-size: x-large;"&gt;What is Javascript ?&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;The most common question before anyone starts working in Javascript is,  "What is &lt;strong&gt;JavaSript&lt;/strong&gt;  ? " Remember that &lt;strong&gt;Javascript is NOT Java&lt;/strong&gt;. They are totally different, let not the name confuse you.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/java_logo.png" title="Javascript is Not Java"&gt;&lt;img alt="javascript" src="//thegeekyway.com/uploads/images/2014/02/java_logo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Javscript is the programming language of the web.&lt;/li&gt;
&lt;li&gt;It creates interactively, it helps you to click, drag, tap, swipe, tap, etc.&lt;/li&gt;
&lt;li&gt;It is most commonly used for front end development, i.e any kind of programming that happens in a web browser.&lt;/li&gt;
&lt;li&gt;It is also used in back end development as well like Node.JS.&lt;/li&gt;
&lt;li&gt;So javascript is used for any programming on the web.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p style="font-size: x-large;"&gt;Where should we not use javascript ?&lt;/p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We should use CSS3 transitions instead of Javascript, CSS3 transitions are more powerful, especially on mobile platform where they are more performant.&lt;/li&gt;
&lt;li&gt;CSS can handle hover and focus events (like rollover menus. tooltips, etc) we dont need javascript at all.&lt;/li&gt;
&lt;li&gt;HTML5 form controls can be used as custom widgets (like range controls, sliders, etc), this will help on mobile platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope this article might give you some information about javascript or make some interest in javascript. In our next article we will discuss about writing our first Javascript application.&lt;/p&gt;</content><category term="Introduction"></category><category term="Javascript"></category></entry><entry><title>Creating your first Java Program (J4A - 2)</title><link href="//thegeekyway.com/creating-first-java-program/" rel="alternate"></link><published>2014-02-22T23:58:00+05:30</published><updated>2014-02-22T23:58:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-22:/creating-first-java-program/</id><summary type="html">&lt;p&gt;&lt;u&gt;Beginning Java Programming&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Some institutes/tutorials start java directly using Netbeans or Eclipse IDE. But this is not the correct way. A better method is to use a basic text editor like Notepad2 or Notepad++ to begin Java. IDE’s provide shortcuts which experienced programmers use. If beginners opt for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;u&gt;Beginning Java Programming&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Some institutes/tutorials start java directly using Netbeans or Eclipse IDE. But this is not the correct way. A better method is to use a basic text editor like Notepad2 or Notepad++ to begin Java. IDE’s provide shortcuts which experienced programmers use. If beginners opt for these methods, they will leave half of the work for IDE and miss this ‘half’.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IDE&lt;/strong&gt; is an Integrated Development Environment or a software which accelerates software development and provides features like syntax completion, error detection,error correction, auto indentation, drag and drop for G.U.I. and much more. One should go for an IDE only after practising a programming language on text editors.&lt;/p&gt;
&lt;p&gt;The best text editor for starting java is TextPad (&lt;a href="http://www.textpad.com/download/index.html" title="link"&gt;download from here&lt;/a&gt;). The best part of TextPad is that it provides Program compilation and execution shortcuts just like Turbo C++. ‘Ctrl + 1’ can be used to compile a Java program and ‘Ctrl + 2’ can be used to execute a compiled program.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;First Simple Java Program&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt; &lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;class Demo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;{&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;     public static void main(String[] args)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;     {&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;           System.out.println(“My first java program”);&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;     }&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Noteworthy points about this small program&lt;/u&gt; :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In Java, even the main method lies inside a class, and Java file is saved with the name of the class containing main method so, the above code should be saved as “Demo.java”.&lt;/li&gt;
&lt;li&gt;In Java, ‘functions’ are known as ‘methods’ and variables are called as ‘attributes’&lt;/li&gt;
&lt;li&gt;Indentation is used to increase readability. Programmers &lt;strong&gt;must&lt;/strong&gt; use indentation to make their code look clean.&lt;/li&gt;
&lt;li&gt;Main method is both public and static. Public methods are accessible outside the class also (public is similar to what it was in C++). As main method is accessed by Java Virtual Machine during execution, so it &lt;strong&gt;must&lt;/strong&gt; be public. Static keyword is described later. For now, just keep in mind that ‘static’ method or variable has only copy for entire class irrespective of no. of objects.&lt;/li&gt;
&lt;li&gt;The main method takes a string array as an argument. This argument can be passed when executing the program.(Consider String to be a data type till further discussion)&lt;/li&gt;
&lt;li&gt;System.out.println() is similar to printf or cout\&amp;lt;\&amp;lt;. Here System is a class, out is a stream and println() is a method. ‘out’ is a &lt;u&gt;static stream &lt;/u&gt;so it is accessed by name of class (System) rather than object of system class.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Write the above program (don’t copy) in a simple text editor (or Textpad). Save the file as “Demo.java” at some specific path. If you are using Textpad, use shortcuts described above to compile and execute the code.&lt;/p&gt;
&lt;p&gt;If you are using a simple text editor, follow these steps&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open command prompt (goto  start -&gt; run -&gt; cmd - &gt; Enter).&lt;/li&gt;
&lt;li&gt;Navigate to the directory containing the file which you have just saved.&lt;/li&gt;
&lt;li&gt;To compile java program, type “javac Demo.java”. Here ‘javac’ is the java compiler application and Demo.java is the name of the java program which we are compiling. After this step, Demo.class file is created in the directory.&lt;/li&gt;
&lt;li&gt;To execute java program, type “java Demo”. Here java is the name of application which will execute the .class file and show the output as shown here.&lt;/li&gt;
&lt;/ol&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/61.jpg"&gt;&lt;img alt="6" src="//thegeekyway.com/uploads/images/2014/02/61.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content><category term="Android"></category><category term="java"></category></entry><entry><title>Moving from C++ to Java (J4A - 1)</title><link href="//thegeekyway.com/moving-c-java/" rel="alternate"></link><published>2014-02-22T23:51:00+05:30</published><updated>2014-02-22T23:51:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-22:/moving-c-java/</id><summary type="html">&lt;p&gt;&lt;u&gt;C to C++ and C++ to Java:&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;C was a powerful programming language but used structural approach. So when the length of code exceeded a particular no. of lines, the code became unmanageable. So this led to Object Oriented Programming techniques and birth of C++. But C++ compilers at that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;u&gt;C to C++ and C++ to Java:&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;C was a powerful programming language but used structural approach. So when the length of code exceeded a particular no. of lines, the code became unmanageable. So this led to Object Oriented Programming techniques and birth of C++. But C++ compilers at that time were not platform independent. You needed a different code for Windows, different for Mac, Unix and other operating systems. Today programs written in C++ are also categorized by 32 and 64 bit versions. So C++ followed the W.O.C.A. principle, i.e. &lt;u&gt;Write Once, Compile Anywhere&lt;/u&gt;. The main focus was to create programs which could execute on any platform and any O.S. These forces led to the development of Java (originally called as ‘Oak’) which followed W.O.R.A. principle, i.e. &lt;u&gt;Write Once, Run Anywhere.&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt; &lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Where the Magic lies?&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;So what magic is there in Java which was not in older languages? Basically all the older compilers compile the source code (program) to native executable file (like .exe in windows). Here ‘native executable file’ means a file which is created for some target OS and is ready to execute on that OS. So we need to create a different ‘native’ file for different OS and different processor architectures (32 and 64 bit).&lt;/p&gt;
&lt;p&gt;But in Java, the code is not directly compiled to native executable. The output of java compiler is a .class file, irrespective of OS / processor architecture. This .class file is a set of optimized instruction for a virtual machine called JVM (Java Virtual Machine). The creators of Java implemented this virtual machine (JVM) for different operating systems. So now the programmers need not worry about the target operating system or processor. They just have to write the code and install JVM on the target system, JVM handles the rest.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Understanding Simple Java Terms:&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;JVM&lt;/u&gt; is simply a virtual machine included in JDK as well as JRE.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;JDK&lt;/u&gt; is Java Development Kit for Java Developers. It includes Java Runtime Environment(JRE) and all other related tools needed by developers.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;JRE&lt;/u&gt; is Java Runtime Environment. It &lt;strong&gt;excludes&lt;/strong&gt; the development tools and encapsulates only runtime environment. When you create a java application for a client, just install JRE on client side and your application will execute.&lt;/p&gt;
&lt;p&gt;Remember, &lt;u&gt;Java code is platform independent but Java Runtime Environment is specific for each platform.&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;+-----------------------------------------------------------------------+
| &lt;div&gt;                                                                 |
|                                                                       |
| &lt;u&gt;The Android Counterpart&lt;/u&gt;:        |
| Android Devices have DVM (Dalvik Virtual Machine) rather than JVM     |
| (Java Virtual Machine). You can think of Dalvik as mobile or android  |
| specific implementation of JVM. You need not know about Dalvik for    |
| now, for those who are interested can visit                           |
| &lt;a href="http://stackoverflow.com/questions/3536786/dalvikvm-vs-javavm- |
| in-android"&gt;here&lt;/a&gt;.                                                          |
|                                                                       |
| &lt;/div&gt;                                                                |
+-----------------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Downloading &amp;amp; Installing JDK&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Download JDK from &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/112.jpg"&gt;&lt;img alt="1" src="//thegeekyway.com/uploads/images/2014/02/112.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Scroll down to see screen as shown above. Accept the License Agreement to start download. As you can see, JDK is implemented for almost all major operating systems. After downloading, install JDK with default settings. After installation, go to&lt;/p&gt;
&lt;p&gt;C:/program files/java/jdk\&amp;lt;version_name&gt;/bin/&lt;/p&gt;
&lt;p&gt;Make sure ‘javac’ and ‘java’ are present in this folder. Now copy the complete path from the address bar of explorer as shown in the pic below.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/25.jpg"&gt;&lt;img alt="2" src="//thegeekyway.com/uploads/images/2014/02/25.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, follow these steps&lt;/p&gt;
&lt;p&gt;Go to Start Menu -&gt; Run. Type ‘sysdm.cpl’ and press OK. You get the following screen.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/32.jpg"&gt;&lt;img alt="3" src="//thegeekyway.com/uploads/images/2014/02/32.jpg"&gt;&lt;/a&gt;  Click on ‘Advanced’ tab and then on Environment Variables button.&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/41.jpg"&gt;&lt;img alt="4" src="//thegeekyway.com/uploads/images/2014/02/41.jpg"&gt;&lt;/a&gt; You will get following screen now&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/51.jpg"&gt;&lt;img alt="5" src="//thegeekyway.com/uploads/images/2014/02/51.jpg"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Create a new user variable using button as shown above. Write the following values in text field provided.&lt;/p&gt;
&lt;p&gt;Variable name : path&lt;/p&gt;
&lt;p&gt;Variable value : \&amp;lt;text you had copied&gt;.&lt;/p&gt;
&lt;p&gt;Press OK to save and close all previous dialog boxes.&lt;/p&gt;
&lt;p&gt;Now your Java Environment Variable is set and if you have followed the steps correctly, you will be able to compile and run java applications. To check if you have followed the above procedure correctly, goto start menu -&gt; Run and type&lt;/p&gt;
&lt;p&gt;java and press enter, if you get a flashing black screen, type&lt;/p&gt;
&lt;p&gt;javac and press enter, if you still get a flashing black screen, it means the variables are correctly setup. If you get some error when you type java or javac, you might have done some mistake in setting up variable. It’s better to restart your computer and try again.&lt;/p&gt;
&lt;p&gt;The next tutorial describes creating your first simple Java program.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/creating-first-java-program" title="link"&gt;Link to next tutorial&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category><category term="java"></category></entry><entry><title>Introduction and Syllabus (J4A - 0)</title><link href="//thegeekyway.com/java-for-android-introducion/" rel="alternate"></link><published>2014-02-22T22:54:00+05:30</published><updated>2014-02-22T22:54:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-22:/java-for-android-introducion/</id><summary type="html">&lt;p&gt;Hello geeks, &lt;strong&gt;(J4A) Java for Android&lt;/strong&gt; is a series of tutorials for those who have good knowledge of C++ and want to switch to android without going into details of Core Java. So here we'll discuss ONLY THOSE features of JAVA (keywords, classes, concepts) which are used in android also …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello geeks, &lt;strong&gt;(J4A) Java for Android&lt;/strong&gt; is a series of tutorials for those who have good knowledge of C++ and want to switch to android without going into details of Core Java. So here we'll discuss ONLY THOSE features of JAVA (keywords, classes, concepts) which are used in android also. Some may think that these tutorials serve nothing and its better to learn these features in parallel with android, but if you know these concepts in advance, it will ultimately accelerate your efforts towards android application development and you will not need to LOOK BACK while developing for android. ECE students interested in android can also go for these tutorials. Please note that these tutorials don't make you Java Programmer !&lt;/p&gt;
&lt;p&gt;Topics from JAVA included in this tutorial series are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Moving from C++ to JAVA &amp;amp; Installing and JDK.&lt;/li&gt;
&lt;li&gt;A simple java program to explain various simple concepts.&lt;/li&gt;
&lt;li&gt;Revising data types, if, for, switch, Typecasting, operators, arrays in Java.&lt;/li&gt;
&lt;li&gt;Concept of class, method, references, access specifiers, keywords (static, final, extends, implements).&lt;/li&gt;
&lt;li&gt;Packages and Interfaces (Overview only).&lt;/li&gt;
&lt;li&gt;Exception Handling and Multithreading (Both Detailed).&lt;/li&gt;
&lt;li&gt;String class, its functions and java.lang.CharSequence interface.&lt;/li&gt;
&lt;li&gt;Overview of important Java API used in Android (java.util, java.io, java.net).&lt;/li&gt;
&lt;li&gt;Event  Based Programming and Anonymous Inner Classes.&lt;/li&gt;
&lt;li&gt;Introduction to Java Beans Architecture to understand various classes/components.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Please note that above list of topics are tentative and may be added / removed.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/moving-c-java/" title="link"&gt;Link to First Tutorial&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category><category term="java"></category></entry><entry><title>Second simple Android Application Part 3 (Android-Part 6)</title><link href="//thegeekyway.com/secondapp3/" rel="alternate"></link><published>2014-02-14T23:20:00+05:30</published><updated>2014-02-14T23:20:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-14:/secondapp3/</id><summary type="html">&lt;p&gt;Welcome back geeks, so after pasting &lt;a href="http://pastebin.com/zs00wWNd"&gt;this code&lt;/a&gt;, you would be having the MainActivity.java file like this :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/131.jpg"&gt;&lt;img alt="13" src="//thegeekyway.com/uploads/images/2014/02/131.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this screenshot, notice the highlighted part on the left. The Eclipse IDE is showing some errors at some specific lines (line no. 9 10,17,18 and so on). Now we …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome back geeks, so after pasting &lt;a href="http://pastebin.com/zs00wWNd"&gt;this code&lt;/a&gt;, you would be having the MainActivity.java file like this :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/131.jpg"&gt;&lt;img alt="13" src="//thegeekyway.com/uploads/images/2014/02/131.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this screenshot, notice the highlighted part on the left. The Eclipse IDE is showing some errors at some specific lines (line no. 9 10,17,18 and so on). Now we’ll use &lt;u&gt;Quick Fix&lt;/u&gt; feature of Eclipse to include necessary classes.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on left corner of line no. 9 and Eclipse with provide &lt;strong&gt;fixes&lt;/strong&gt; for this error. Click on the first solution, i.e. import &lt;strong&gt;android.widget.Button.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Similarly click on left corner of line no. 10 to import &lt;strong&gt;android.widget.EditText&lt;/strong&gt;. So now two of required classes have been imported, you will notice that in import statements.&lt;/li&gt;
&lt;li&gt;Click on left corner of line no. 21 to import View.OnClickListener    (third solution to import &lt;strong&gt;android.view.View.OnClickListene&lt;/strong&gt;r)&lt;/li&gt;
&lt;li&gt;Click on left corner of line no. 27 to import &lt;strong&gt;android.widget.Toast&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So now our necessary packages and classes have been imported and we can start understand the actual code.&lt;/p&gt;
&lt;p&gt;First we create a button reference and two edit text references globally within the class. This part required no explanation. Inside the onCreate method we map all of them to the layout file which we had created. We use the method &lt;strong&gt;findViewById&lt;/strong&gt; to find the components by their ID as defined in the XML file. So we map the Button and two EditTexts with their respective IDs.&lt;/p&gt;
&lt;p&gt;Next we add an &lt;strong&gt;onClickListener&lt;/strong&gt; to the button. This is similar to the &lt;strong&gt;ActionListener&lt;/strong&gt; from Swing API. It defines the action to be performed when the button is clicked. We have used the &lt;strong&gt;anonymous inner class version&lt;/strong&gt; of this method. Alternatively, we may even use &lt;strong&gt;implement&lt;/strong&gt; keyword to implement &lt;strong&gt;OnClickListener&lt;/strong&gt; interface and define the required method ( &lt;strong&gt;public void onClick()&lt;/strong&gt; ).&lt;/p&gt;
&lt;p&gt;The onClick() method takes a &lt;strong&gt;View&lt;/strong&gt; as an argument. As discussed previously also, View is directly or indirectly superclass of all android components. So we can use the View parameter to obtain view Id, and other properties of the View which generates the event.&lt;/p&gt;
&lt;p&gt;Inside the method we call makeText method of the Toast class. This method is used to create a simple dialog like view which displays the input. This is similar to JOptionPane class from Swing API where we have few ready-made dialogs. The arguments inside Toast method specify the &lt;strong&gt;application context&lt;/strong&gt;, the &lt;strong&gt;string&lt;/strong&gt; to be displayed and the &lt;strong&gt;time&lt;/strong&gt; for which the dialog is displayed (Toast.LENGTH_SHORT). In the end, show method is called from the Toast context to show this dialog which we have just created.&lt;/p&gt;
&lt;p&gt;So this is how this simple application works. This was an effort to introduce the onClickListener to our audience. Similarly different components have different type of listeners like onCheckedChangedListener for toggle based events.&lt;/p&gt;
&lt;p&gt;Execute the application on Android Virtual Device, Bluestacks or directly on your phone. This application when executed on AVD 4.3 gives the following output :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/141.jpg"&gt;&lt;img alt="14" src="//thegeekyway.com/uploads/images/2014/02/141.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content><category term="Android"></category></entry><entry><title>Second simple Android Application Part 2 (Android-Part 5)</title><link href="//thegeekyway.com/secondapp2/" rel="alternate"></link><published>2014-02-14T22:32:00+05:30</published><updated>2014-02-14T22:32:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-14:/secondapp2/</id><summary type="html">&lt;p&gt;Welcome back geeks, this tutorial is a continuation of &lt;a href="http://www.thegeekyway.com/secondapp1/" title="previous"&gt;previous&lt;/a&gt;&lt;a href="http://www.thegeekyway.com/secondapp1/" title="this"&gt; &lt;/a&gt;tutorial. So please read the previous one if you have not read it.&lt;/p&gt;
&lt;p&gt;So we had created a simple layout and it looked something like this :&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/7.jpg"&gt;&lt;img alt="7" src="//thegeekyway.com/uploads/images/2014/02/7.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Double click on the button to change the text of the button, now the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome back geeks, this tutorial is a continuation of &lt;a href="http://www.thegeekyway.com/secondapp1/" title="previous"&gt;previous&lt;/a&gt;&lt;a href="http://www.thegeekyway.com/secondapp1/" title="this"&gt; &lt;/a&gt;tutorial. So please read the previous one if you have not read it.&lt;/p&gt;
&lt;p&gt;So we had created a simple layout and it looked something like this :&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/7.jpg"&gt;&lt;img alt="7" src="//thegeekyway.com/uploads/images/2014/02/7.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Double click on the button to change the text of the button, now the window will switch to XML version of the layout. In the XML file, the part of button definition is highlighted.&lt;/p&gt;
&lt;p&gt;Move to the top of XML file and we’ll understand each thing written in the file. The first two lines are just references to website.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/8.jpg"&gt;&lt;img alt="8" src="//thegeekyway.com/uploads/images/2014/02/8.jpg"&gt;&lt;/a&gt;&lt;strong&gt;1.  &lt;/strong&gt; The default layout being used by eclipse here is &lt;strong&gt;Relative Layout.&lt;/strong&gt; As obvious from the name, in Relative Layout each component is aligned with respect to its previous component(s) which was added to layout.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2.  &lt;/strong&gt; android:layout_width=”match_parent”. This code sets the width of Relative Layout to cover the complete width of layout. Similarly the next line sets the width to complete width of the layout.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.  &lt;/strong&gt; The next four lines of code just provide some padding to all the sides using constant value defined in dimension ( \@dimen ).&lt;/p&gt;
&lt;p&gt;The next code fragment adds an EditText (or textfield) to the layout whose attributes are :&lt;/p&gt;
&lt;p&gt;a)   android:id=”\@id/editText1”: This id is used to refer this textfield in java program, as well as to align other components using this EditText.&lt;/p&gt;
&lt;p&gt;b)   android:layout_width=”wrap_content” :  The width of component just wraps the content, or simply just sufficient to store a simple line of text. Similar is for height of EditText.&lt;/p&gt;
&lt;p&gt;c)   android:layout_alignParentLeft="true" : The component is aligned from left of its parent. This value is set to true to apply these changes. Similar is for next line. So by these two lines, the EditText is aligned to &lt;u&gt;Top-Left&lt;/u&gt; of Parent (or the layout/screen).&lt;/p&gt;
&lt;p&gt;d)   android:layout_marginLeft="39dp" : A slight margin is given towards left side. &lt;strong&gt;dp&lt;/strong&gt; is &lt;strong&gt;density pixels&lt;/strong&gt;. It is better to specify spacing using &lt;u&gt;dp&lt;/u&gt; rather than &lt;u&gt;px&lt;/u&gt; (pixels) because px is not same for different android phones, whereas dp is same for different android phones. Similar is done by next line to set top margin.&lt;/p&gt;
&lt;p&gt;e)   android:ems=”10” : Simply means that the EditText (text field) can contain 10 characters. To Experiment with ems, try changing its value and see corresponding change in the Graphical Layout.&lt;/p&gt;
&lt;p&gt;We can specify many more attributes for a text field. Use &lt;strong&gt;Ctrl+Space&lt;/strong&gt; in Eclipse to view more related properties. For eg. write this in eclipse and press &lt;strong&gt;Ctrl+Space&lt;/strong&gt; to view more attributes.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/9.jpg"&gt;&lt;img alt="9" src="//thegeekyway.com/uploads/images/2014/02/9.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When you write &lt;u&gt;android:&lt;/u&gt; on a blank line and press Ctrl+Space to view all these attributes. Similarly we can also use this shortcut to view suggestions in Java program also.&lt;/p&gt;
&lt;p&gt;In the second EditText, everything is same except &lt;u&gt;inputType &lt;/u&gt;attribute which is set to “&lt;u&gt;textPassword&lt;/u&gt;”. This sets the input mode to password, so the text input by user is set to bullets (to hide text).&lt;/p&gt;
&lt;p&gt;To experiment, you can use Ctrl+Space shortcut to see more available &lt;u&gt;inputTypes&lt;/u&gt; (shown below).&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/10.jpg"&gt;&lt;img alt="10" src="//thegeekyway.com/uploads/images/2014/02/10.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For button, all the attributes are self-explanatory and similar to those explained previously except the &lt;u&gt;android:text &lt;/u&gt;attribute. This attribute sets the Text which is displayed on the button and is visible to the user. If you notice carefully, you’ll see an exclamatory mark on the left corner of line where text for button is specified.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/111.jpg"&gt;&lt;img alt="11" src="//thegeekyway.com/uploads/images/2014/02/111.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When you bring mouse pointer close to the mark, you see the notice the warning “Hardcoded string ”Button”, should use \@string resource”. For now just ignore this warning, it would be discussed later where you will specify the String using strings.xml file.Now our XML work is complete and we’ll move to the &lt;strong&gt;MainActivity.java&lt;/strong&gt; file to start the coding part.&lt;/p&gt;
&lt;p&gt;Out Java file contains this much code for now :&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/121.jpg"&gt;&lt;img alt="12" src="//thegeekyway.com/uploads/images/2014/02/121.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;People familiar with java will understand the first two statements (package and import). Next is our class which extends the Activity class. In android, each new screen is an &lt;strong&gt;Activity,&lt;/strong&gt; so it extends the Activity class which is present in &lt;strong&gt;android.app&lt;/strong&gt; package. Click on ‘+’ sign on the left import to see other imported packages.&lt;/p&gt;
&lt;p&gt;The first method inside our class is onCreate method. This is a part of Android life cycle. Java programmers must be knowing &lt;strong&gt;Applet Life Cycle methods.&lt;/strong&gt; Similarly, an android application also has a &lt;a href="http://i.stack.imgur.com/rVnSi.png"&gt;life cycle&lt;/a&gt; (which would be discussed in further tutorials). For now, just consider that onCreate is just an initialization method for our activity. In the first line of code, it simply calls the super class method. The second line sets the layout of our activity to &lt;u&gt;R.layout.activity_main&lt;/u&gt;. This is nothing but a reference to the XML file just created by us and stored in layout folder. It is accessed by its defined in R.java file (auto-generated java file). The second method creates a menu which is rather not required here, so either let it be there or remove it. We’ll discuss about that method later. Paste &lt;a href="http://pastebin.com/zs00wWNd"&gt;this code&lt;/a&gt;to your application and in the next tutorial we’ll understand the java code and finish this second simple android application.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/secondapp3" title="link"&gt; &lt;p style="font-size: xx-large;"&gt;Link to next tutorial&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category></entry><entry><title>Second simple Android Application Part 1 (Android-Part 4)</title><link href="//thegeekyway.com/secondapp1/" rel="alternate"></link><published>2014-02-14T21:26:00+05:30</published><updated>2014-02-14T21:26:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-14:/secondapp1/</id><summary type="html">&lt;p&gt;Hey Geeks ! Hope you all have gone through previous tutorials and are clear with the basics of android. Here we’ll create our second simple android application which will consist of creating our own layout and a bit of java coding. As discussed previously, the &lt;strong&gt;layout of our android application …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hey Geeks ! Hope you all have gone through previous tutorials and are clear with the basics of android. Here we’ll create our second simple android application which will consist of creating our own layout and a bit of java coding. As discussed previously, the &lt;strong&gt;layout of our android application is written in XML file&lt;/strong&gt;, so we’ll create the layout with a button and two text fields. When the button is pressed, the contents of text fields are shown. For demonstration, the two text fields input the ‘user Id’ and ‘password’ from the user and they are displayed to the user when the button is pressed..&lt;/p&gt;
&lt;p&gt;So open Eclipse and create a new Android Project from File-&gt; New -&gt; Android project (or use keyboard shortcut Alt+Shift+N).&lt;/p&gt;
&lt;p&gt;Fill in the name of application as “UserId” or something similar. Fill in package name and project name. Let everything else remain &lt;strong&gt;default&lt;/strong&gt; and finish to get a similar screen.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/19.jpg"&gt;&lt;img alt="1" src="//thegeekyway.com/uploads/images/2014/02/19.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Eclipse opens two files by default for us (highlighted in above pic):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MainActivity.java: Here, java code for activity is written. &lt;strong&gt;Activity&lt;/strong&gt; is something similar to java frame. Or in simpler words, for now you can consider each new screen as a new Activity.&lt;/li&gt;
&lt;li&gt;Activity_main.xml: XML file contains the components added by us and their positioning or simply the layout of the activity. Usually, each &lt;strong&gt;new activity&lt;/strong&gt; will have its own layout defined in its respective XML file.&lt;/li&gt;
&lt;/ol&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/24.jpg"&gt;&lt;img alt="2" src="//thegeekyway.com/uploads/images/2014/02/24.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Just  to refresh, MainActivity.java file is stored in &lt;strong&gt;src&lt;/strong&gt; folder and layout files like activit_main.xml are stored in &lt;strong&gt;res/layout&lt;/strong&gt; folder. Click on the activity_main.xml and the following screen is opened by Eclipse.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/31.jpg"&gt;&lt;img alt="3" src="//thegeekyway.com/uploads/images/2014/02/31.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;One important part is highlighted in this screenshot, &lt;u&gt;Graphical Layout&lt;/u&gt; tab and &lt;u&gt;activity_main&lt;/u&gt; tab. &lt;strong&gt;Graphical Layout&lt;/strong&gt; tab is used to view the graphical state of layout or to drag and drop components onto your activity. To view what is happening on the coding side, click on &lt;strong&gt;activity_main.xml&lt;/strong&gt; tab.&lt;/p&gt;
&lt;p&gt;For most of the part, you can use drag and drop to add components to your activity, but being a programmer you must know what is actually happening in the XML file. Also, when you are working with layouts and for better positioning of components, you will need to have a good understanding of what is happening on the XML side, so that you can customize the components from the code also. So we’ll use drag and drop for adding components and at the same time we’ll also understand what changes are taking place in XML file.&lt;/p&gt;
&lt;p&gt;By clicking all the component types (Form widgets, textfields, layouts etc.), you can have an overview of what all components you have (you must close the upper folder to view lower folder due to limited space in eclipse window).&lt;/p&gt;
&lt;p&gt;Now we’ll start creating layout for our application. Click on “Hello World” on the screen so that it is selected as shown below.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/4.jpg"&gt;&lt;img alt="4" src="//thegeekyway.com/uploads/images/2014/02/4.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now right click and Delete this TextView (or use Delete key from keyboard). Now what’s a TextView? In Android, all components are subclasses of a class called &lt;strong&gt;View.&lt;/strong&gt; Or put in simpler words, in Android every component is a View. Each component whether a &lt;u&gt;button&lt;/u&gt;,&lt;u&gt; text field&lt;/u&gt; etc. are directly or indirectly subclasses of View.&lt;/p&gt;
&lt;p&gt;Coming back to our TextView, it is a passive component like a JLabel in Java. It simply displays some text and doesn’t interact with the user other than this. After removing the ‘Hello World’ TextView, we are left with only the title of the application. So now we’ll start dragging components from the left panel to the layout.&lt;/p&gt;
&lt;p&gt;Expand the &lt;u&gt;Text Fields&lt;/u&gt; section and use your mouse to drag a &lt;u&gt;Plain Text&lt;/u&gt; and a &lt;u&gt;Password&lt;/u&gt; field on to your layout.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/5.jpg"&gt;&lt;img alt="5" src="//thegeekyway.com/uploads/images/2014/02/5.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/6.jpg"&gt;&lt;img alt="6" src="//thegeekyway.com/uploads/images/2014/02/6.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Next, use the &lt;u&gt;Form Widgets&lt;/u&gt; to insert a button under these two fields, preferably in the middle of the screen.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/7.jpg"&gt;&lt;img alt="7" src="//thegeekyway.com/uploads/images/2014/02/7.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So now our layout is ready with two textfields and a button. We don't want to make this tutorial lengthy for you guys, so we'll just stop here and do check next tutorial to proceed further.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/secondapp2/" title="link"&gt; &lt;p style="font-size: xx-large"&gt;Link to next tutorial&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category></entry><entry><title>KVM vs QEMU vs Libvirt</title><link href="//thegeekyway.com/kvm-vs-qemu-vs-libvirt/" rel="alternate"></link><published>2014-02-14T16:22:00+05:30</published><updated>2014-02-14T16:22:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2014-02-14:/kvm-vs-qemu-vs-libvirt/</id><summary type="html">&lt;p&gt;Since the day I started to read about the virtualization concept, I have been troubled by QEMU and KVM. They both look like complementary, but what exactly they do? And then there is libvirt, what role does it play? Let’s try to understand that.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/download.jpg"&gt;&lt;img alt="KVM" src="//thegeekyway.com/uploads/images/2014/02/download-300x94.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When you dive deep into …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since the day I started to read about the virtualization concept, I have been troubled by QEMU and KVM. They both look like complementary, but what exactly they do? And then there is libvirt, what role does it play? Let’s try to understand that.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/download.jpg"&gt;&lt;img alt="KVM" src="//thegeekyway.com/uploads/images/2014/02/download-300x94.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When you dive deep into the virtualization, you find hypervisor. Hypervisor is the agent that helps you create virtual machines. He is the guy who creates and runs the guest machine and provide the host’s resource to the guest. QEMU and KVM both are able to act as hypervisor. Then why are they used together? Well, because QEMU is dumb! Well, not exactly, but it is a little slower when it comes to system which dont have hardware virtualization. So, to achieve that, we have our own very dear KVM. KVM helps QEMU to access hardware virtualization features on different architectures. It also adds the acceleration feature to the QEMU process. So, in short, when they are together, QEMU is the hypervisor/emulator and KVM is the accelerating agent.&lt;/p&gt;
&lt;p&gt;Then we come to libvirt. Libvirt is quite innocent in the sense that is doesn’t confuse you! It is simply a virtualization management library. And what does it do? It manages both KVM and QEMU. It consists of three utilities namely - an API library, a daemon (libvirtd) and a command line tool -virsh. Libvirt is quite effective and it can manage a lot of hypervisors altogether.&lt;/p&gt;
&lt;p&gt;So, whenever you are using these all together, remember there is a hypervisor, an accelerating agent and a management library.&lt;/p&gt;</content><category term="kvm"></category><category term="libvirt"></category><category term="qemu"></category><category term="virtualization"></category></entry><entry><title>Java: Autoboxing and -XX:AutoBoxCacheMax</title><link href="//thegeekyway.com/java-autoboxing-xxautoboxcachemax/" rel="alternate"></link><published>2014-02-13T22:52:00+05:30</published><updated>2014-02-13T22:52:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2014-02-13:/java-autoboxing-xxautoboxcachemax/</id><summary type="html">&lt;p&gt;Autoboxing is the mechanism in Java to convert primitive type values to respective wrapper class object. Java programmer mostly use autoboxing while using collections, since collection only holds object and to put primitive type data into collection, it's need to use wrapper classes to convert into objects.&lt;/p&gt;
&lt;p&gt;So , here is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Autoboxing is the mechanism in Java to convert primitive type values to respective wrapper class object. Java programmer mostly use autoboxing while using collections, since collection only holds object and to put primitive type data into collection, it's need to use wrapper classes to convert into objects.&lt;/p&gt;
&lt;p&gt;So , here is autoboxing to assign primitive type to wrapper type directly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boolean&lt;/code&gt; to type &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;byte&lt;/code&gt; to type &lt;code&gt;Byte&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;short&lt;/code&gt; to type &lt;code&gt;Short&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;char&lt;/code&gt; to type &lt;code&gt;Character&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt; to type &lt;code&gt;Integer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long&lt;/code&gt; to type &lt;code&gt;Long&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float&lt;/code&gt; to type &lt;code&gt;Float&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;double&lt;/code&gt; to type &lt;code&gt;Double&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can directly compare wrapper classes using &lt;p style="background-color: #ffff99;"&gt; &lt;em&gt;==&lt;/em&gt; , &lt;p style="background-color: #ffffff;"&gt; just like primitive types but &lt;/p&gt;&lt;/p&gt;for certain range which is by default (-128 to 127) .Which is default value of   &lt;p style="background-color: #ffff00;"&gt;-XX:AutoBoxCacheMax .&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Here is the demo program when your object which is a autoboxed primitive type can be compared directly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;int1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;int2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;int2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;they&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="n"&gt;primitive&lt;/span&gt;

        &lt;span class="nb"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;integerObj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;integerObj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integerObj1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;integerObj2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt; 

        &lt;span class="nb"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;integer1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;integer2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integer1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;integer2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;

        &lt;span class="nb"&gt;Character&lt;/span&gt; &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;Character&lt;/span&gt; &lt;span class="n"&gt;c2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;

        &lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; Why caching this range :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This short range are generally used and  performance of &lt;strong&gt; &lt;p style="font-family: courier new,courier; background-color: #ffff00;"&gt;&lt;em&gt;public static valueOf( i)&lt;/em&gt;&lt;/p&gt;&lt;/strong&gt;  as this method is likely to yield significantly better space and time performance by caching frequently requested values.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Changing  -XX:AutoBoxCacheMax :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can set the -XX:AutoBoxCacheMax=1000, and it will catch integer upto 1000 which means following code will results true&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;integer1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;integer2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integer1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;integer2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: this changing size only works for positive integer and it can't be set less than 127.  See inner class &lt;a href="http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/java/lang/Integer.java?av=f#596"&gt; &lt;p style="font-family: courier new,courier;"&gt;private static class IntegerCache&lt;/p&gt;&lt;/a&gt; in Integer.java&lt;/p&gt;
&lt;p&gt;&lt;a href="http://help.eclipse.org/helios/index.jsp?topic=%2Forg.eclipse.pde.doc.user%2Fguide%2Ftools%2Flaunchers%2Farguments.htm"&gt;Setting Runtime VM option in Eclipse&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Max size of -XX:AutoBoxCacheMax ;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Max cache size can't be more than -Xmx (which is JVM heap size) . Heap size is defined by vm argument -Xmxm .&lt;br&gt;
But, you as soon as JVM initialized, it allocate the memory for caching purpose. But you can't allocate whole (-Xmx in byte)/4 (4byte is size of  int) for AutoBoxCache because of other object needed to be loaded and you might end up with  &lt;p style="font-family: courier new,courier;"&gt;java.lang.OutOfMemoryError: Java heap space&lt;/p&gt;.&lt;/p&gt;
&lt;p&gt;Also, note that for other wrapper classes except Integer , have fixed caching size upto 127 only.&lt;/p&gt;</content><category term="java"></category></entry><entry><title>XHTML and CSS - 1 - Overview and Downloading Text Editor</title><link href="//thegeekyway.com/video-tut-xhtml-and-css-1-overview-downloading-text-editor/" rel="alternate"></link><published>2014-02-09T13:55:00+05:30</published><updated>2014-02-09T13:55:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-02-09:/video-tut-xhtml-and-css-1-overview-downloading-text-editor/</id><summary type="html">&lt;p&gt;Welcome to first tutorial in the Video Tutorial Series of XHTML and CSS, you can find list of all tutorials on XHTML and CSS , and you can watch and&lt;a href="http://www.youtube.com/user/TheGeekyWayDotCom/videos"&gt;subscribe the channel on YouTube.&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/VideoTut1XHTMLandCSS.png" title="Video Tutorial on XHTML and CSS 1. Overview and Downloading Text Editor"&gt;&lt;img alt="Video Tutorial on XHTML and CSS 1. Overview and Downloading Text Editor" src="//thegeekyway.com/uploads/images/2014/02/VideoTut1XHTMLandCSS.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this tutorial, we'll get started with Web Development by understanding how to develop webpages. The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome to first tutorial in the Video Tutorial Series of XHTML and CSS, you can find list of all tutorials on XHTML and CSS , and you can watch and&lt;a href="http://www.youtube.com/user/TheGeekyWayDotCom/videos"&gt;subscribe the channel on YouTube.&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/VideoTut1XHTMLandCSS.png" title="Video Tutorial on XHTML and CSS 1. Overview and Downloading Text Editor"&gt;&lt;img alt="Video Tutorial on XHTML and CSS 1. Overview and Downloading Text Editor" src="//thegeekyway.com/uploads/images/2014/02/VideoTut1XHTMLandCSS.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this tutorial, we'll get started with Web Development by understanding how to develop webpages. The basic semantics of the webpage is done through XHTML and styling is done through CSS.&lt;/p&gt;
&lt;p&gt;In this video tutorial, we'll know how we can see the rendered HTML coding of any webpage once it's retrieved from the server and then analyse different sections.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pre-Requisites for this and the coming tutorials :-&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You need just a good text editor,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Windows,  go with Notepad ++, download it from &lt;a href="www.notepad-plus-plus.org"&gt;www.notepad-plus-plus.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For linux there are many good editors like Vim , GEdit, Nano etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width="425" height="350" src="http://www.youtube.com/embed/dYKyHnfpmtc" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;In this and the coming tutorial series, we'll be using a Text Editor known as &lt;strong&gt;Notepad ++&lt;/strong&gt; for coding HTML on &lt;strong&gt;Windows&lt;/strong&gt; platform, if you're on a different platform search for some appropriate text editor, feel free to try out any one from the above mentioned editors.&lt;/p&gt;
&lt;p&gt;Stay tuned for more, if you have any queries, feel free to ask through comments section below.&lt;/p&gt;</content><category term="CSS"></category><category term="Free"></category><category term="tutorials"></category><category term="video"></category><category term="xhtml"></category></entry><entry><title>Free Video Tutorials</title><link href="//thegeekyway.com/free-video-tutorials/" rel="alternate"></link><published>2014-02-09T13:46:00+05:30</published><updated>2014-02-09T13:46:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-02-09:/free-video-tutorials/</id><summary type="html">&lt;p&gt;So, finally we decided to make the site more spicy by giving out free video tutorials for you so that you can understand stuff in a better way.&lt;/p&gt;
&lt;p&gt;This page would be frequently updated with links to different sections and video tutorials&lt;/p&gt;
&lt;p&gt;You can subscribe the &lt;a href="http://www.youtube.com/user/TheGeekyWayDotCom/videos"&gt;Official Channel of TheGeekyWay …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;So, finally we decided to make the site more spicy by giving out free video tutorials for you so that you can understand stuff in a better way.&lt;/p&gt;
&lt;p&gt;This page would be frequently updated with links to different sections and video tutorials&lt;/p&gt;
&lt;p&gt;You can subscribe the &lt;a href="http://www.youtube.com/user/TheGeekyWayDotCom/videos"&gt;Official Channel of TheGeekyWay.com on Youtube.&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/FreeVideoTutorials.png" title="Free Video Tutorials from TheGeekyWayDotCom"&gt;&lt;img alt="Free Video Tutorials from TheGeekyWayDotCom" src="//thegeekyway.com/uploads/images/2014/02/FreeVideoTutorials.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="font-size: large;"&gt;&lt;strong&gt;&lt;em&gt;List of Tutorials &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tutorials on XHTML and CSS&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.thegeekyway.com/video-tut-xhtml-and-css-1-overview-downloading-text-editor/"&gt;Overview and Downloading Text Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Basic Semantics of a Web page and Doctype Decleration&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>Java Multithreading : Thread States and Thread Priority</title><link href="//thegeekyway.com/java-multithreading-thread-states-explained/" rel="alternate"></link><published>2014-02-08T23:16:00+05:30</published><updated>2014-02-08T23:16:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2014-02-08:/java-multithreading-thread-states-explained/</id><summary type="html">&lt;p&gt;In a thread lifecycle it can  have one of the  following states mentioned below. I have already explained &lt;a href="http://www.thegeekyway.com/java-multithreading/#lifecycle"&gt;Thread Life Cycle&lt;/a&gt; and basics of thread including &lt;a href="http://www.thegeekyway.com/java-multithreading/#daemonthread"&gt;Daemon Threads&lt;/a&gt;. &lt;p style="line-height: 1.5em;"&gt;Now let see inside the thread states and how to achieve them .&lt;/p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#newRT"&gt;NEW &lt;/a&gt;: &lt;em&gt;A thread has not started yet.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#newRT"&gt;RUNNABLE &lt;/a&gt;: &lt;em&gt;Thread is …&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;In a thread lifecycle it can  have one of the  following states mentioned below. I have already explained &lt;a href="http://www.thegeekyway.com/java-multithreading/#lifecycle"&gt;Thread Life Cycle&lt;/a&gt; and basics of thread including &lt;a href="http://www.thegeekyway.com/java-multithreading/#daemonthread"&gt;Daemon Threads&lt;/a&gt;. &lt;p style="line-height: 1.5em;"&gt;Now let see inside the thread states and how to achieve them .&lt;/p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#newRT"&gt;NEW &lt;/a&gt;: &lt;em&gt;A thread has not started yet.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#newRT"&gt;RUNNABLE &lt;/a&gt;: &lt;em&gt;Thread is running state but it can be in state of waiting.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blocked"&gt;BLOCKED &lt;/a&gt;:  &lt;em&gt;Thread is waiting to acquire monitor lock to enter into a synchronized block/method after calling  &lt;p style="font-family: 'courier new', courier;"&gt;Object.wait()&lt;/p&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#timedWait"&gt;WAITING &lt;/a&gt;: &lt;em&gt;A thread is in waiting state due to calling one of the following methods&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;Object.wait() : &lt;em&gt;It causes current thread to wait until it been notified by method &lt;p style="font-family: 'courier new', courier;"&gt; &lt;/p&gt; &lt;p style="font-family: terminal, monaco;"&gt; &lt;/p&gt;or  &lt;p style="font-family: 'courier new', courier;"&gt;notifyAll().&lt;/p&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Object.join() : &lt;em&gt;Waits for current thread to die&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#locksupport"&gt;LockSupport.park &lt;/a&gt;:&lt;em&gt; Disables the current thread for thread scheduling purposes unless the permit is available.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="timedWait"&gt;TIMED_WAITING &lt;/a&gt;: &lt;em&gt;Current thread is waits for another thread for specified time to perform the aciton.&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;Thread.sleep (long timeInMilliSecond) : &lt;em&gt;Makes current thread to cease the execution for specified time.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Object.wait (long timeInMilliSecond) : * Causes current thread to wait for specified time until time elapsed or get notified by  &lt;p style="font-family: 'courier new', courier;"&gt;notify()&lt;/p&gt; or  &lt;p style="font-family: 'courier new', courier;"&gt;notifyAll()&lt;/p&gt;.*&lt;/li&gt;
&lt;li&gt;Thread.join (long millis) : &lt;em&gt;Current thread waits for specified time to die the thread.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;LockSupport.parkNanos (long nanoSeconds) : &lt;em&gt;Disables the current thread for thread scheduling purposes, for up to the specified waiting time, unless the permit is available.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;LockSupport.parkUntil ()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#newRT"&gt;TERMINATED &lt;/a&gt;: &lt;em&gt;When thread completed its execution.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, how to set &lt;a href="#priority"&gt;Thread Priority&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;   &lt;p #newRT&gt;&lt;/p&gt;NEW, RUNNING and TERMINATED&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;ThreadStates&lt;/span&gt; {
  &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; []&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;Exception&lt;/span&gt;{
    &lt;span class="nv"&gt;MyThreads&lt;/span&gt; &lt;span class="nv"&gt;firstObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;MyThreads&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;MyThreads&lt;/span&gt; &lt;span class="nv"&gt;secondObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;MyThreads&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;firstObj&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;firstThread&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;secondObj&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;secondThread&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;getName&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;getState&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;getName&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;getState&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;sleep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;getName&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;getState&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;getName&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;getState&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

  }

}
&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;MyThreads&lt;/span&gt; &lt;span class="nv"&gt;implements&lt;/span&gt; &lt;span class="nv"&gt;Runnable&lt;/span&gt; {

  &lt;span class="nv"&gt;long&lt;/span&gt; &lt;span class="nv"&gt;sleeptime&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;MyThreads&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;long&lt;/span&gt; &lt;span class="nv"&gt;sleeptime&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
    &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;sleeptime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;sleeptime&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  @&lt;span class="nv"&gt;Override&lt;/span&gt;
  &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i&amp;lt;=5; i++){&lt;/span&gt;
      &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;currentThread&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;.&lt;span class="nv"&gt;getName&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
      &lt;span class="nv"&gt;try&lt;/span&gt; {
        &lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;sleep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sleeptime&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
      }
      &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InterruptedException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
      }

    }
  }
}

&lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="nv"&gt;Output&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="nv"&gt;NEW&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="nv"&gt;NEW&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="nv"&gt;firstThread&lt;/span&gt; &lt;span class="nv"&gt;TERMINATED&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="nv"&gt;TIMED_WAITING&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;due&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;sleep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;time&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;call&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="nv"&gt;secondThread&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;WAITING and  &lt;p #timedWait&gt;&lt;/p&gt;TIMED_WAITING due to&lt;em&gt; &lt;p style="font-family: 'courier new', courier;"&gt; wait()&lt;/p&gt;&lt;/em&gt; and  &lt;p style="font-family: 'courier new', courier;"&gt;&lt;em&gt;wait(timeGiven)&lt;/em&gt; :&lt;/p&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When &lt;em&gt;wait()&lt;/em&gt; is called on a Thread, it will keep waiting until notified.&lt;/p&gt;
&lt;p&gt;While &lt;em&gt;wait(timeGiven)&lt;/em&gt;, wait until the &lt;em&gt;timeGiven&lt;/em&gt; expired or notified.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;RunWait&lt;/span&gt; {
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; []&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;InterruptedException&lt;/span&gt; {
        &lt;span class="nv"&gt;WaitDemo&lt;/span&gt; &lt;span class="nv"&gt;waitDemo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;WaitDemo&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;waitDemo&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;WaitThread&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;sleep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;getName&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; checking in main() &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;getState&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;waitDemo&lt;/span&gt;.&lt;span class="nv"&gt;setValue&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}
&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;WaitDemo&lt;/span&gt; &lt;span class="nv"&gt;implements&lt;/span&gt; &lt;span class="nv"&gt;Runnable&lt;/span&gt;{
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;boolean&lt;/span&gt; &lt;span class="nv"&gt;isValueSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;false&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

    @&lt;span class="nv"&gt;Override&lt;/span&gt;
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="nv"&gt;synchronized&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;isValueSet&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;{
                &lt;span class="nv"&gt;try&lt;/span&gt; {
                    &lt;span class="k"&gt;wait&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;  // Check with wait(1000) for TIMED_WAITING&lt;/span&gt;
                } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InterruptedException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                    &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                }
            }

        }

        &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Got the Value: &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;isValueSet&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }

    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;setValue&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;{
        &lt;span class="nv"&gt;synchronized&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
            &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;isValueSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;notifyAll&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
}

&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="nv"&gt;Output&lt;/span&gt;
&lt;span class="nv"&gt;WaitThread&lt;/span&gt; &lt;span class="nv"&gt;checking&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="nv"&gt;WAITING&lt;/span&gt;
&lt;span class="nv"&gt;Got&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;Value&lt;/span&gt;: &lt;span class="nv"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; &lt;p #blocked&gt;&lt;/p&gt;BLOCKED&lt;/strong&gt; : When thread is waiting to enter acquire monitor lock or to enter into synchronized method/block  or to enter into Critical Section&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BlockedDemo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;BlockedThread&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blockedThread&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BlockedThread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blockedThread&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;t1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blockedThread&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;t2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BlockedThread&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;givenVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;BlockedThread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;givenVar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;givenVar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;givenVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;@Override&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;synchronized&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;givenVar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;givenVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterruptedException&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentThread&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; changed value &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;givenVar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;--------------&lt;/span&gt;
&lt;span class="k"&gt;Output&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIMED_WAITING&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BLOCKED&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;changed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;changed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Observe the output, Thread t2 is in blocked status while t1 is executing. Without synchronized block both thread will read original value of  givenVar (try without synchronized block).&lt;/p&gt;
&lt;p&gt;Note: Here two threads are working on single object and synchronized block ensuring that only one thread will enter inside the block. This block also known as Critical section.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WAITING and TIMED_WAITING becuase of  &lt;p style="font-family: 'courier new', courier;"&gt;Thread.join()&lt;/p&gt; and  &lt;p style="font-family: 'courier new', courier;"&gt;Thread.join(givenTime)&lt;/p&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;threadX.join() --  It makes calling thread to wait for threadXto finish.&lt;/p&gt;
&lt;p&gt;threadX.join(1000) -- Calling thread will be glued to thread threadX for 1000 miliSeconds and resume after this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;ThreadJoinDemo&lt;/span&gt; {
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; []&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;InterruptedException&lt;/span&gt; {
        &lt;span class="nv"&gt;ThreadJoin&lt;/span&gt; &lt;span class="nv"&gt;threadJoin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;ThreadJoin&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;threadJoin&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;join&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;in main() method&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;class&lt;/span&gt;  &lt;span class="nv"&gt;ThreadJoin&lt;/span&gt; &lt;span class="nv"&gt;implements&lt;/span&gt; &lt;span class="nv"&gt;Runnable&lt;/span&gt;{

    @&lt;span class="nv"&gt;Override&lt;/span&gt;
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Entered run()&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
            &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

            &lt;span class="nv"&gt;try&lt;/span&gt; {
                &lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;sleep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InterruptedException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
        }
        &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Finished run()&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; WAITING due to[  &lt;p style="font-family: 'courier new', courier;"&gt;LockSupport.park()&lt;/p&gt; : &lt;a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/LockSupport.html"&gt;Javadoc&lt;/a&gt;]{style="font-family: 'courier new', courier;"}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Methods park and unpark provide efficient means of blocking and unblocking threads and avoids the the Race condition between one thread is parking another is unparking.&lt;/p&gt;
&lt;p&gt;Following is simplest program I code to demonstrate this situation to &lt;em&gt;unpark&lt;/em&gt; by other thread.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;public&lt;/span&gt; &lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;NewPark&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;public&lt;/span&gt; &lt;span class="err"&gt;static&lt;/span&gt; &lt;span class="err"&gt;void&lt;/span&gt; &lt;span class="err"&gt;main(String&lt;/span&gt; &lt;span class="cp"&gt;[]&lt;/span&gt;&lt;span class="err"&gt;args)&lt;/span&gt; &lt;span class="err"&gt;throws&lt;/span&gt; &lt;span class="err"&gt;InterruptedException&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;FIFOMutex&lt;/span&gt; &lt;span class="err"&gt;fifoMutex&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;new&lt;/span&gt; &lt;span class="err"&gt;FIFOMutex()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;Thread&lt;/span&gt; &lt;span class="err"&gt;t1&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;new&lt;/span&gt; &lt;span class="err"&gt;Thread(fifoMutex,&amp;quot;t1&amp;quot;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;t1.start()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;Thread.sleep(1000)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;System.out.println(t1.getName()&lt;/span&gt; &lt;span class="err"&gt;+&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;+&lt;/span&gt; &lt;span class="err"&gt;t1.getState())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;fifoMutex.unlock(t1)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="err"&gt;//unPaking&lt;/span&gt; &lt;span class="err"&gt;thread&lt;/span&gt; &lt;span class="err"&gt;t1&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;FIFOMutex&lt;/span&gt; &lt;span class="nt"&gt;implements&lt;/span&gt; &lt;span class="nt"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="err"&gt;public&lt;/span&gt; &lt;span class="err"&gt;void&lt;/span&gt; &lt;span class="err"&gt;lock(){&lt;/span&gt;
         &lt;span class="err"&gt;System.out.println(&amp;quot;Parking&lt;/span&gt; &lt;span class="err"&gt;Thread&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;+Thread.currentThread().getName())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="err"&gt;LockSupport.park()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="err"&gt;System.out.println(&amp;quot;After&lt;/span&gt; &lt;span class="err"&gt;unpark&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;+Thread.currentThread().getName())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;public&lt;/span&gt; &lt;span class="nt"&gt;void&lt;/span&gt; &lt;span class="nt"&gt;unlock&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;Thread&lt;/span&gt; &lt;span class="nt"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;System.out.println(&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;Unparking&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="err"&gt;LockSupport.unpark(thread)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;public&lt;/span&gt; &lt;span class="nt"&gt;void&lt;/span&gt; &lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;lock()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;---&lt;/span&gt;
&lt;span class="nt"&gt;Output&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Parking&lt;/span&gt; &lt;span class="nt"&gt;Thread&lt;/span&gt; &lt;span class="nt"&gt;t1&lt;/span&gt;
&lt;span class="nt"&gt;t1&lt;/span&gt; &lt;span class="nt"&gt;WAITING&lt;/span&gt;
&lt;span class="nt"&gt;Unparking&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;t1&lt;/span&gt;
&lt;span class="nt"&gt;After&lt;/span&gt; &lt;span class="nt"&gt;unpark&lt;/span&gt; &lt;span class="nt"&gt;t1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; &lt;p #priority&gt;&lt;/p&gt;Setting Thread Priority&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can set priority from 1 (lowest) to 10 (highest) by using thread.setPriority(number) or can use Thread.MAX_PRIORITY, Thread.MIN_PRIORITY. By default thread priority set to 5 that is Thread.NORM_PRIORITY.&lt;/p&gt;
&lt;p&gt;Setting priority doesn't guarantee to execute higher priority thread to run first. It just hint the scheduler that this thread has high priority but it's depends on scheduler how to queue the threads.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;ThreadPriority&lt;/span&gt; {
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; []&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;InterruptedException&lt;/span&gt; {
        &lt;span class="nv"&gt;PriorityThread&lt;/span&gt; &lt;span class="nv"&gt;priorityThread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;PriorityThread&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;priorityThread&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Thread1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;priorityThread&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Thread2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;priorityThread&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Thread3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t3&lt;/span&gt;.&lt;span class="nv"&gt;setPriority&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;MAX_PRIORITY&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;setPriority&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;MIN_PRIORITY&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;setPriority&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;NORM_PRIORITY&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t3&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;PriorityThread&lt;/span&gt; &lt;span class="nv"&gt;implements&lt;/span&gt; &lt;span class="nv"&gt;Runnable&lt;/span&gt; {

    @&lt;span class="nv"&gt;Override&lt;/span&gt;
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;lt; 5 ; i++){&lt;/span&gt;
            &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;currentThread&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;.&lt;span class="nv"&gt;getName&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hope threads states are clear now, Feel free to comment and share.&lt;/p&gt;</content><category term="java"></category></entry><entry><title>Understanding Permissions With umask</title><link href="//thegeekyway.com/understanding-permissions-umask/" rel="alternate"></link><published>2014-02-07T22:42:00+05:30</published><updated>2014-02-07T22:42:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2014-02-07:/understanding-permissions-umask/</id><summary type="html">&lt;p&gt;Linux was developed as a multi-user system. One big problem with multi-user systems is securing information of a particular user from other users. To do that, a concept of permissions was introduced. When you create a file, you have the right to read and write it. In this article we …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Linux was developed as a multi-user system. One big problem with multi-user systems is securing information of a particular user from other users. To do that, a concept of permissions was introduced. When you create a file, you have the right to read and write it. In this article we are going to understand how these permissions are handled.&lt;/p&gt;
&lt;p&gt;A user can read from a file, write into it or execute it (if it’s executable). These actions are represented by r for read, w for write and x for executable. Now, there are three type of actors in play in the system, first is user, second is the group the user belongs to and the third is everyone else. Hence, the permissions are in the form of three digits. The default permissions for a file are 666 (i.e. -rw-rw-rw-) and for directory they are 777 ( i.e. drwxrwxrwx). Here the x for directory means search permissions and d in the start indicated it’s a directory.&lt;/p&gt;
&lt;p&gt;Now, this is place where umask comes in picture. When you create a file or directory, the default permissions will be given, but may be you don’t want your file to be readable/writable by everyone, for that we use umask. Fire up your console and type umask. You will find 0002 on most of the systems.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;umask&lt;/span&gt;

&lt;span class="m"&gt;0002&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, leave the leading zero and you are left with three digits i.e. 002. This value is subtracted from default values (666 for files and 777 for directories) and the resulting values are set as permissions.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="" src="https://lh5.googleusercontent.com/3qlpYN3OkS4o1Lctj8oD-ClQTmQp7LYK3Z79DaioR7uH11ftV0h9kAKxhDlSkS0nk3sCumPx-L5aybUd-vIpv2GFmBAI4QSJ6HHOhpkLqqR-g1xHnXpriIiuvw"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As you can see the permission for file is 664 (666-002) and for the directory it is 775 (777-002). You can also change the umask and set permissions according to your requirements.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="" src="https://lh6.googleusercontent.com/b-vgaM38MX_gDCaLlNqjwFVW2ZKIucJXjwbYh2RH9CcHGmsjwdJpeFk1C30Dip6UUfbZrNPqwyAMODa4F3w4RQqzRExTLhHl4LT4Dg6QWblEpL34rwTF4agRSA"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can revert back to your original umask  by typing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;umask&lt;/span&gt; &lt;span class="m"&gt;002&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="file permissions"></category><category term="linux"></category><category term="Linux Filesystem"></category><category term="umask"></category></entry><entry><title>Disclaimer</title><link href="//thegeekyway.com/disclaimer/" rel="alternate"></link><published>2014-02-07T20:50:00+05:30</published><updated>2014-02-07T20:50:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-02-07:/disclaimer/</id><summary type="html">&lt;p&gt;This blog is a collaborative blog written by a group of individuals. For questions about this blog, please contact admin\@TheGeekyWay.com.&lt;/p&gt;
&lt;h2&gt;Disclaimers for www.TheGeekyWay.com:&lt;/h2&gt;
&lt;p&gt;All the information on this website is published in good faith and for general information purpose only. www.TheGeekyWay.com does not make …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is a collaborative blog written by a group of individuals. For questions about this blog, please contact admin\@TheGeekyWay.com.&lt;/p&gt;
&lt;h2&gt;Disclaimers for www.TheGeekyWay.com:&lt;/h2&gt;
&lt;p&gt;All the information on this website is published in good faith and for general information purpose only. www.TheGeekyWay.com does not make any warranties about the completeness, reliability and accuracy of this information. Any action you take upon the information you find on this website (www.TheGeekyWay.com), is strictly at your own risk. www.TheGeekyWay.com will not be liable for any losses and/or damages in connection with the use of our website.&lt;/p&gt;
&lt;p&gt;All advertising is in the form of advertisements generated by a third party ad network. Those advertisements will be identified as paid advertisements.&lt;/p&gt;
&lt;p&gt;The owner(s) of this blog is compensated to provide opinion on products, services, websites and various other topics. Even though the owner(s) of this blog receives compensation for our posts or advertisements, we always give our honest opinions, findings, beliefs, or experiences on those topics or products. The views and opinions expressed on this blog are purely the bloggers' own. Any product claim, statistic, quote or other representation about a product or service should be verified with the manufacturer, provider or party in question.&lt;/p&gt;
&lt;p&gt;This blog does not contain any content which might present a conflict of interest.&lt;/p&gt;
&lt;p&gt;From our website, you can visit other websites by following hyperlinks to such external sites. While we strive to provide only quality links to useful and ethical websites, we have no control over the content and nature of these sites. These links to other websites do not imply a recommendation for all the content found on these sites. Site owners and content may change without notice and may occur before we have the opportunity to remove a link which may have gone 'bad'.&lt;/p&gt;
&lt;p&gt;Please be also aware that when you leave our website, other sites may have different privacy policies and terms which are beyond our control. Please be sure to check the Privacy Policies of these sites as well as their "Terms of Service" before engaging in any business or uploading any information.&lt;/p&gt;
&lt;h3&gt;Consent&lt;/h3&gt;
&lt;p&gt;By using our website, you hereby consent to our disclaimer and agree to its terms.&lt;/p&gt;
&lt;h3&gt;Update&lt;/h3&gt;
&lt;p&gt;This site disclaimer was last updated on: Sunday, February 2nd, 2014&lt;br&gt;
&lt;em&gt;· Should we update, amend or make any changes to this document, those changes will be prominently posted here.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;</content></entry><entry><title>Executing your Android Application (AVD's) (Android-Part 3)</title><link href="//thegeekyway.com/executeandroid/" rel="alternate"></link><published>2014-02-05T23:31:00+05:30</published><updated>2014-02-05T23:31:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-05:/executeandroid/</id><summary type="html">&lt;p&gt;[Hello Geeks, hope you have gone through &lt;a href="http://www.thegeekyway.com/firstandroidapp/" title="prev post"&gt;this post&lt;/a&gt;and have a good understanding of Android projects before proceeding further. To test / debug our Android Application, we can use any of available methods :]{style="font-size: 14px;line-height: 1.5em"}&lt;br&gt;
1. We can use the Android Virtual Device (we'll create one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[Hello Geeks, hope you have gone through &lt;a href="http://www.thegeekyway.com/firstandroidapp/" title="prev post"&gt;this post&lt;/a&gt;and have a good understanding of Android projects before proceeding further. To test / debug our Android Application, we can use any of available methods :]{style="font-size: 14px;line-height: 1.5em"}&lt;br&gt;
1. We can use the Android Virtual Device (we'll create one shortly) to execute this application.&lt;br&gt;
2. We can directly copy the APK to the phone to test the application.&lt;br&gt;
3. We can also use an Android Emulator like Bluestacks to test our application. Benefit of using Bluestacks is that it starts much faster than AVDs.&lt;/p&gt;
&lt;p&gt;1. We'll discuss first option in detail. The second option require a simple setup. On most devices running Android 3.2 or older, you can find the option under Settings &gt; Applications &gt; Development. On Android 4.0 and newer, it's in Settings &gt; Developer options. (&lt;a href="http://developer.android.com/tools/device.html" title="Developers Google"&gt;Detailed Explanation here&lt;/a&gt;).The third option required downloading and installing &lt;strong&gt;&lt;a href="http://www.bluestacks.com/" title="Bluestacks"&gt;Bluestacks emulator&lt;/a&gt;.&lt;/strong&gt; Bluestacks is a free android &lt;a href="http://en.wikipedia.org/wiki/Emulator" title="meaning of emulator"&gt;emulator&lt;/a&gt; available for both Windows and Mac platform. It can be used to run most of the android applications including Whatsapp, games etc.&lt;/p&gt;
&lt;p&gt;To create new &lt;strong&gt;AVD&lt;/strong&gt; &lt;strong&gt;(Android Virtual Device)&lt;/strong&gt; follow these steps &lt;strong&gt;&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Goto Windows Menu -&gt; Android Virtual Device Manager.&lt;/li&gt;
&lt;li&gt;Click 'New' to create a new Device.&lt;/li&gt;
&lt;li&gt;Fill in mandatory fields like AVD Name, Device (preferrably Nexus 4, 4.7"as it is a portrait device), Target API 18.&lt;/li&gt;
&lt;li&gt;Fill in Internal Storage and SD Card size as 200 MB (Enough for applications). Press Ok to create that device. Now close the AVD window.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now we will be able to use this device for executing the Android Applications we create. But we may also opt for Mobile Phone / Bluestacks method as they are very fast. The AVDs take a long time to start, approx 2 minutes on core i7 4th generation processor to over 5-7 minutes on old systems. If you still prefer executing application using AVDs then you must start AVD when you start the Eclipse IDE, so that the AVD loads while you code your application.&lt;/p&gt;
&lt;p&gt;To execute the first Android Project Goto "Run" from Menu Bar and select first option, or you could simply use Ctrl+ F11. Choose your AVD, which would be the one just created, or your phone(if attached) / bluestacks (if installed).Preview of this application (Executed on Bluestacks) is shows here&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/15.jpg"&gt;&lt;img alt="1" src="//thegeekyway.com/uploads/images/2014/02/15-1024x604.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;A similar application with two labels and buttons executed on Android 4.0 Virtual Device is as shown below : &lt;a href="//thegeekyway.com/uploads/images/2014/02/18.jpg"&gt;&lt;img alt="1" src="//thegeekyway.com/uploads/images/2014/02/18.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This was a very short tutorial to setup AVD and execute your first android application.In the next Article, we will create simple application by creating its GUI in layout.xml file and obtaining IDs in the JAVA code. Till then stay tuned &amp;amp; comment if you have any suggestions/doubts.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/secondapp1/" title="link"&gt; &lt;p style="font-size: xx-large"&gt;Link to next tutorial&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category></entry><entry><title>Java Multithreading</title><link href="//thegeekyway.com/java-multithreading/" rel="alternate"></link><published>2014-02-05T23:31:00+05:30</published><updated>2014-02-05T23:31:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2014-02-05:/java-multithreading/</id><summary type="html">&lt;p&gt;*Threads. * Thread is also known as lightweight process. Java multithreading allows to process multiple task simultaneously with less overhead than process. Mostly use to monitor session, background synchronization etc.&lt;/p&gt;
&lt;h5&gt;Content&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#processes"&gt;Process vs Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#firstthread"&gt;Creating first thread program&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#runnableVsThread"&gt;Implementing Runnable vs extending Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#lifecycle"&gt;Thread State and Life cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#daemonthread"&gt;Daemon Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p #processes&gt;&lt;/p&gt;&lt;strong&gt;Processes …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;*Threads. * Thread is also known as lightweight process. Java multithreading allows to process multiple task simultaneously with less overhead than process. Mostly use to monitor session, background synchronization etc.&lt;/p&gt;
&lt;h5&gt;Content&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#processes"&gt;Process vs Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#firstthread"&gt;Creating first thread program&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#runnableVsThread"&gt;Implementing Runnable vs extending Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#lifecycle"&gt;Thread State and Life cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#daemonthread"&gt;Daemon Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p #processes&gt;&lt;/p&gt;&lt;strong&gt;Processes : &lt;/strong&gt;These are often application or programs running in their own memory space and runtime resources. In simple term when you run new program with main() method . It is basically a new process and have their own private memory, and resources.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thread:&lt;/strong&gt; The path of execution of a process is known as &lt;em&gt;Thread.  &lt;/em&gt;A process can have more than one thread. In a simple program with &lt;em&gt;main()&lt;/em&gt; method.This program contains a user defined thread with&lt;em&gt; main()&lt;/em&gt; method. While with user threads there are &lt;em&gt;system&lt;/em&gt; threads like memory management and signal handling.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Threads are also known as &lt;em&gt;lightweight processes.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;A process must contain at least one Thread.&lt;/li&gt;
&lt;li&gt;All threads inside a process can communicate  each other via shared memory space (Shared variable)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;p #firstthread&gt;&lt;/p&gt;Creating first Java Thread&lt;/strong&gt; There are two way to create java threads.&lt;/p&gt;
&lt;ul&gt;
-   In both cases we need to override run() method and this method is part of a thread. A thread start from start from starting of run() and ends when run() ends.
-   To start thread, Thread object needs to be start using *threadObj.start()* which invoke the thread and execute the run method.

&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Implementing &lt;em&gt;Runnable interface &lt;/em&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;ThreadExtendingRunnable&lt;/span&gt; {
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; []&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
        &lt;span class="nv"&gt;MyThread1&lt;/span&gt; &lt;span class="nv"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;MyThread1&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;thread1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;MyThread1&lt;/span&gt; &lt;span class="nv"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;MyThread1&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;thread2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;obj1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;obj2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;; // you can pass the same object. It allows you to associate single object to multiple threads&lt;/span&gt;
        &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;MyThread1&lt;/span&gt; &lt;span class="nv"&gt;implements&lt;/span&gt; &lt;span class="nv"&gt;Runnable&lt;/span&gt; {
    &lt;span class="nv"&gt;String&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

    &lt;span class="nv"&gt;MyThread1&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
       &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    @&lt;span class="nv"&gt;Override&lt;/span&gt;
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i&amp;lt;=5; i++){&lt;/span&gt;
            &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.   &lt;p style="line-height: 1.5em;"&gt;Extending &lt;/p&gt;*Thread class *&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;MyThreadExtendingThread&lt;/span&gt; {
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; []&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
        &lt;span class="nv"&gt;MyThread2&lt;/span&gt; &lt;span class="nv"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;MyThread2&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;thread1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;MyThread2&lt;/span&gt; &lt;span class="nv"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;MyThread2&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;thread2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;MyThread2&lt;/span&gt; &lt;span class="nv"&gt;extends&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;{
    &lt;span class="nv"&gt;String&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

    &lt;span class="nv"&gt;MyThread2&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
        &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;{
       &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i&amp;lt;=5; i++){&lt;/span&gt;
           &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
       }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="text-decoration: underline;"&gt; &lt;p #runnableVsThread&gt;&lt;/p&gt; Implementing &lt;em&gt;Runnable&lt;/em&gt; vs Extending &lt;em&gt;Thread&lt;/em&gt; &lt;/p&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p style="line-height: 24px;"&gt;Implementing Runnable allows you to extends another class while, if you extend Thread class you will not able to extends any other class.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Extending thread, each thread needs to associate with unique object.&lt;/li&gt;
&lt;li&gt;Implementing Runnable allows you to associate single object to as many threads you want.&lt;/li&gt;
&lt;li&gt;Sharing same object to multiple thread also avoids unnecessary object creation and saves memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;p #lifecycle&gt;&lt;/p&gt;Thread State and Life Cycle&lt;/strong&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/state-machine-example-java-6-thread-states.png"&gt;&lt;img alt="state-machine-example-java-6-thread-states" src="//thegeekyway.com/uploads/images/2014/02/state-machine-example-java-6-thread-states.png"&gt;&lt;/a&gt; Source: &lt;a href="http://www.uml-diagrams.org/examples/java-6-thread-state-machine-diagram-example.html"&gt;uml-diagram.org&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A thread can be one of the following state (java 1.5+)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;NEW&lt;/p&gt;&lt;/strong&gt; : A thread has not started yet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;RUNNABLE&lt;/p&gt;&lt;/strong&gt; : Thread is running state but it can be in state of waiting.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;BLOCKED&lt;/p&gt;&lt;/strong&gt; :  Thread is waiting to acquire monitor lock to enter into a synchronized block/method after calling Object.wait()&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;WAITING&lt;/p&gt;&lt;/strong&gt; : A thread is in waiting state due to calling one of the following methods&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;Object.wait()&lt;/p&gt;&lt;/strong&gt; : It causes current thread to wait until it been notified by method &lt;em&gt;notify()&lt;/em&gt; or &lt;em&gt;notifyAll().&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;Object.join()&lt;/p&gt;&lt;/strong&gt; : Waits for current thread to die.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;LockSupport.park&lt;/p&gt;&lt;/strong&gt; : Disables the current thread for thread scheduling purposes unless the permit is available.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;TIMED_WAITING&lt;/p&gt;&lt;/strong&gt; : Current thread is waits for another thread for specified time to perform the aciton.&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;Thread.sleep (long timeInMilliSecond)&lt;/p&gt;&lt;/strong&gt; : Makes current thread to cease the execution for specified time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;Object.wait (long timeInMilliSecond) &lt;/p&gt;&lt;/strong&gt;:  Causes current thread to wait for specified time until time elapsed or get notified by notify() or notifyAll().&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;Thread.join (long millis)&lt;/p&gt;&lt;/strong&gt; : Current thread waits for specified time to die the thread.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-family: 'courier new', courier;"&gt;LockSupport.parkNanos (long nanoSeconds)&lt;/p&gt;&lt;/strong&gt; : Disables the current thread for thread scheduling purposes, for up to the specified waiting time, unless the permit is available.&lt;/li&gt;
&lt;li&gt;&lt;p style="font-family: 'courier new', courier;"&gt;&lt;strong&gt;LockSupport.parkUntil ()&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p style="font-family: 'courier new', courier;"&gt;TERMINATED&lt;/p&gt; : When thread completed its execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;\&amp;lt;Post in progress to explain thread states&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;p #daemonthread&gt;&lt;/p&gt;Daemon Thread&lt;/strong&gt; Daemon threads are threads to which JVM don't watch to completed or not. So how JVM works, As soon as all user threads finished processing , JVM terminated itself. JVM doesn't wait to finish daemon threads. Garbage collector and other housekeeping threads are inbuild daemon threads.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User created threads are non-daemon by default, since it's created by main() thread which is by default a non-daemon and newly created thread inherit daemon property from the thread it was created.&lt;/li&gt;
&lt;li&gt;To set a user created thread as daemon, you need to set by  &lt;p style="font-family: 'courier new', courier;"&gt;&lt;em&gt;Thread.setDaemon(true)&lt;/em&gt;&lt;/p&gt; (Make sure you set a daemon before calling&lt;em&gt; &lt;p style="font-family: 'courier new', courier;"&gt; start()&lt;/p&gt;&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p style="font-size: x-small;"&gt;Example: Daemon Thread&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;DaemonTest&lt;/span&gt; {
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; []&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
        &lt;span class="nv"&gt;DaemonObject&lt;/span&gt; &lt;span class="nv"&gt;deamonObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;DaemonObject&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;daemonThread&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;DaemonObject&lt;/span&gt; &lt;span class="nv"&gt;notDaemonObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;DaemonObject&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;notDaemonThread&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;deamonObj&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Thread&lt;/span&gt; &lt;span class="nv"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notDaemonObj&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;setDaemon&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t1&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t2&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}

&lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;DaemonObject&lt;/span&gt; &lt;span class="nv"&gt;implements&lt;/span&gt; &lt;span class="nv"&gt;Runnable&lt;/span&gt;{
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;sleepTime&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;String&lt;/span&gt; &lt;span class="nv"&gt;threadname&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;DaemonObject&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;sleepTime&lt;/span&gt;, &lt;span class="nv"&gt;String&lt;/span&gt; &lt;span class="nv"&gt;threadname&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
       &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;sleepTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;sleepTime&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
       &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;threadname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;threadname&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    @&lt;span class="nv"&gt;Override&lt;/span&gt;
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {

       &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;lt; 5; i++){&lt;/span&gt;
           &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;threadname&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
           &lt;span class="nv"&gt;try&lt;/span&gt; {
               &lt;span class="nv"&gt;Thread&lt;/span&gt;.&lt;span class="nv"&gt;sleep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sleepTime&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
           } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InterruptedException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
               &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
           }
       }

    }
}
&lt;span class="o"&gt;----------&lt;/span&gt;
&lt;span class="nv"&gt;Output&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;like&lt;/span&gt;: 
&lt;span class="o"&gt;----------&lt;/span&gt;
&lt;span class="nv"&gt;daemonThread&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;notDaemonThread&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;notDaemonThread&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;daemonThread&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;notDaemonThread&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="nv"&gt;notDaemonThread&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="nv"&gt;daemonThread&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="nv"&gt;notDaemonThread&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="nv"&gt;Process&lt;/span&gt; &lt;span class="nv"&gt;finished&lt;/span&gt; &lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="k"&gt;exit&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice, thread marked as daemon thread didn't completed its execution, because JVM only waited for non-daemon thread and as soon as it completed, JVM also terminated.&lt;/p&gt;</content><category term="java"></category><category term="open source"></category></entry><entry><title>Anatomy of First Android Application (Android-Part 2)</title><link href="//thegeekyway.com/firstandroidapp/" rel="alternate"></link><published>2014-02-03T22:22:00+05:30</published><updated>2014-02-03T22:22:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-03:/firstandroidapp/</id><summary type="html">&lt;p&gt;Hello Geeks, hope you all have read the &lt;a href="http://www.thegeekyway.com/setting-up-eclipse-ide-for-android-application-development/" title="Setup Android IDE"&gt;previous post&lt;/a&gt; for setting up IDE, here we explain what each folder of a newly created Android Application means. As soon as you follow the steps described in previous post, a simple android application with the application name and a predefined string …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello Geeks, hope you all have read the &lt;a href="http://www.thegeekyway.com/setting-up-eclipse-ide-for-android-application-development/" title="Setup Android IDE"&gt;previous post&lt;/a&gt; for setting up IDE, here we explain what each folder of a newly created Android Application means. As soon as you follow the steps described in previous post, a simple android application with the application name and a predefined string is created.The whole picture looks something like this (click on res/layout/activity_main.xml):&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/17.jpg"&gt;&lt;img alt="New Proj" src="//thegeekyway.com/uploads/images/2014/02/17.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The basic structure of an android application looks like this :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/16.jpg"&gt;&lt;img alt="package overview" src="//thegeekyway.com/uploads/images/2014/02/16.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The highlighted part in the above image shows expanded form of a Android Project. On the top left of tree, we have the name of the Application itself. Under that we have the following folders :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;src :&lt;/strong&gt; SRC means SOURCE. Source folder stores the source of your application. This folder stores name of the package and then the source file(s). Here we have MainActivity.java as the main source file, which opens on Right side.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gen&lt;/strong&gt; : Gen means Generated Java Files. The folder stores generated Java files like R.java . These are AUTO GENERATED JAVA FILES which should not be edited.If there is any error in project (xml/source), the file is not generated. So we must remove  The files like R.java are used to map layout files from &lt;strong&gt;Layout file (XML File) to MainActivity file (JAVA File).&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Android 4.3 and Android Private Libraries :&lt;/strong&gt; These are source files given by google, normally we do not require to do anything from these files. These are just imported, as required.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;assets :&lt;/strong&gt; This folder stores the text files/HTMLs or databases related to your application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bin :&lt;/strong&gt; As clear from the name, bin folder stores the binary output of your application i.e. the &lt;strong&gt;APK file&lt;/strong&gt; which is sufficient to execute independently on your android device.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lib :&lt;/strong&gt; This folder contains one file by default (android support file). We can add any JAR files in this folder which may be used by our application. People who have worked with JAVA must be knowing how to include external jar files in application (by pasting in specific directories in C:/program files/java). This is just similar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;res :&lt;/strong&gt; res folder contains all the resources in your application. There are accessible in your application using its ID which is maintained in &lt;strong&gt;R.java (auto-generated file).&lt;/strong&gt; Most of the people are often confused between res and assets, but here's the difference : &lt;strong&gt;Files inside assets folder are accessible in your java file as if it exists in the same folder, No IDs are created for asset files inside R.java. Whereas files in res folder are accessible using their IDs defined in R.java.&lt;/strong&gt; Here is the explanation of each subfolder of &lt;strong&gt;res.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first five subfolders in res (&lt;strong&gt;drawable&lt;/strong&gt; types) consists of images of different sizes which may be used in your android application. Here &lt;strong&gt;hdpi&lt;/strong&gt; means &lt;strong&gt;High Density Picture, mdpi&lt;/strong&gt; means &lt;strong&gt;Medium Density Picture&lt;/strong&gt; and so on&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The next folder&lt;strong&gt;(layout)&lt;/strong&gt; is the most important which consists of the layout of our application. By default, it consists of one file (activity_main.xml). As we create more activities, more files are added here as per our specification.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;menu&lt;/strong&gt; folder can be used to create a custom menu inside an Android Application. It is not discussed here in detail.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;values&lt;/strong&gt; folder contains many XML files which define constant objects for your Android Application. Our main concentration remains on &lt;strong&gt;strings.XML&lt;/strong&gt; file which stores constant strings. These strings are accessed in Java application using their ID (eg. R.string.app_name) where &lt;strong&gt;string&lt;/strong&gt; is the &lt;strong&gt;strings.xml&lt;/strong&gt; file and &lt;strong&gt;app_name&lt;/strong&gt; is the constant string &lt;strong&gt;defined in that xml file&lt;/strong&gt; (app_name defines the name of android app).&lt;/p&gt;
&lt;p&gt;The other versions of values folder are used for different APIs versions. Other than this we have the AndroidManifest.xml file which defined basic information about the Android Application.&lt;/p&gt;
&lt;p&gt;Eclipse allows two views of an XML file which can be toggled by the TAB given below the XML file as shown here :&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/14.jpg"&gt;&lt;img alt="AndroidManifest.XML" src="//thegeekyway.com/uploads/images/2014/02/14.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;The last tab &lt;strong&gt;(AndroidManifest.xml)&lt;/strong&gt; represents the XML view of the file whereas the first four tabs &lt;strong&gt;(Manifest, Application,Permissions and Instrumentation)&lt;/strong&gt; represent the GUI view of the file. This is the advantage of using &lt;strong&gt;Eclipse IDE,&lt;/strong&gt; i.e. for adding some new information to manifest, when we don't know the syntax, we can use the first four tabs so that we enter the information using GUI and Eclipse automatically adds the same information to the XML file.&lt;/p&gt;
&lt;p&gt;The rest of the files describe basic properties of the file and do not require immediate discussion. So we defer this to future posts, they would be discussed as or when required. The next article describes how to create an Android Virtual Machine on your system to execute this created Application.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/executeandroid/" title="link"&gt; &lt;p style="font-size: xx-large"&gt;Link to next tutorial&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category></entry><entry><title>SR Flip-Flop: Description</title><link href="//thegeekyway.com/sr-flip-flop-2/" rel="alternate"></link><published>2014-02-03T21:20:00+05:30</published><updated>2014-02-03T21:20:00+05:30</updated><author><name>Jeffrey_Samuel</name></author><id>tag:thegeekyway.com,2014-02-03:/sr-flip-flop-2/</id><summary type="html">&lt;p&gt;In the &lt;a href="http://www.thegeekyway.com/race-around-effect/" title="Race around Effect"&gt;previous post&lt;/a&gt; we concentrated on the major advantage of Flip-Flop over Latches. In this Blog we will be concentrating more on the most basic type of Flip-Flops which is SR Flip-Flop. Do note that there are counterparts for every Flip-Flop in latch as well.&lt;/p&gt;
&lt;p&gt;As we all know …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="http://www.thegeekyway.com/race-around-effect/" title="Race around Effect"&gt;previous post&lt;/a&gt; we concentrated on the major advantage of Flip-Flop over Latches. In this Blog we will be concentrating more on the most basic type of Flip-Flops which is SR Flip-Flop. Do note that there are counterparts for every Flip-Flop in latch as well.&lt;/p&gt;
&lt;p&gt;As we all know the major types of Flip-FLop include&lt;/p&gt;
&lt;h2&gt;Types of Flip-Flop:&lt;/h2&gt;
&lt;p&gt;The major types of Flip-Flop are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SR Flip-Flop&lt;/li&gt;
&lt;li&gt;D- Flip-Flop&lt;/li&gt;
&lt;li&gt;JK Flip-Flop&lt;/li&gt;
&lt;li&gt;T Flip-Flop&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;SR Flip-Flop:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;This is the most basic of all the types of Flip-Flop. It is also known as Set - Reset Flip Flop. It has two excitation states. One state is the set state and the other is Reset state. In the set state the output of the Flip-Flop is high. In reset state the output is Low.&lt;/p&gt;
&lt;h3&gt;State Diagram:&lt;/h3&gt;
&lt;p&gt;The state diagram of an SR Flip-Flop is just a toggle between two states.The common states can be explained in the following points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the Set is high the output is High irrespective of the previous input&lt;/li&gt;
&lt;li&gt;When Reset is high the output is Low irrespective of the previous input&lt;/li&gt;
&lt;li&gt;If the SR Flip-Flop is off (i.e.,) S=0 and R=0 We have no change in the output of the SR Flip-flop.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/SR-Flip-Flop-1.jpg" title="State diagram of SR Flip-Flop"&gt;&lt;img alt="State diagram of SR Flip-Flop" src="//thegeekyway.com/uploads/images/2014/02/SR-Flip-Flop-1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Truth table:&lt;/h3&gt;
&lt;p&gt;Knowing the states we can draw the truth table as shown in the table below. The truth table gives us&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;S&lt;/strong&gt;   &lt;strong&gt;R&lt;/strong&gt;   &lt;strong&gt;Next State&lt;/strong&gt;
     0       0           0
     0       1           0
     1       0           1
     1       1           X&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Excitation table:&lt;/h3&gt;
&lt;p&gt;The excitation states can be clearly seen from the table below. The excitation state gives us the various output possible for an SR Flip-Flop When the past output and the current values of SR is known. When we know the excitation table of an SR Flip-Flop, we can use it to implement other flip flops like D, T and JK.&lt;/p&gt;
&lt;p&gt;+:-----------:+:-----------:+:-----------:+:-----------:+-------------+
| ### Present | ### S {#s s | ### R       | ### Next St | ### Comment |
|  State      | tyle="text- |             | ate         |             |
|             | align: cent |             |             |             |
|             | er;"}       |             |             |             |
+-------------+-------------+-------------+-------------+-------------+
| 0           | 0           | 0           | 0           | Flip Flop   |
|             |             |             |             | is OFF      |
+-------------+-------------+-------------+-------------+-------------+
| 0           | 0           | 1           | 0           | Reset mode  |
+-------------+-------------+-------------+-------------+-------------+
| 0           | 1           | 0           | 1           | Set mode    |
+-------------+-------------+-------------+-------------+-------------+
| 0           | 1           | 1           | X           | Undefined   |
+-------------+-------------+-------------+-------------+-------------+
| 1           | 0           | 0           | 1           | Flip Flop   |
|             |             |             |             | is OFF      |
+-------------+-------------+-------------+-------------+-------------+
| 1           | 0           | 1           | 0           | Reset Mode  |
+-------------+-------------+-------------+-------------+-------------+
| 1           | 1           | 0           | 1           | Set Mode    |
+-------------+-------------+-------------+-------------+-------------+
| 1           | 1           | 1           | X           | Undefined   |
+-------------+-------------+-------------+-------------+-------------+&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;LIMITATIONS OF SR Flip-Flop:&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;We find that SR flip flop has one undefined cycle in its operation. This is one of the disadvantages of SR flip flop. Mostly while designing itself this condition is avoided. This defect is rectified in the JK flip-flop.&lt;/p&gt;</content><category term="Digital Electronics"></category><category term="Sr Flip-Flop"></category></entry><entry><title>Setting Up Eclipse IDE for Android Application Development (Android-Part 1)</title><link href="//thegeekyway.com/setting-up-eclipse-ide-for-android-application-development/" rel="alternate"></link><published>2014-02-02T22:33:00+05:30</published><updated>2014-02-02T22:33:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-02-02:/setting-up-eclipse-ide-for-android-application-development/</id><summary type="html">&lt;p&gt;Here is a complete tutorial to setup Eclipse IDE. Hope you have seen the &lt;a href="http://thegeekyway.com/beginandroid" title="Creating your first Android Application"&gt;first tutorial&lt;/a&gt; and have installed the required tools (ADT + Eclipse &amp;amp; JDK).After installing JDK, extract the Android SDK to a folder and you will get something like this.&lt;/p&gt;
&lt;p&gt;Few screenshots related to Eclipse may vary due …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is a complete tutorial to setup Eclipse IDE. Hope you have seen the &lt;a href="http://thegeekyway.com/beginandroid" title="Creating your first Android Application"&gt;first tutorial&lt;/a&gt; and have installed the required tools (ADT + Eclipse &amp;amp; JDK).After installing JDK, extract the Android SDK to a folder and you will get something like this.&lt;/p&gt;
&lt;p&gt;Few screenshots related to Eclipse may vary due to different version, but the overall meaning remains same.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/1.jpg"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2014/02/1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Please note that Eclipse is just an Integrated Development Environment&lt;/strong&gt; which supports a wide variety of development ranging from C/C++/Java/Android to Electronics. Our Eclispe is a one, tailored for Android. The Eclipse and Android SDK should be kept in the same folder as shown above so that eclipse IDE is able to detect the SDK and use it for further development. If you attempt to change the location of Eclipse or SDK, or rename the SDK, you get the following error.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/11.jpg"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2014/02/11.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So, now open eclipse folder and there you will find a file called &lt;strong&gt;eclipse.exe&lt;/strong&gt;. Open that file, a window appears which shows option to select the &lt;strong&gt;Workspace.&lt;/strong&gt; Workspace is a path where your entire project including source, APK and all other files are stored. After selecting preferences, something like this will appear.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/2.jpg"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2014/02/2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;To start creating a new project, either use the menubar (Flile -&gt; New) or use keyboard shortcut (Alt+Shift+N). From the drop down menu, select &lt;strong&gt;Android Application Project.&lt;/strong&gt; A new Dialog box appears. Fill in the basic application details to continue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Application name :  &lt;/strong&gt;It is the name of the application as visible in your android phone&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Project name :&lt;/strong&gt; It is the name of the project which will appear in the &lt;a href="http://www.ibm.com/developerworks/library/wa-mobappdev1/Figure17.jpg" title="Example of tree structure"&gt;tree structure&lt;/a&gt; in left panel of Eclipse&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Package name :&lt;/strong&gt; People familiar with Java must be knowing the concept of a package (or a namespace in C++/C#). It is a unique identifier for your application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The best thing about IDEs is the way they explain each and every information. For eg, when we point on &lt;strong&gt;Package name,&lt;/strong&gt; it shows the following text information as a help text explaining everything about the field.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/21.jpg"&gt;&lt;img alt="Eclipse new Project" src="//thegeekyway.com/uploads/images/2014/02/21.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The other four fields are self explanatory, so are not explained here. Press &lt;strong&gt;Next &lt;/strong&gt; to continue. You get the following dialog box.&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/22.jpg"&gt;&lt;img alt="second screen" src="//thegeekyway.com/uploads/images/2014/02/22.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;The options are explained here  :-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create custom launcher icon : &lt;/strong&gt; This allows to choose a custom Application Icon for your application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create Activity : &lt;/strong&gt;Activity in an android application is somewhat similar to a JFrame/Frame in Java. An activity simply represents a screen in Android. &lt;strong&gt;Activity&lt;/strong&gt; is also a class in Android. You must check this option so that eclipse creates a dummy activity (with required methods)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;p style="font-size: small"&gt;Mark this project as library : &lt;/p&gt;&lt;/strong&gt;Check this option if you want this project to act as library (or source) for another project (not to be given much stress now).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create Project in Workspace :&lt;/strong&gt; This option allows to create all the files of the project inside the workspace which was selected when Eclipse started. This should be &lt;strong&gt;checked&lt;/strong&gt; to store the files at that place and &lt;strong&gt;unchecked&lt;/strong&gt; if you want to store the files anywhere else.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Add project to working sets : &lt;/strong&gt;This option is also related to linking multiple projects so should not be given much stress now.Click &lt;strong&gt;Next&lt;/strong&gt; to continue. Now we get the following screen :&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
   &lt;a href="//thegeekyway.com/uploads/images/2014/02/23.jpg"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2014/02/23.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can configure the icon for you application in this window. Try changing different colors, text,clipart etc and it would be clear to you. Most of the things are self explanatory and are not discussed here. Click next to continue. You will get the following screen.&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/12.jpg"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2014/02/12.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Now here we select the type of activity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Blank Activity :&lt;/strong&gt; It is an activity where you get empty implementation of required methods and status bar of android phone is visible. So it is not a fullscreen activity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full Screen Activity :&lt;/strong&gt; Usually games utilize complete screen and come under this category. Select this option so that this occupies the complete screen (including status bar).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Master / Detailed Flow : &lt;/strong&gt;This allows users to create activity in such a way so that it is able to display an object as well as information related to each object. Moreover, it created two activities, i.e.  &lt;strong&gt;master&lt;/strong&gt; and &lt;strong&gt;detailed&lt;/strong&gt; fragment respectively.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click Next to continue. We get the following screen&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/1.png"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2014/02/1.png"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Activity Name :&lt;/strong&gt; This is the name of new blank activity which starts the application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Layout Name :&lt;/strong&gt; This specifies the layout for this activity.  &lt;strong&gt;Please note that layout of an android activity is defined in XML inside layout folder.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p style="font-size: small"&gt;&lt;strong&gt;Navigation Type : &lt;/strong&gt; Specifies the type of navigation the user will use to navigate while using the app. See options for more information which are self explanatory. Let it be none for now.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Click Finish to start with the actual process.The following window opens in Eclipse.&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/02/13.jpg"&gt;&lt;img alt="" src="//thegeekyway.com/uploads/images/2014/02/13-1024x608.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;So now we have started with a simple Android Application. On the left hand side we have a list of folders which contain libraries and files related to our application. On the right hand side, we have the currently opened file. By default it shoes the main JAVA file of your application. Before starting coding, setting layouts etc. we require  a complete understanding of all the folder on the left side. So in our next post tomorrow, we'll completely describe about each folder about what they mean and how to use them.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/firstandroidapp/" title="link"&gt; &lt;p style="font-size: xx-large"&gt;Link to next Tutorial&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category><category term="development"></category><category term="Tutorial"></category></entry><entry><title>Conditional Statements : Switch Case</title><link href="//thegeekyway.com/conditional-statements-switch-case/" rel="alternate"></link><published>2014-02-01T21:02:00+05:30</published><updated>2014-02-01T21:02:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-02-01:/conditional-statements-switch-case/</id><summary type="html">&lt;p&gt;In the previous tutorial, we've discussed about &lt;a href="http://www.thegeekyway.com/conditional-statements-if-else/" title="Understanding Conditional Statements: if else"&gt;if - else and nested if - else statements&lt;/a&gt; and how we can use them to test certain conditions and execute a block of code depending on whether the condition becomes true or false. In this tutorial, we'll be covering another Conditional Statement used in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the previous tutorial, we've discussed about &lt;a href="http://www.thegeekyway.com/conditional-statements-if-else/" title="Understanding Conditional Statements: if else"&gt;if - else and nested if - else statements&lt;/a&gt; and how we can use them to test certain conditions and execute a block of code depending on whether the condition becomes true or false. In this tutorial, we'll be covering another Conditional Statement used in C known as Switch Case. The major difference between choosing to use if-else and switch is, when we have to compare a single variable to different set of values, then Switch is preferred, and if-else if preferred otherwise.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/SwitchCase1.png" title="Conditional Statements : Switch Case C language"&gt;&lt;img alt="Conditional Statements : Switch Case C language" src="//thegeekyway.com/uploads/images/2014/02/SwitchCase1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The basic semantics of a switch block statement is as follows :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;switch&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
{
    &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;:
    .
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;:
    .
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;:
    .
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    .
    .
    .
    .
    &lt;span class="nv"&gt;default&lt;/span&gt;:
    .
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here variable-name corresponds to the variable you want to compare with a set of values and inside the curly braces we have defined cases such that if value of variable is 1 then the statement 1 and statement 2 would execute, for variable having value 2, statement 3 and 4 would execute and so on. If none of the cases are true, then statement n corresponding to default would execute.&lt;/p&gt;
&lt;p&gt;Let us take an example and understand how it's done. Let us consider we need to just print what number it is if the number is less than or equal to 5 else print number is not 1, 2, 3, 4 or 5. We'll consider that user has input a number which is stored in variable named num. This can be done through if - else statements as we studied earlier like this :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 1 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 2 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 3 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 4 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 5 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
   &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is not 1, 2, 3, 4 or 5 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now in the above case, since we need to compare just one variable with a set of values, this can be done easily through switch case as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;switch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;
{
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 1 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 2 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 3 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 4 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 5 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;default&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is not 1, 2, 3, 4 or 5 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice here that I have mentioned break statement after each case , this is to terminate the the case above it if it's executed. Let's see if we didn't include break what would happen, so consider this code snippet.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Enter a number &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;switch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;
  {
     &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 1 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 2 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 3 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 4 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is 5 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="nv"&gt;default&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number is not 1, 2, 3, 4 or 5 n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, if we run this and input 2 is given then output would be as shown below&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/02/Switch_Case.png" title="Switch case in C language Output Screen"&gt;&lt;img alt="Switch case in C language Output Screen" src="//thegeekyway.com/uploads/images/2014/02/Switch_Case.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;See, we not only got Number is 2 statement printed, but got all statements printed after that case, in a sequential manner, this is because in a switch condition we need to have conditional flow of statement using break statement.&lt;/p&gt;
&lt;p&gt;Now, if you include break after each case but doesn't do it with default case, it would run fine too, this is because if the default case is true, then after executing set of statements with that case, the control would automatically be out of the switch block, so technically we do not need break after default case.&lt;/p&gt;
&lt;p&gt;Now let's see how to match a character type variable. Consider a character (char) type variable named character_variable , and if we need to use switch, it can be done in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;switch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;character_variable&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;
{
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Case a executed n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Case b executed n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;c&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Case c executed n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;default&lt;/span&gt; : &lt;span class="nv"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;This is default case n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, notice that we have enclosed the character value between single quotes ( '   ' ).&lt;/p&gt;
&lt;p&gt;Like wise, you can design your switch case for various purpose as/when you need to compare a single variable value with a set of values.&lt;/p&gt;
&lt;p&gt;In next tutorials we'll know about the Storage Classes in C. If you have any problem with anything till now, feel free to let us know through comments section below, we'll be glad to help you.&lt;/p&gt;
&lt;p&gt;Keep Coding !&lt;/p&gt;</content><category term="C language"></category><category term="conditional"></category><category term="switch"></category></entry><entry><title>Variables in PYTHON</title><link href="//thegeekyway.com/variables-in-python/" rel="alternate"></link><published>2014-01-31T21:07:00+05:30</published><updated>2014-01-31T21:07:00+05:30</updated><author><name>Simerdeep Singh</name></author><id>tag:thegeekyway.com,2014-01-31:/variables-in-python/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/variables.jpg" title="Variables in python"&gt;&lt;img alt="Variables in Python" src="//thegeekyway.com/uploads/images/2014/01/variables.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Variables&lt;/h2&gt;
&lt;p&gt;Variables are used for storing data in the form of integer,char ,boolean etc.They act as a storage medium for us . Based on the datatype of variable  interpreter allocates the memory required by that datatype. There are 4 types of variables.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;complex&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Values are assigned …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/variables.jpg" title="Variables in python"&gt;&lt;img alt="Variables in Python" src="//thegeekyway.com/uploads/images/2014/01/variables.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Variables&lt;/h2&gt;
&lt;p&gt;Variables are used for storing data in the form of integer,char ,boolean etc.They act as a storage medium for us . Based on the datatype of variable  interpreter allocates the memory required by that datatype. There are 4 types of variables.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;complex&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Values are assigned to variables by using (=) sign..There is no need to write keyword when initializing a variable as interpreter itself asisign it according to the value given .&lt;/p&gt;
&lt;h2&gt;Integer&lt;/h2&gt;
&lt;p&gt;Integer is used for storing integer data . The keyword for integer variables is int .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The range of integer is (2\^32) and get promoted to long  when  a number greater than (2\^32)&lt;/p&gt;
&lt;h2&gt;String&lt;/h2&gt;
&lt;p&gt;Strings are used for storing character literals .When we want to save some names of person or for any character related data we use strings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;simer&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can apply various operations on strings . To print letters of string we can give the index of the letter and print it .Index of a string always start from 0.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;simer&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-55.png"&gt;&lt;img alt="Screenshot-5" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-55.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;0 is the index of the 1 letter of the string ,similarly 1 idex will be of 2 letter and so on.&lt;/p&gt;
&lt;p&gt;We can also give the range of letters which we want to print of the given string .These can be given as :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;simer&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;   &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;starting&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="k"&gt;first&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-6.png"&gt;&lt;img alt="Screenshot-6" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Float&lt;/h2&gt;
&lt;p&gt;float variables are used to store floating point values . They consist of two parts mantissa and exponent.&lt;/p&gt;
&lt;p&gt;eg 2*10^-1  ^&lt;/p&gt;
&lt;p&gt;Here 2 is the mantissa , -1 is the exponent and 10 is the base of the exponent.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Complex&lt;/h2&gt;
&lt;p&gt;Complex numbers are represented by a+bj where a is the real part of number and b is the imaginary part of the number .They are used to repreent real floating point numbers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Multiple Assignnmet&lt;/h2&gt;
&lt;p&gt;We can assign multiple variables at the same  time to same value. This will save time by not initializing the variable every time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conversions&lt;/h2&gt;
&lt;p&gt;We can convert datatype of a variable to another datatype .&lt;/p&gt;
&lt;p&gt;Integer to float or vice versa&lt;/p&gt;
&lt;p&gt;We can convert a floating point number to an  integer or a integer to floating point  by using int and float  keywords  with that variable.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-8.png"&gt;&lt;img alt="Screenshot-8" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-7.png"&gt;&lt;img alt="Screenshot-7" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;integer to string or vice versa&lt;/p&gt;
&lt;p&gt;We can convert integer to sting and strings to integers by using int and str keywords .Numeric strings can be converted to integers only,alphabetic strings will not be converted.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;1234&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-57.png"&gt;&lt;img alt="Screenshot-5" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-57.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1234&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;converted&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-62.png"&gt;&lt;img alt="Screenshot-6" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-62.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Complex to string or vice versa&lt;/p&gt;
&lt;p&gt;Complex can only be converted to string datatype and only numeric string can be converted to complex datat type ,keyword used for complex is complex.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;123&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;complex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-61.png"&gt;&lt;img alt="Screenshot-6" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-61.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-56.png"&gt;&lt;img alt="Screenshot-5" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-56.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Any queries related to this tutorial can be asked and in next tutorial we will discuss about conditional statements in python.&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Create your own Simple File Transfer App over LAN (with Source code in JAVA)</title><link href="//thegeekyway.com/filetransfer/" rel="alternate"></link><published>2014-01-30T17:43:00+05:30</published><updated>2014-01-30T17:43:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-01-30:/filetransfer/</id><summary type="html">&lt;p&gt;Many Core Java packages can be used to create useful applications. This application uses java.net package to establish connection between two systems residing on the &lt;strong&gt;same network. &lt;/strong&gt; This point is important, because it will not work for arbitrary networks (having no connection between them). For those who don't have …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Many Core Java packages can be used to create useful applications. This application uses java.net package to establish connection between two systems residing on the &lt;strong&gt;same network. &lt;/strong&gt; This point is important, because it will not work for arbitrary networks (having no connection between them). For those who don't have basic networking knowledge, in the simplest language same network means computer systems connected through the same router, or directly connected to each other via &lt;a href="http://www.pc.kg/Images/47/441657/441657.jpg" title="Lan Write"&gt;LAN Wire&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Networking Basics : When we connect to a network (a router), we get an IP from the router, which is usually of the form xxx.xxx.x.x, where x is a no. between 0 to 255 like 192.168.1.5 or 192.168.0.5 . Usually the first address in the series is of the router itself, i.e. 192.168.1.1.&lt;br&gt;
In networking, there is a simple concept of a socket which is the combination of IP Address and Port number. Port no. is a is a no. between 0 to 65535. Out of this, 0 to 1023 are reserved for specific services and 1024 to 65536 can be used for our codes. In java, there are two classes which help in &lt;strong&gt;communication via these ports.&lt;/strong&gt; These are namely, &lt;strong&gt;java.net.Socket&lt;/strong&gt; and &lt;strong&gt;java.net.ServerSocket. &lt;/strong&gt; Socket acts as a &lt;strong&gt;client&lt;/strong&gt; and ServerSocket acts as a &lt;strong&gt;server.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This simple software uses these two classes to send and receive files. ServerSocket opens a port on a system and waits for a client to connect to that port. On the other end, a system on the same network uses Socket class to connect to this device to establish connection and recieve data. The serveris currently able to send one file at a time to client.&lt;/p&gt;
&lt;p&gt;The image shown below shows both the Client and Server side applications :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/server.jpg"&gt;&lt;img alt="server" src="//thegeekyway.com/uploads/images/2014/01/server.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The Server Side Application has options to select the file to be sent and then press the button "Send File". For the client side, it has a text field where we enter the address specified by the server (which is 192.168.1.6 here). The default location where the client saves the file is &lt;strong&gt;Desktop&lt;/strong&gt; of the user but the user can change the path where these files are saved after downloading. But, protected paths like &lt;strong&gt;C:&lt;/strong&gt; and &lt;strong&gt;C:Program Files&lt;/strong&gt; should be avoided as the destination paths, else an error is shown and Client shutdowns. The default location is then reset again to &lt;strong&gt;Desktop.&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A simple setup using &lt;strong&gt;Batch script, VB Script,Registry Script and Winrar&lt;/strong&gt; was created to deploy the JAR file onto Windows Systems both 32 and 64 bit. &lt;u&gt;&lt;strong&gt;JRE/ JDK 1.4 or above should be installed to use this application&lt;/strong&gt;&lt;/u&gt;. You can try this application on your same system (local server) by using 127.0.0.1 as server address on client side.After installation on windows system, you will get these options on Right Click of each file/folder (called as context menu), which allows instant sharing as shown below.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/2.jpg" title="Screenshot of Installed Program"&gt;&lt;img alt="Screenshot of Installed Program" src="//thegeekyway.com/uploads/images/2014/01/2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://www.mediafire.com/download/6nscpopqnc4n57n/Smart%20File%20Transfer.exe" title="Smart file transfer download"&gt;Download the application from here&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-decoration: underline;"&gt;**SOURCE **&lt;/p&gt;

&lt;p&gt;Client side source code (Client.java) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.StringTokenizer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.net.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.event.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;JFrame&lt;/span&gt; &lt;span class="n"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;ActionListener&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;JTextField&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;JButton&lt;/span&gt; &lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;JLabel&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;screenX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;screenY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;myX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;myY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;JPanel&lt;/span&gt; &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;JProgressBar&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;represents&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;downloaded&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridwidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridheight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;posInCell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Insets&lt;/span&gt; &lt;span class="n"&gt;insets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gridx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gridy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gridwidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gridheight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;posInCell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NONE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;insets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt; &lt;span class="n"&gt;Look&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;Feel&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt; &lt;span class="n"&gt;Systems&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;UIManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLookAndFeel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.sun.java.swing.plaf.windows.WindowsLookAndFeel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Using Swing Default Look and Feel, as you a using a NON-WINDOWS System&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Changing look and feel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;JButton&lt;/span&gt; &lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;JPanel&lt;/span&gt; &lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;JFileChooser&lt;/span&gt; &lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt; &lt;span class="n"&gt;defaultLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Default location is : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;defLoc&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
        &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt; &lt;span class="n"&gt;changeLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Change Location where downloaded file is saved &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;address&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter Address as specified by Server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;recieve&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Recieve File&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter Server Adress and press &amp;#39;Recieve File&amp;#39; to Continue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;  Smart File Transfer (Client)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;jfc&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;jpb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JProgressBar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setStringPainted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Times new roman&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BOLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;panel&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;paintComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Graphics&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;paintComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;Graphics2D&lt;/span&gt; &lt;span class="n"&gt;g2d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Graphics2D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;g2d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setRenderingHint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RenderingHints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KEY_RENDERING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RenderingHints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VALUE_RENDER_QUALITY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;g2d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GradientPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
                &lt;span class="n"&gt;g2d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upperBorder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flowPanel&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Times new roman&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PLAIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tahoma&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BOLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Times new roman&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PLAIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GridBagLayout&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FlowLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FlowLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;defaultLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;changeLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EAST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;centered&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;towards&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
        &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NORTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOUTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JTextField&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;addMouseListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MouseAdapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mousePressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;screenX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getXOnScreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;screenY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getYOnScreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;myX&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getX&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;myY&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getY&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;addMouseMotionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MouseMotionAdapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mouseDragged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;deltaX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getXOnScreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;screenX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;deltaY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getYOnScreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;screenY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;setLocation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;deltaX&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;deltaY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMouseListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MouseAdapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mouseClicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;removeMouseListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;changeLocation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMouseListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MouseAdapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mouseEntered&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;changeLocation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mouseExited&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;changeLocation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mouseClicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;JFileChooser&lt;/span&gt; &lt;span class="n"&gt;jfc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFileSelectionMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DIRECTORIES_ONLY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCurrentDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showSaveDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;APPROVE_OPTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;try&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;FileWriter&lt;/span&gt; &lt;span class="n"&gt;fw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c:\sft\log.bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="n"&gt;fw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getSelectedFile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
                        &lt;span class="n"&gt;fw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                        &lt;span class="n"&gt;defaultLocation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Default Location is : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getSelectedFile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error in changing path, The application will now exit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fatal Error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setResizable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setUndecorated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;getRootPane&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BorderFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;createLineBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;getRootPane&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setDefaultButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setLocationRelativeTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setDefaultCloseOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISPOSE_ON_CLOSE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setVisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;requestFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;defLoc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BufferedReader&lt;/span&gt; &lt;span class="n"&gt;br&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c:\sft\log.bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isDirectory&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;instanceof&lt;/span&gt; &lt;span class="n"&gt;FileNotFoundException&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;instanceof&lt;/span&gt; &lt;span class="n"&gt;NullPointerException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;FileWriter&lt;/span&gt; &lt;span class="n"&gt;fw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileWriter&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c:\sft\log.bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user.home&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\Desktop&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;fw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;fw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;ee&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Critical Error, The application will now exit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Critical Error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;actionPerformed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ActionEvent&lt;/span&gt; &lt;span class="n"&gt;ae&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ae&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getActionCommand&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JFrame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ICONIFIED&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Recieve File&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;StringTokenizer&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StringTokenizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasMoreTokens&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nextToken&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NumberFormatException&lt;/span&gt; &lt;span class="n"&gt;nfe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;IP address has only no.s seperated by dots (.)nIt is of the form &amp;quot;&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; nwhere xxx is a no. less than 256&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Integer Data Expected&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Incorrect IP Address nIt is of the form &amp;quot;&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; nwhere xxx is a no. less than 256&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Invalid IP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;recieveFile&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;recieveFile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Searching for server...Please wait&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;retrieve&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;server&lt;/span&gt; &lt;span class="nn"&gt;and&lt;/span&gt; &lt;span class="nn"&gt;send&lt;/span&gt; &lt;span class="nn"&gt;to&lt;/span&gt; &lt;span class="nn"&gt;client&lt;/span&gt;

        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;sizeName&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;recieved&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;character&lt;/span&gt; &lt;span class="nn"&gt;streams&lt;/span&gt;

        &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;percentage&lt;/span&gt;

        &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;counts&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;constructing&lt;/span&gt; &lt;span class="n"&gt;streams&lt;/span&gt;
        &lt;span class="n"&gt;BufferedReader&lt;/span&gt; &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;long&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;PrintWriter&lt;/span&gt; &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;long&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;BufferedInputStream&lt;/span&gt; &lt;span class="n"&gt;bis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;BufferedOutputStream&lt;/span&gt; &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;FileOutputStream&lt;/span&gt; &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;

        &lt;span class="n"&gt;Socket&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;allocating&lt;/span&gt; &lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;starting&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="n"&gt;logic&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;br&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;InputStreamReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PrintWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOutputStream&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;StringTokenizer&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StringTokenizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readLine&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Connection Established, about to begin download&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasMoreTokens&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;sizeName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nextToken&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Recieved&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sizeName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="n"&gt;bis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedInputStream&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;bos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedOutputStream&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOutputStream&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;fos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileOutputStream&lt;/span&gt;     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;+sizeName[0]);&lt;/span&gt;

            &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOUTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;repaint&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;ClientSwingWorker&lt;/span&gt; &lt;span class="n"&gt;csw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ClientSwingWorker&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;csw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isDone&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOUTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Recieved 100%&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;repaint&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readLine&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;speedString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;bis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Time taken is &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nSpeed is &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; MBPS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File Sent (Client)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter Server Adress and press &amp;#39;Recieve File&amp;#39; to Continue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;instanceof&lt;/span&gt; &lt;span class="n"&gt;ConnectException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter Address as specified by Server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter Server Adress and press &amp;#39;Connect and Start&amp;#39; button to Continue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;recieve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No Running Server found on specified address [ &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; ]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Server Not Found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;JTextField&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMouseListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MouseAdapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mouseClicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;removeMouseListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;instanceof&lt;/span&gt; &lt;span class="n"&gt;FileNotFoundException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Failed in saving file,nLocation : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; required administrative rights to save or it was an invalid pathnSelect some other location for downloaded filesnThe Program will now Exit and default location would be reset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error [&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;FileWriter&lt;/span&gt; &lt;span class="n"&gt;fw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c:\sft\log.bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;fw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;ee&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClientSwingWorker&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;SwingWorker&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;JProgressBar&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;FileOutputStream&lt;/span&gt; &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ClientSwingWorker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="n"&gt;FileOutputStream&lt;/span&gt; &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;JProgressBar&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fos&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;Void&lt;/span&gt; &lt;span class="n"&gt;doInBackground&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;throws&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;tString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;breakPoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;():(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;breakPoint&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Recieving : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; %&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Server Side code (Server.java):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.net.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.event.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Server&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;JFrame&lt;/span&gt; &lt;span class="n"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;ActionListener&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;JTextField&lt;/span&gt; &lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sizeField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;typeField&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;textfields&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;front&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;

    &lt;span class="n"&gt;JButton&lt;/span&gt; &lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;browse&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;

    &lt;span class="n"&gt;JFileChooser&lt;/span&gt; &lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;local&lt;/span&gt; &lt;span class="nn"&gt;computer&lt;/span&gt;

    &lt;span class="n"&gt;JLabel&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;shows&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;

    &lt;span class="n"&gt;JPanel&lt;/span&gt; &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="n"&gt;afterwards&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;declared&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wide&lt;/span&gt;

    &lt;span class="n"&gt;JProgressBar&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;progress&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;completion&lt;/span&gt;

    &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;sizeArray&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;KB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;desired&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;

    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;screenX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;screenY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;myX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;myY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;dialog&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;undecorated&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;coordinates&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt;

    &lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;startFlag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;sets&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;StartServer&lt;/span&gt; &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;working&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;fileSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;

    &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;serverAddress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tempAddress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;determined&lt;/span&gt; &lt;span class="n"&gt;inside&lt;/span&gt; &lt;span class="n"&gt;constructor&lt;/span&gt;

    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridwidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gridheight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;posInCell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Insets&lt;/span&gt; &lt;span class="n"&gt;insets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gridx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gridy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gridwidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gridheight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;posInCell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NONE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;insets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;GridBagLayout&lt;/span&gt; &lt;span class="n"&gt;alignment&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;
    &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;retrieveServerIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;executed&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;updated&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;tempAddress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InetAddress&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLocalHost&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InetAddress&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLocalHost&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Unable to Retrieve System IP, Restart the Application and Retry&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Runtime Error !&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;EIWQ&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tempAddress&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serverAddress&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;serverAddress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tempAddress&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Type this in client app : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;serverAddress&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;starting&lt;/span&gt; &lt;span class="n"&gt;constructor&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;basic&lt;/span&gt; &lt;span class="n"&gt;initializations&lt;/span&gt;
    &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;openFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Retrieve&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s IP&lt;/span&gt;
        &lt;span class="n"&gt;retrieveServerIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt; &lt;span class="n"&gt;Look&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;Feel&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt; &lt;span class="n"&gt;Systems&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;chooser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;UIManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLookAndFeel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.sun.java.swing.plaf.windows.WindowsLookAndFeel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updateComponentTreeUI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Using Swing Default Look and Feel, as you a using a NON-WINDOWS System&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Changing look and feel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Constructos&lt;/span&gt; &lt;span class="n"&gt;Declarations&lt;/span&gt;
        &lt;span class="n"&gt;JButton&lt;/span&gt; &lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;JLabel&lt;/span&gt; &lt;span class="n"&gt;nameLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sizeLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;typeLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;JPanel&lt;/span&gt; &lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Memory&lt;/span&gt; &lt;span class="n"&gt;allocation&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browse&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Browse&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Send File&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;jfc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;jpb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JProgressBar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setStringPainted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Times new roman&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BOLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;nameLabel&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;sizeLabel&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File Size&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;typeLabel&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File Type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;  Smart File Transfer (Server)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;address&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Type this in client app : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;serverAddress&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Select File and Start Server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setForeground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;panel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upperBorder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flowPanel&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JPanel&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);;&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nameField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEditable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sizeField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEditable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;typeField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEditable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;sizeField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;typeField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;setting&lt;/span&gt; &lt;span class="n"&gt;Panel&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;adding&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;Panel&lt;/span&gt;
        &lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GridBagLayout&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FlowLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FlowLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nameLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sizeLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sizeField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;typeLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;typeField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GreyscaleBasic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BOLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;nameLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sizeLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;typeLabel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Times new roman&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PLAIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sizeField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;typeField&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tahoma&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BOLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;times new roman&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PLAIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;Listeners&lt;/span&gt;
        &lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;Level&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt; &lt;span class="n"&gt;Properties&lt;/span&gt;
        &lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flowPanel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EAST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;centered&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;towards&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upperBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NORTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOUTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;addMouseListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MouseAdapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mousePressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;screenX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getXOnScreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;screenY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getYOnScreen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;myX&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getX&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;myY&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getY&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;addMouseMotionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MouseMotionAdapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;mouseDragged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;deltaX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getXOnScreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;screenX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;deltaY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getYOnScreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;screenY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;setLocation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;deltaX&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;deltaY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setResizable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setLocationRelativeTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setUndecorated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setDefaultCloseOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISPOSE_ON_CLOSE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;getRootPane&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BorderFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;createLineBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;getRootPane&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setDefaultButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;setVisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;requestFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;must&lt;/span&gt; &lt;span class="n"&gt;exist&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt;
        &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;retrieveServerIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JComponent&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;openFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;fileSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileSize&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="il"&gt;0L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No Valid file found on specified location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File not found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nb"&gt;long&lt;/span&gt; &lt;span class="n"&gt;tempSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;fileSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tempSize&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;tempSize&lt;/span&gt;&lt;span class="o"&gt;/=&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JAVA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CPP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CSS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;HTML&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PHP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XML&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; Source File&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JPG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BMP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PNG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GIF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TIFF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ICO&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; File (Image/Icon)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MPG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MPEG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MP4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVI&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3GP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;RMVB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WMV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MKV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VOB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MOV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FLV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; File (Video)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MP3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WMA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FLAC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AAC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AMF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AMR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;M4A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;M4R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OGG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MP2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;WAV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; File (Audio)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EXE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CMD&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BAT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DMG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MSI&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; File (Executable File/Script)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; Document/File&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;sizeField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tempSize&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;sizeArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="n"&gt;typeField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;startFlag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;actionPerformed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ActionEvent&lt;/span&gt; &lt;span class="n"&gt;ae&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ae&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getActionCommand&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Browse&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showOpenDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;APPROVE_OPTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;openFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jfc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getSelectedFile&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;requestFocusInWindow&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JFrame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ICONIFIED&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Send File&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;startFlag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;startServer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Select a Valid file first ( size &amp;gt; 0B )&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;startServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Waiting for Client to Connect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;retrieve&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;server&lt;/span&gt; &lt;span class="nn"&gt;and&lt;/span&gt; &lt;span class="nn"&gt;send&lt;/span&gt; &lt;span class="nn"&gt;to&lt;/span&gt; &lt;span class="nn"&gt;client&lt;/span&gt;

        &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;percentage&lt;/span&gt;

        &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;counts&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt;

        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fileName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;)+1);&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;sent&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;BR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt; &lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;constructing&lt;/span&gt; &lt;span class="n"&gt;streams&lt;/span&gt;
        &lt;span class="n"&gt;BufferedReader&lt;/span&gt; &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;long&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;PrintWriter&lt;/span&gt; &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;long&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;BufferedInputStream&lt;/span&gt; &lt;span class="n"&gt;bis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;BufferedOutputStream&lt;/span&gt; &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;

        &lt;span class="n"&gt;FileInputStream&lt;/span&gt; &lt;span class="n"&gt;fis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;

        &lt;span class="n"&gt;ServerSocket&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt;

        &lt;span class="n"&gt;Socket&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;allocating&lt;/span&gt; &lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;starting&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="n"&gt;logic&lt;/span&gt;

        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ServerSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;br&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;InputStreamReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PrintWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOutputStream&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;ioe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ioe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Begining File Transfer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readLine&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Recieved&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Client not Ready or connection was closed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Retry&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Faliure&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;bis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedInputStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;bos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedOutputStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOutputStream&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;fis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileInputStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sending file to &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOUTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;repaint&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentTimeMillis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;!=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;ServerSwingWorker&lt;/span&gt; &lt;span class="n"&gt;ssw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ServerSwingWorker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fileSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;ssw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ssw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isDone&lt;/span&gt;&lt;span class="p"&gt;())){}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentTimeMillis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEnabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;nameField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;sizeField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;typeField&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerBorder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BorderLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOUTH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;startFlag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;repaint&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sent 100 %&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endTime&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;startTime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileSize&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1048576&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Time taken is &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nSpeed is &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;speedString&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; MBPS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File Sent (Server)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Select File and Start Server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;reset&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;further&lt;/span&gt; &lt;span class="n"&gt;operation&lt;/span&gt;
            &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Select File and Start Server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;bis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;fis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;ioe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ioe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;
                    &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ServerSwingWorker&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;SwingWorker&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;JProgressBar&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;BufferedOutputStream&lt;/span&gt; &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ServerSwingWorker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="n"&gt;BufferedOutputStream&lt;/span&gt; &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;JProgressBar&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jpb&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jpb&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bos&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;Void&lt;/span&gt; &lt;span class="n"&gt;doInBackground&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;throws&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;bos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invokeLater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;tString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;breakPoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;():(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;tString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;breakPoint&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sending : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;tString&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; %&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;jpb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just let us know if you are not able to understand any method or class used here&lt;/p&gt;</content><category term="java"></category><category term="networking"></category><category term="sockets"></category></entry><entry><title>Getting Started With Chef-solo</title><link href="//thegeekyway.com/learning-basics-chef-solo-example/" rel="alternate"></link><published>2014-01-30T12:59:00+05:30</published><updated>2014-01-30T12:59:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2014-01-30:/learning-basics-chef-solo-example/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/6521.OC_Chef_Logo.png"&gt;&lt;img alt="Chef-Logo" src="//thegeekyway.com/uploads/images/2014/01/6521.OC_Chef_Logo-300x236.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Chef is an amazing tool from opscode to automate your work. Though it is very useful, it is also very complex to understand and work with. Before discussing about Chef-solo, here are some terminologies related to chef that we should learn first.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recipes&lt;/strong&gt;: These are the files that contain the …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/6521.OC_Chef_Logo.png"&gt;&lt;img alt="Chef-Logo" src="//thegeekyway.com/uploads/images/2014/01/6521.OC_Chef_Logo-300x236.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Chef is an amazing tool from opscode to automate your work. Though it is very useful, it is also very complex to understand and work with. Before discussing about Chef-solo, here are some terminologies related to chef that we should learn first.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recipes&lt;/strong&gt;: These are the files that contain the configuration. Simply, these files have the code that is going to be used to configure your server.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cookbooks&lt;/strong&gt;: A collection of recipes is called a cookbook.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Chef-client&lt;/strong&gt;: A tool which runs on the server that is supposed to be configured by chef.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Chef-server&lt;/strong&gt;: This is the server that provides cookbooks/recipes to chef-client.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Chef-solo&lt;/strong&gt;: An independent chef configuration tool that doesn’t need chef-server to work.&lt;/p&gt;
&lt;p&gt;Chef-solo is the easiest way to learn how chef works. In this article we will see the working of chef-solo with an example. The first step is to install chef. Chef is installed as a rubygem. So, install rubygem and chef using following commands. (I am using Fedora. Use sudo apt-get for debain based systems.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install ruby rubygems ruby-devel

$ gem install chef
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can check if your installation was successful or not by running ‘chef-solo’ command as sudo/root. It will most probably give an error “No cookbook found”. That’s alright, if you are getting any other error, then you need to check the installation again. So, now we are going to write a recipe to print “Hello chef” on the command prompt.&lt;/p&gt;
&lt;p&gt;First of all, make a directory where you are going to do all your work. Let’s call it chef.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;chef&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we need to make the recipe. Let’s call the recipe hellochef. Here is how you can create it:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="" src="https://lh3.googleusercontent.com/JdMrZumIlNVIEI3ptyo02q4-gMyS7aK55eDpgLz0bffvFgYt85eUjNdYFW3OEApnqsMU8A_hXwirTrTeBh-N9VNvqREBQuKDUHhJ3yXfOyy9sKyExIFWegv5oA"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now write the line ‘puts “Hello Chef!” ‘ in the file default.rb and close it. It is a ruby file, so it’s better you make yourself familiar with ruby before moving ahead with chef. Now that we have our recipe, next step is to redirect chef-solo to our recipe. We need to tell chef-solo that which cookbook we want to run. To do that create a node.json inside chef/ directory and put the recipe info inside it.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="" src="https://lh6.googleusercontent.com/96TAdoropZDJ43-RziG1XATorRT5mJ9IZsLQWhCnWzo31PCPyJmZ61i_rRP9cBPcNbGfODxaokvtgNHAYthQi5Xu4eiCszll2xT7I0xAd8Rd_pTgvXOvhm57iw"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Save and close the file. Now, you just need one more thing, that is chef-solo configuration file. Come back to your home directory and open a file named solo.rb and write the following info in the file:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="" src="https://lh3.googleusercontent.com/efLRvQ_ifxyy7BnJAc_tIMHYf6d-uD_86EE83otimqO6rkCLbzoPK6mKp8vs4OjYEAwyFEdWwTcczVZKXnf7-o5wwM2fMofdTlcz2tfWa6f9t_DkZ6xSGbkbLw"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Remember to change the locations of files relative to your system! Save and close the file. Now, we are ready to run chef-solo. Run 'chef-solo -c solo.rb' from command line and you should get an output like this:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt="" src="https://lh5.googleusercontent.com/oSvDyCeJjl1-7_sxTFgmEkTI66xcUh5Fh1IAAvftt7Cg_TvzYOLAdSJjA0dY6YgMEmbCsngCzKEHrldaw-bB7Py9sFLEhb2Z3u8FIs2F7tppJ6sVy-EgT-RcxQ"&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The -c option tells chef-solo about the location of the solo.rb configuration file. You can do a lot more with chef-solo than just printing Hello chef! This will get you started. Happy cooking!&lt;/p&gt;</content><category term="automation"></category><category term="Chef"></category><category term="chef-solo"></category></entry><entry><title>Beginning Android, for Java / C++ programmers (Android-Part 0)</title><link href="//thegeekyway.com/beginandroid/" rel="alternate"></link><published>2014-01-27T20:35:00+05:30</published><updated>2014-01-27T20:35:00+05:30</updated><author><name>gagan93</name></author><id>tag:thegeekyway.com,2014-01-27:/beginandroid/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/01.jpg5a51b1a1-4063-466c-945d-6178840074d0Larger.jpg" title="Beginning Android"&gt;&lt;img alt="Beginning Android" src="//thegeekyway.com/uploads/images/2014/01/01.jpg5a51b1a1-4063-466c-945d-6178840074d0Larger-300x225.jpg" title="Beginning Android"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Most of the people now have Android devices. This attracts a lot of people to begin career as an Android Developer. Although creating games with sophisticated graphics isn't easy, but creating a simple Android app is. What you need to start Android Application Development is good knowledge of OOPS concept …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/01.jpg5a51b1a1-4063-466c-945d-6178840074d0Larger.jpg" title="Beginning Android"&gt;&lt;img alt="Beginning Android" src="//thegeekyway.com/uploads/images/2014/01/01.jpg5a51b1a1-4063-466c-945d-6178840074d0Larger-300x225.jpg" title="Beginning Android"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Most of the people now have Android devices. This attracts a lot of people to begin career as an Android Developer. Although creating games with sophisticated graphics isn't easy, but creating a simple Android app is. What you need to start Android Application Development is good knowledge of OOPS concept.&lt;/p&gt;
&lt;p&gt;The method used by most of the people to start Android is using Eclipse as an IDE (Integrated Development Environment). The experienced Android programmers may opt for Android Studio. Sometimes its just the matter of choice/comfort with a particular IDE.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisite knowledge  : &lt;/strong&gt;Many people go for Android after doing Core Java. Few try it with C++ and/or basic programming knowledge. While it is possible to start with Android with a good understanding of OOP Concepts (Object Oriented Programming), but those having knowledge of Core Java always have advantage because Android uses rich  Java libraries like &lt;strong&gt;java.io, java.net, java.lang, java.util&lt;/strong&gt; etc. A bit XML is also required but simple interface provided by Eclipse can handle this part.&lt;/p&gt;
&lt;p&gt;Fore people from C++ background, it will require a bit of effort to learn Java &amp;amp; join hands with Android. There is an option to use Android NDK (Native Development Kit) using which you can use C++ native code which runs on Android phones. But as recommended by most of the developers, writing an entire Android application in Native code is &lt;strong&gt;not the right way. &lt;/strong&gt; Generally, NDK is used to create some performance critical code or for obfuscating a part of APK so that it is not easily decompiled.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Android, Decompilation and Solution : &lt;/strong&gt; As most of the Java developers must be knowing, CLASS files are easily decompiled using a simple and free software, same is the case with Android. Android binary files (APK) are easily decompiled. Some effective methods like Obfuscation are used to protect the code which modifies the code in such a way so that it is not easily readable by programmers. Same programs and methods apply to Android also as it is based on Java. Obfuscation tools are available for Android which makes it difficult for source to be leaked completely.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IDE for Android Beginners : &lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To begin development, we just need Java Development Kit (JDK) &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html"&gt;available here&lt;/a&gt; and Android SDK (Software Development Kit)  &lt;a href="http://developer.android.com/sdk/index.html?utm_source=weibolife"&gt;&lt;u&gt;available here&lt;/u&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install the JDK using default settings and extract the Android SDK to required location.&lt;/li&gt;
&lt;li&gt;Open eclipse.exe from Eclipse folder from the extracted location.&lt;/li&gt;
&lt;li&gt;The IDE loads within few seconds and opens a window where we can start creating a new project.* Basics of Android and First Simple Android Application will be discussed in next tutorial.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/setting-up-eclipse-ide-for-android-application-development/" title="Link"&gt; &lt;p style="font-size: xx-large"&gt;Link to First Android Tutorial&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Android"></category><category term="java"></category><category term="programming"></category></entry><entry><title>JAVA - Getting Started with Introduction</title><link href="//thegeekyway.com/learning-java-introduction/" rel="alternate"></link><published>2014-01-26T22:58:00+05:30</published><updated>2014-01-26T22:58:00+05:30</updated><author><name>Manpreet_Singh</name></author><id>tag:thegeekyway.com,2014-01-26:/learning-java-introduction/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/java_logo.jpg" title="Introduction to java"&gt;&lt;img alt="Introduction_to_java" src="//thegeekyway.com/uploads/images/2014/01/java_logo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Before learning JAVA, it is advisable that you should have a programming background. Even if you re not from programming background, I will try to make it as simple as I can.&lt;/p&gt;
&lt;p&gt;JAVA is one of the most powerful language. The various software which are powered by this programming language …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/java_logo.jpg" title="Introduction to java"&gt;&lt;img alt="Introduction_to_java" src="//thegeekyway.com/uploads/images/2014/01/java_logo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Before learning JAVA, it is advisable that you should have a programming background. Even if you re not from programming background, I will try to make it as simple as I can.&lt;/p&gt;
&lt;p&gt;JAVA is one of the most powerful language. The various software which are powered by this programming language are &lt;strong&gt;Rhino&lt;/strong&gt;( open source implementation of JavaScript ), &lt;strong&gt;Sun SOPT&lt;/strong&gt;( wireless, battery powered experimental platform ), &lt;strong&gt;ThinkFree&lt;/strong&gt;( java version of Microsoft Office ), &lt;strong&gt;NASA World Wide&lt;/strong&gt;( java application like Google earth ), &lt;strong&gt;UltraMixer&lt;/strong&gt;( DJ mixing software ) and above all &lt;strong&gt;Android&lt;/strong&gt; applications as well.&lt;/p&gt;
&lt;p&gt;It is a programming language, which is based on the concepts of C++ ( inheritance,OOPs etc. ). It works on the motto&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;em&gt;"Write Once, Run Anywhere".&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;h2&gt;How does JAVA works?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create a source file in this language and save it with .java extension.&lt;/li&gt;
&lt;li&gt;Path of the source file is given to the JAVA compiler( javac ), the work of this compiler is to check for the errors, exception handling etc and then converting the .java file into a Byte-code, this byte-code is stored in a file with the extension .class . Byte-code is platform independent.&lt;/li&gt;
&lt;li&gt;Now, we just require a JVM( Java Virtual Machine ), which will take byte code( .class file ) and then execute it.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;How JAVA changed the Internet?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Applets&lt;/strong&gt;: A JAVA applet is a small program which is embedded in a web-page. Whenever a web-page ( embedded with applet ) is loaded at that point, Byte-Code is transferred and it is executed by the JVM( Java Virtual Machine ).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Whenever the JAVA code/software is distributed, it is always downloaded in the form of byte code, rather than the code itself. It is one of the major differences from C++, in which the source code is always distributed and anyone can make changes, implement it in his own way etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Portability&lt;/strong&gt;: It works on the principle of "Write Once, Run Anywhere". JAVA( language ) is platform independent, whereas the JVM( executes byte-code ) is platform dependent.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Features of JAVA:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Simple&lt;/li&gt;
&lt;li&gt;Purely object oriented&lt;/li&gt;
&lt;li&gt;Secure&lt;/li&gt;
&lt;li&gt;Portable&lt;/li&gt;
&lt;li&gt;Robust&lt;/li&gt;
&lt;li&gt;Better look and feel than C/C++&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Various Terms :&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JDK&lt;/strong&gt;: Java Development Kit( JDK ) is consists of Java compiler, JVM and JRE.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JRE&lt;/strong&gt;: Java Run-time Environment( JRE ) consists of the JVM, along with libraries and supporting files(appletviewer etc.) as well. JRE is a part of JDK.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JVM&lt;/strong&gt;: Java Virtual Machine( JVM ) is a virtual machine which executes byte-code. It is provided along with JRE.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Environment variables&lt;/strong&gt;: Environment variables is a dynamic "object" on a computer, which stores a particular value, and this value is referred frequently by certain programs on the system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Requirements:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;JDK 7 &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html?rel=nofollow"&gt;Download it From Here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Notepad/Notepad++(or any text editor)&lt;/li&gt;
&lt;li&gt;Do NOT use IDE, as it may protect you from some of the details which really matter.&lt;/li&gt;
&lt;li&gt;After installing JDK, we have to set an Environment Variable named "path"&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Setting the Environment variable ( in Windows 7 and 8)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Right Click on My Computer and select Properties.&lt;/li&gt;
&lt;li&gt;Select Advanced System Settings, then go to Advanced Tab.&lt;/li&gt;
&lt;li&gt;Click on Environment Variables, then click on New.&lt;/li&gt;
&lt;li&gt;Variable name: path&lt;/li&gt;
&lt;li&gt;Variable value: give the path directory till bin folder, in most cases the value will be &lt;strong&gt;C:Program FilesJavajdk1.7.0_45bin&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Those who are using Linux or Windows XP, use Google for setting up the environment variables.&lt;/p&gt;</content><category term="java"></category></entry><entry><title>CSS - Border Radius for rounded corners</title><link href="//thegeekyway.com/css-border-radius-rounded-corners/" rel="alternate"></link><published>2014-01-25T22:30:00+05:30</published><updated>2014-01-25T22:30:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2014-01-25:/css-border-radius-rounded-corners/</id><summary type="html">&lt;p&gt;Border radius is used to create rounded corners  see the following.&lt;/p&gt;
&lt;p&gt;[codepen_embed height=200 theme_id=1 slug_hash='emxdk' user='ianoop' default_tab='css' animations='run'/]&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/css3-web-design-examples.jpg" title="css border radius"&gt;&lt;img alt="css border radius" src="//thegeekyway.com/uploads/images/2013/12/css3-web-design-examples.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;Above code fore border radius is equivalent to&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;border-top-right-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;border-top-left-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;border-bottom-left-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;border-bottom-right-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;or&lt;/span&gt;

&lt;span class="nt"&gt;border-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can specify rounded …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Border radius is used to create rounded corners  see the following.&lt;/p&gt;
&lt;p&gt;[codepen_embed height=200 theme_id=1 slug_hash='emxdk' user='ianoop' default_tab='css' animations='run'/]&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/css3-web-design-examples.jpg" title="css border radius"&gt;&lt;img alt="css border radius" src="//thegeekyway.com/uploads/images/2013/12/css3-web-design-examples.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="line-height: 1.5em;"&gt;Above code fore border radius is equivalent to&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;border-top-right-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;border-top-left-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;border-bottom-left-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;border-bottom-right-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;or&lt;/span&gt;

&lt;span class="nt"&gt;border-radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt; &lt;span class="nt"&gt;20px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can specify rounded corners with different set of values.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;One :&lt;/strong&gt; only one value set for all four corners&lt;br&gt;
&lt;em&gt;border-radius: 10px&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Two values :&lt;/strong&gt; * top-left + bottom-right and top-right + bottom-right , diagonally&lt;em&gt;&lt;br&gt;
&lt;/em&gt;border-radius: 20px 30px*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Three values:&lt;/strong&gt;  &lt;em&gt;top-left ,  top-right + bottom-left ,  bottom-right&lt;/em&gt;&lt;br&gt;
border-radius: 10px 30px 5px&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Four values:&lt;/strong&gt; &lt;em&gt;top-left ,  top-right, bottom-right,  bottom-left&lt;/em&gt;&lt;br&gt;
border-radius: 20px 10px 15px 30px;&lt;/p&gt;
&lt;p&gt;[codepen_embed height=200 theme_id=1 slug_hash='logmL' user='ianoop' default_tab='result' animations='run'/]&lt;/p&gt;
&lt;p&gt;You can even have different horizontal and vertical rounding&lt;/p&gt;
&lt;p&gt;&lt;em&gt;border-radius: 10px/30px /*Horizontal radius / Vertical Radius*/&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[codepen_embed height=200 theme_id=1 slug_hash='amzfr' user='ianoop' default_tab='result' animations='run'/]&lt;/p&gt;
&lt;p&gt;Few other example:&lt;/p&gt;
&lt;p&gt;[codepen_embed height=200 theme_id=1 slug_hash='aqeBl' user='ianoop' default_tab='result' animations='run'/]&lt;/p&gt;</content></entry><entry><title>ASP. Net Basics : Deny access to a particular folder</title><link href="//thegeekyway.com/asp-net-basics-deny-access-to-file-or-folder/" rel="alternate"></link><published>2014-01-24T00:36:00+05:30</published><updated>2014-01-24T00:36:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-01-24:/asp-net-basics-deny-access-to-file-or-folder/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/ASP.NET_.ARTICLE.Deny_Access_to_user_cover_page.png"&gt;&lt;img alt="ASP.NET.ARTICLE.Deny_Access_to_user_cover_page" src="//thegeekyway.com/uploads/images/2014/01/ASP.NET_.ARTICLE.Deny_Access_to_user_cover_page.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Setting authentication is most important part of asp.net web application project, there can a time where you don't want any user to access a particular folder. For example while creating a Gallery project we don't want any user to access the /pictures folder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ASP.net supports 3 modes of …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/ASP.NET_.ARTICLE.Deny_Access_to_user_cover_page.png"&gt;&lt;img alt="ASP.NET.ARTICLE.Deny_Access_to_user_cover_page" src="//thegeekyway.com/uploads/images/2014/01/ASP.NET_.ARTICLE.Deny_Access_to_user_cover_page.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Setting authentication is most important part of asp.net web application project, there can a time where you don't want any user to access a particular folder. For example while creating a Gallery project we don't want any user to access the /pictures folder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ASP.net supports 3 modes of authentication.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows authentication&lt;/li&gt;
&lt;li&gt;Forms authentication&lt;/li&gt;
&lt;li&gt;Passport authentication&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows authentication means that you build authentication with build in authentication of windows authentication system.&lt;/p&gt;
&lt;p&gt;With form authentication we work with the database where all the roles of user are stored in database and every time we land on the page it will make connection to database and verify the database whether the user is allowed or not to access this page.&lt;/p&gt;
&lt;p&gt;And with passport authentication you are authenticating the users by passport credentials, a system of username and password stored by Microsoft itself.&lt;/p&gt;
&lt;p&gt;In this tutorial we will focus on forms authentication. In forms authentication model it requires configuration in the web-files in web.config file and then creating set of pages.&lt;/p&gt;
&lt;p&gt;The part of web.config file which we will edit looks like this :-&lt;/p&gt;
&lt;p&gt;If you see line 46, you will see that the line &lt;strong&gt;authentication mode="Windows"&lt;/strong&gt; we need to change the value to &lt;strong&gt;"forms"&lt;/strong&gt; and save the changes.&lt;/p&gt;
&lt;h3&gt;Locking down the website&lt;/h3&gt;
&lt;p&gt;Locking down the website means that whenever the user is navigated to a website then they are automatically redirected to the login page or the home page.&lt;br&gt;
Let us assume we want to protect the page named "TheGeekyWay.aspx" stored in "TheGeekyWay" folder. Now using forms authentication we can block both TheGeekyWay.aspx page and TheGeekyWay folder.&lt;/p&gt;
&lt;p&gt;Here is the hierarchy of project of this tutorial :-&lt;br&gt;
&lt;div style="text-align:center" markdown="1"&gt;
&lt;a href="//thegeekyway.com/uploads/images/2014/01/TUT.ASP_.ACCESS.1.png"&gt;&lt;img alt="TUT.ASP.ACCESS.1" src="//thegeekyway.com/uploads/images/2014/01/TUT.ASP_.ACCESS.1.png"&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Now if we want to Lockout the TheGeekyWay folder. In the web.config file, navigate to the end of system.web element, in the above web.config file its on the 74th line, so on the 75th line add the following code&lt;/p&gt;
&lt;p&gt;This code will only allow people with admin roles and will deny any other user similarly we can block TheGeekyWay.aspx page by using the following code&lt;/p&gt;
&lt;h3&gt;Common mistakes people make while adding code to web.config&lt;/h3&gt;
&lt;p&gt;Sometimes we add deny code earlier than allow code, so no access is given to any of the user. So this must be kept in mind that deny code must always be used after allow code.&lt;/p&gt;</content><category term="asp.net"></category></entry><entry><title>Z-Index in CSS</title><link href="//thegeekyway.com/z-index-in-css/" rel="alternate"></link><published>2014-01-19T00:52:00+05:30</published><updated>2014-01-19T00:52:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-01-19:/z-index-in-css/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/zindex.png"&gt;&lt;img alt="z-index" src="//thegeekyway.com/uploads/images/2014/01/zindex.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;What is Z-Index ?&lt;/h1&gt;
&lt;p&gt;Z-Index is the property of CSS which is used to order the elements behind and in front in the form of stack. You can consider this a virtual stack where the higher value of z-index is placed infront and the lower value of z index is placed …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/zindex.png"&gt;&lt;img alt="z-index" src="//thegeekyway.com/uploads/images/2014/01/zindex.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;What is Z-Index ?&lt;/h1&gt;
&lt;p&gt;Z-Index is the property of CSS which is used to order the elements behind and in front in the form of stack. You can consider this a virtual stack where the higher value of z-index is placed infront and the lower value of z index is placed at the back.&lt;/p&gt;
&lt;p&gt;To understand this let us consider the html and css code :-&lt;/p&gt;
&lt;p&gt;[codepen_embed height=620 theme_id=3 slug_hash='wnDcv' user='Deep_Singh' default_tab='Result' animations='run'/]&lt;/p&gt;
&lt;p&gt;This is just a simple code to create 2 boxes and displaying them.The next step is to overlap these two boxes since HTML works on stack basis which means that the bottom code will be displayed on top, so now updating the code we get :-&lt;/p&gt;
&lt;p&gt;[codepen_embed height=620 theme_id=3 slug_hash='ctnjB' user='Deep_Singh' default_tab='Result' animations='run'/]&lt;/p&gt;
&lt;p&gt;This is just the normal css code with margins defined, but &lt;strong&gt;What if we want DIV1 to be placed above DIV2 ?&lt;/strong&gt; , here Z-Index property comes into effect. Various attributes of z-index are :-&lt;/p&gt;
&lt;p&gt;Value      Description&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;auto       The browser determines the stack order of the element (based on its order in the document). This is default
  &lt;em&gt;number&lt;/em&gt;   An integer that defines the stack order of the element. Negative values are allowed
  inherit    The value of the zIndex property is inherited from parent element&lt;/p&gt;
&lt;p&gt;Now adding the z-index property in the CSS code we get the following output.&lt;/p&gt;
&lt;p&gt;[codepen_embed height=620 theme_id=3 slug_hash='vizcB' user='Deep_Singh' default_tab='Result' animations='run'/]&lt;/p&gt;
&lt;h2&gt;Did it worked ?&lt;/h2&gt;
&lt;p&gt;The answer is  &lt;p style="color: #f80b06;"&gt;&lt;strong&gt;No&lt;/strong&gt;&lt;/p&gt; ! The reason being that the z-index value is pretty much ignored by the browser unless the elements are positioned. We can use &lt;strong&gt;position:relative&lt;/strong&gt; declaration to both elements. Now if we use the code we will get the following output :-&lt;/p&gt;
&lt;p&gt;[codepen_embed height=620 theme_id=3 slug_hash='EzLmu' user='Deep_Singh' default_tab='Result' animations='run'/]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Remember :&lt;/strong&gt; We should use larger values, the reason behind is that we should leave room for more values to add and values between 4 and 5 there is no whole number between it and in future we might need to add more z-index between these 2 div's, that's not that important but in advanced designs it might create a problem.&lt;/p&gt;
&lt;h1&gt;What z-index cannot do ? (in respect to overlapping)&lt;/h1&gt;
&lt;p&gt;Let us consider a child element of DIV2, a DIV3 which has the z index greater than DIV1 and DIV2, but since its the child element of DIV2 so it will be overlapped with DIV2 and DIV1 will be on the top. To demonstrate this let us consider an example below :-&lt;/p&gt;
&lt;p&gt;[codepen_embed height=620 theme_id=3 slug_hash='dCxfl' user='Deep_Singh' default_tab='Result' animations='run'/]&lt;/p&gt;
&lt;hr&gt;</content><category term="CSS"></category><category term="HTML"></category></entry><entry><title>PYTHON - Getting Started</title><link href="//thegeekyway.com/python/" rel="alternate"></link><published>2014-01-15T13:03:00+05:30</published><updated>2014-01-15T13:03:00+05:30</updated><author><name>Simerdeep Singh</name></author><id>tag:thegeekyway.com,2014-01-15:/python/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/1624592_800549696627341_1247213667_n.jpg"&gt;&lt;img alt="1624592_800549696627341_1247213667_n" src="//thegeekyway.com/uploads/images/2014/01/1624592_800549696627341_1247213667_n.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt; &lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;p style="color: #000000"&gt;Why Python ?&lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;Python is a &lt;strong&gt;high-level programming&lt;/strong&gt; language whose syntax is said to be clear and expressive. Python has a large standard library. Python is an easy to understand language we can learn this language in a few days and for making any gaming software we should must have good …&lt;/p&gt;&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/1624592_800549696627341_1247213667_n.jpg"&gt;&lt;img alt="1624592_800549696627341_1247213667_n" src="//thegeekyway.com/uploads/images/2014/01/1624592_800549696627341_1247213667_n.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt; &lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;p style="color: #000000"&gt;Why Python ?&lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;Python is a &lt;strong&gt;high-level programming&lt;/strong&gt; language whose syntax is said to be clear and expressive. Python has a large standard library. Python is an easy to understand language we can learn this language in a few days and for making any gaming software we should must have good knowledge of   &lt;strong&gt;GUI development&lt;/strong&gt; using that language. GUI development using Python is very easy and understandable as compared to other language like C, C++or Java.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;p style="color: #000000"&gt;Starting Python&lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;Creating a simple Hello world program&lt;/p&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p style="color: #000000"&gt;We need a python compiler to compile python programs which can be downloaded from &lt;strong&gt;www.python.org&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p style="color: #000000"&gt;Writing a program in &lt;strong&gt;text file&lt;/strong&gt; or &lt;strong&gt;console&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;&lt;strong&gt;Text File&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;Compiling and running the program are done using single  command &lt;strong&gt;python ‘filename’&lt;/strong&gt; &lt;a href="//thegeekyway.com/uploads/images/2014/01/screen1.png"&gt;&lt;img alt="screen1" src="//thegeekyway.com/uploads/images/2014/01/screen1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;&lt;strong&gt;Console&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/screen2.png"&gt;&lt;img alt="screen2" src="//thegeekyway.com/uploads/images/2014/01/screen2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;To get exit from command line interface just type the command &lt;strong&gt;exit()&lt;/strong&gt; .&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-5.png"&gt;&lt;img alt="Screenshot-5" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;To get help about some methods related to python or the keywords  we can type help in command line interface .Follow these steps&lt;/p&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p style="color: #000000"&gt;Type python in command line to start the interpreter of python.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p style="color: #000000"&gt;Type &lt;strong&gt;help&lt;/strong&gt; .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p style="color: #000000"&gt;To get help about &lt;strong&gt;keywords&lt;/strong&gt; or &lt;strong&gt;modules&lt;/strong&gt; available in python just type ethe word keyword.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-51.png"&gt;&lt;img alt="Screenshot-5" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-51.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-52.png"&gt;&lt;img alt="Screenshot-5" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-52.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;All these keywords will be discussed in the coming tutorials one by one .As we can see there are nearly &lt;strong&gt;31 keywords&lt;/strong&gt; available in python 2.6.5.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;p style="color: #000000"&gt;&lt;strong&gt;Print statement&lt;/strong&gt;&lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;Print statement is used to print the data in python.Printing a statement in python is just so simple as we dont need to add any libraries for using print command as which we have to do in other languages.We have seen how to print "hello world", we  can print same "hello world" in different way by writing 2 words in different inverted commas and printing it .To print 2 words at the same time we use comma operator between them.&lt;/p&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Screenshot-54.png"&gt;&lt;img alt="Screenshot-5" src="//thegeekyway.com/uploads/images/2014/01/Screenshot-54.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;&lt;strong&gt;Variable&lt;/strong&gt; are printed by just writing the name of variables and no inbverted commas are required .Variables will be covered in next tutorial ,there we will be showing how to print the variables . &lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;p style="color: #000000"&gt;Comments&lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;Comments are used to document our  code . We write comments in python  by using &lt;strong&gt;symbol #&lt;/strong&gt; and writing any expression ,line,or character in front of the #.Compiler ignores the words or expression in comment.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;There are two types of comments available in python:&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;&lt;p style="color: #000000"&gt;&lt;strong&gt;Single line comments&lt;/strong&gt;&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;# is used to write the single line comments . &lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="n"&gt;world&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="color: #000000"&gt;&lt;strong&gt;will print hello world&lt;/strong&gt; is a comment and will be ignored by the compiler .&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;&lt;p style="color: #000000"&gt;&lt;strong&gt;Multiple Line comments&lt;/strong&gt;&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;&lt;p style="color: #000000"&gt;To write multiline comments the symbol is """  """ .&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;&amp;quot;&amp;quot; this is a &lt;/span&gt;
&lt;span class="ss"&gt;                          multiline comment &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;&lt;p style="color: #000000"&gt;  Any query related to this tutorial  can be asked .In our next Tutorial we will discuss about variables .&lt;/p&gt;&lt;/h3&gt;</content></entry><entry><title>Understanding Conditional Statements: if else</title><link href="//thegeekyway.com/conditional-statements-if-else/" rel="alternate"></link><published>2014-01-12T23:08:00+05:30</published><updated>2014-01-12T23:08:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-01-12:/conditional-statements-if-else/</id><summary type="html">&lt;p&gt;In this tutorial, we'll uncover something much interesting which would simplify our work as a programer and help us to check if a given condition is true or not. We'll study about the Conditional statements like &lt;strong&gt;if - else&lt;/strong&gt; , &lt;strong&gt;if-else if-else&lt;/strong&gt;, &lt;strong&gt;nested if -else&lt;/strong&gt; and &lt;strong&gt;switch&lt;/strong&gt; (continued in next tutorial)&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;Understanding …&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this tutorial, we'll uncover something much interesting which would simplify our work as a programer and help us to check if a given condition is true or not. We'll study about the Conditional statements like &lt;strong&gt;if - else&lt;/strong&gt; , &lt;strong&gt;if-else if-else&lt;/strong&gt;, &lt;strong&gt;nested if -else&lt;/strong&gt; and &lt;strong&gt;switch&lt;/strong&gt; (continued in next tutorial)&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;Understanding if else statements :&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Conditional-statements-if-else1.png" title="Conditional statements in C : if else, nested if-else"&gt;&lt;img alt="Conditional statements in C : if else, nested if-else" src="//thegeekyway.com/uploads/images/2014/01/Conditional-statements-if-else1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;To make the control of the program use conditional flow we need to use conditional statements, as the name suggests, this type of flow of control depends upon a particular condition ie either if it is true or it is false etc.&lt;/p&gt;
&lt;p&gt;We'll first look at an if statement by considering this example :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Enter a number n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  {
     &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above program would simply accept a value from user, and if the value entered is equal to 5 ie of course 5, then we would get a message printed on console "Number entered is 5" , if value entered is not 5, nothing would happen.&lt;/p&gt;
&lt;p&gt;Note: whenever you write an if statement, you should have an opening and closing parenthesis as shown (in case you need to have multiple statements to be executed for an if statement) else, the program with just single statement in if block should not necessarily consist a block, so the above program would work if&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
{
   &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;is written as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, we just instructed the computer to print a message, if a given condition happens to be true (which is entered value is 5 in this case).&lt;/p&gt;
&lt;p&gt;Now, consider, we wanted program to print a message if the value entered is not 5, ie, if value entered is 5, it would print the message "Number entered is 5" otherwise, it would print "Number entered is not 5" . Let's see how this can be done with the help of if-else&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Enter a number n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  {
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  &lt;span class="k"&gt;else&lt;/span&gt;
  {
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is not 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's say if we need to print message for if a number is 2, it should print "Number entered is 2" , if it's 5, it should print "Number entered is 5" otherwise, it should print "Number is neither 2 nor 5. Let's see how it can be done with if-else statements&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Enter a number n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  {
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  {
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is 2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  &lt;span class="k"&gt;else&lt;/span&gt;
  {
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is not 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above program could include any no of if - else if - else statements (which means no. of else if statements in between if and else can be increased )&lt;/p&gt;
&lt;p&gt;To understand nested if-else let's see the following program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Enter a number n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  {
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is even&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is 2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is not 2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  }
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Number entered is not even&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above program first checks if a number is even or not, if it's even then it checks if number is 2 or not.&lt;/p&gt;
&lt;p&gt;Note : To check number is even or not, we used modulus operator as discussed in &lt;a href="http://www.thegeekyway.com/operators-c-language/" title="Operators in the C language"&gt;Tutorial on Operators&lt;/a&gt; . Here we checked, if the number when divided by 2 leaves remainder 0 ie, it is entirely divisible by 2, then it's even else it's not even.&lt;/p&gt;
&lt;p&gt;In the next tutorial, we'll know about another conditional statement, switch statement.&lt;/p&gt;</content><category term="conditional"></category><category term="if-else"></category><category term="nested"></category></entry><entry><title>Operators in the C language</title><link href="//thegeekyway.com/operators-c-language/" rel="alternate"></link><published>2014-01-09T22:57:00+05:30</published><updated>2014-01-09T22:57:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2014-01-09:/operators-c-language/</id><summary type="html">&lt;p&gt;Welcome to your next tutorial in the C language,  today, we’ll discuss about operators in the C language. We have already discussed about &lt;a href="http://www.thegeekyway.com/variables-in-c/" title="Learning about Variables in C"&gt;Variables in C language&lt;/a&gt;, and &lt;a href="http://www.thegeekyway.com/learn-c-variables/" title="Learn C – More about variables"&gt;how we can store data in variables&lt;/a&gt; input by user, next we may need to update this data , or make various …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome to your next tutorial in the C language,  today, we’ll discuss about operators in the C language. We have already discussed about &lt;a href="http://www.thegeekyway.com/variables-in-c/" title="Learning about Variables in C"&gt;Variables in C language&lt;/a&gt;, and &lt;a href="http://www.thegeekyway.com/learn-c-variables/" title="Learn C – More about variables"&gt;how we can store data in variables&lt;/a&gt; input by user, next we may need to update this data , or make various operations on the variables to produce desired results. This can be done through Operators in the C language.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Operators_in_C1.png" title="Operators in C"&gt;&lt;img alt="Operators_in_C" src="//thegeekyway.com/uploads/images/2014/01/Operators_in_C1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Operators can be classified broadly as follows :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arithmetic Operators&lt;/li&gt;
&lt;li&gt;Logical Operators&lt;/li&gt;
&lt;li&gt;Relational Operators&lt;/li&gt;
&lt;li&gt;Assignment Operator&lt;/li&gt;
&lt;li&gt;Bitwise&lt;/li&gt;
&lt;li&gt;Conditional Operator&lt;/li&gt;
&lt;li&gt;Miscellaneous Operators&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now we’ll discuss about each category one by one, let us assume that we have declared two variables num1 and num2 and initialized them as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's have another variable named res for storing result, so that we can analyze the value of result after applying each operator and understand their functioning.&lt;/p&gt;
&lt;p&gt;But before this, we need to understand that there are basically two kinds of &lt;em&gt;&lt;strong&gt;Operators depending on the number of operands&lt;/strong&gt; they operate upon&lt;/em&gt;. They are :-&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unary Operators&lt;/strong&gt; : which operate on only one operand.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Binary Operators&lt;/strong&gt; : which requires two operands to be operated upon.&lt;/p&gt;
&lt;p&gt;Now, we'll carry on with understanding different types of operator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Arithmetic Operators&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They are binary operators used to do arithmetic operations like addition , subtraction , multiplication , division etc.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;u&gt;+ used for addition&lt;/u&gt;&lt;/em&gt; like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would add the two values ie 5 and 6 and store the result to variable res which is 9 in this case.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;u&gt;- used for subtraction&lt;/u&gt;&lt;/em&gt; like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would subtract num1 from num2 and then store the result in variable res which is 3 in this case.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;u&gt;* used for multiplication&lt;/u&gt;&lt;/em&gt; like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would multiply num1 and num2 and store the result in variable res which is 18 in this case.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;u&gt; / used for division&lt;/u&gt;&lt;/em&gt; like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would divide the two values ie num2 by num1 and then store the result in variable res which is 2 in this case.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;u&gt;% (modulus operator )&lt;/u&gt;&lt;/em&gt; like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This operator will divide num2 by num1 and then gives us the &lt;em&gt;REMAINDER&lt;/em&gt; which will be stored in variable res and it's value would be 0 in this case , since, when 6 is divided by 3, it would give remainder 0.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Logical Operators&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;They are included in logical expressions and are of following types :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logical AND (&amp;amp;&amp;amp;)&lt;/li&gt;
&lt;li&gt;Logical NOT ( ! )&lt;/li&gt;
&lt;li&gt;Logical OR ( || )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that in Logical AND and Logical OR, we use the respective symbol two times as mentioned. We'll study their complete usage in the coming tutorials specially in &lt;em&gt;&lt;u&gt;Loops&lt;/u&gt;&lt;/em&gt; and &lt;em&gt;&lt;u&gt;Conditional Statements&lt;/u&gt; .&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Relational Operator:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As the name suggests, they are used to depict relations among variables. Mostly they return either a true (1) value or a false (0) value. They are of the following types :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Less than or equal to ( \&amp;lt;= )&lt;/li&gt;
&lt;li&gt;More than or equal to ( &gt;= )&lt;/li&gt;
&lt;li&gt;Not equal to ( != )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, they would be better understood when we'll discuss about Conditional Statements and Loops, so we'll discuss them in the upcoming tutorials, just remember the types of operators for now.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Assignment Operator:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They are used to assign values to a variables, we are already using this operator since we studied about assigning a value to our variables, so consider the following :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here ( = ) ie assignment operator is used to assign value 5 to variable num.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Miscellaneous Operators&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;There are other operators too, but we have covered the most important operators here.&lt;/p&gt;
&lt;p&gt;Unary + and Unary - are some of the operators you would see often. As the name suggests they operate on only one operand. To understand what they do, consider the following code snippet :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Value of num after Unary + is %d n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Value of num after Unary - is %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Including all the necessary header files and other stuff required, it would produce the output as follows:&lt;/p&gt;
&lt;p&gt;Value of num after Unary + is 5&lt;/p&gt;
&lt;p&gt;Value of num after Unary - is -5&lt;/p&gt;
&lt;p&gt;So, you understood it right Unary + doesn't changed the sign of the value, while unary - reversed the sign of integer value, so +5 become -5 , and it would be vice-versa if we have a negative value in variable.&lt;/p&gt;
&lt;p&gt;In the next post, we'll study about Conditional statements and then about Loops in C and their usage, they would help us understand the concept of operators like logical and relational operator in much more detail. If you have any doubts/question, please feel free to flood them in the comments section, we'll help you !&lt;/p&gt;</content><category term="C language"></category><category term="Operators"></category></entry><entry><title>Asp.net Basics : Uploading a file in asp.net using validations (Part 5 of 5)</title><link href="//thegeekyway.com/asp-net-basics-uploading-file-asp-net-using-validations-part-5/" rel="alternate"></link><published>2014-01-07T05:22:00+05:30</published><updated>2014-01-07T05:22:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-01-07:/asp-net-basics-uploading-file-asp-net-using-validations-part-5/</id><summary type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 5 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Contents of this 5 part tutorial&lt;/u&gt;&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 5 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Contents of this 5 part tutorial&lt;/u&gt;&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net file uploading, uploading a file to a server.&lt;/a&gt;&lt;br&gt;
Part 2 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/"&gt;ASP.Net file uploading using EmptyFile Validations.&lt;/a&gt;&lt;br&gt;
Part 3 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/"&gt;ASP.Net file uploading using FileSize validation.&lt;/a&gt;&lt;br&gt;
Part 4 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/"&gt;ASP.Net file uploading using FileExtension validator.&lt;/a&gt;&lt;br&gt;
Part 5 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-file-asp-net-using-validations-part-5/"&gt;Complete ASP.Net file uploading using all the Validations one at a time.&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUploadPart5.png"&gt;&lt;img alt="CoverImageASPNetFileUploadPart5" src="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUploadPart5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;strong&gt;&lt;em&gt;*File Upload in asp.net : v1.4final&lt;/em&gt;&lt;/strong&gt;*&lt;/h2&gt;
&lt;p&gt;In last 4 tutorials we discussed how to upload the file on server and validate the file with various validations. This is the last part of tutorial where all the validations are used at once.&lt;/p&gt;
&lt;p&gt;Here is the final C# code clubbed into all one&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Configuration&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Data&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Linq&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;Security&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;.&lt;span class="nv"&gt;HtmlControls&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;.&lt;span class="nv"&gt;WebControls&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;.&lt;span class="nv"&gt;WebControls&lt;/span&gt;.&lt;span class="nv"&gt;WebParts&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Xml&lt;/span&gt;.&lt;span class="nv"&gt;Linq&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Drawing&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;IO&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;partial&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;_Default&lt;/span&gt; : &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Web&lt;/span&gt;.&lt;span class="nv"&gt;UI&lt;/span&gt;.&lt;span class="nv"&gt;Page&lt;/span&gt; 
{    
    &lt;span class="nv"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;Page_Load&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt; &lt;span class="nv"&gt;sender&lt;/span&gt;, &lt;span class="nv"&gt;EventArgs&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    {
        &lt;span class="nv"&gt;Panel1&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;false&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="nv"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;Button1_Click&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt; &lt;span class="nv"&gt;sender&lt;/span&gt;, &lt;span class="nv"&gt;EventArgs&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    {

        &lt;span class="nv"&gt;Panel1&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;flag1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;isFileEmpty&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;flag2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;flag3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;checkFileSize&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;flag1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;flag2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;flag3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;saveFile&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Success ! File uploaded successfully&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;GreenYellow&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File Not uploaded &amp;lt;br&amp;gt; Please refer the notes below&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;isFileEmpty&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;HasFile&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="nv"&gt;part&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;just&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;internal&lt;/span&gt; &lt;span class="nv"&gt;coding&lt;/span&gt; &lt;span class="nv"&gt;no&lt;/span&gt; &lt;span class="nv"&gt;need&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;display&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="nv"&gt;screen&lt;/span&gt; 
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;; &lt;/span&gt;
        }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Path&lt;/span&gt;.&lt;span class="nv"&gt;GetExtension&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;FileName&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;GetFileExtension&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;.pdf&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Image2&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File Extension&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;GreenYellow&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Type&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File Type&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Type&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;GreenYellow&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Type0&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Type0&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;GreenYellow&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;  &lt;/span&gt;
        }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;GetFileExtension&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            {
                &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Wrong file extension.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;Image2&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;No file type available&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type0&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;X&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type0&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="k"&gt;else&lt;/span&gt;
            {
                &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Wrong file extension.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;Image2&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File type&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type0&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Type0&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;       &lt;/span&gt;
        }
    }
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;checkFileSize&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {

        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;filesize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;PostedFile&lt;/span&gt;.&lt;span class="nv"&gt;ContentLength&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filesize&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;filesize&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            {
                &lt;span class="nv"&gt;File_Size&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; File size &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;Image3&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Size&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;GreenYellow&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }

        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filesize&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            {
                &lt;span class="nv"&gt;File_Size&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;No file posted&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;Image3&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Size&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="k"&gt;else&lt;/span&gt;
            {
                &lt;span class="nv"&gt;File_Size&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File size limit exceeded &amp;lt;br&amp;gt;(greater than 2MB)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;File_Size&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;Image3&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
        }

    }
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;saveFile&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;SaveAs&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Server&lt;/span&gt;.&lt;span class="nv"&gt;MapPath&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~/uploads/&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;FileName&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and here are the outputs, all the outputs are explained within the description of image&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Situation : Uploading a file which has a limit of 2MB and the file type limit is it should be a ".pdf" file.&lt;/strong&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-1.png" title="This is the structure of file upload system, this image should be used as reference while studying the code"&gt;&lt;img alt="This is the structure of file upload system, this image should be used as reference while studying the code" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-2.png" title="This is a condition where the file type uploaded is correct but the file size limit exceeded."&gt;&lt;img alt="This is a condition where the file type uploaded is correct but the file size limit exceeded." src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-4.png" title="This is the state where the file size limit is under 2MB but the file type is incorrect."&gt;&lt;img alt="This is the state where the file size limit is under 2MB but the file type is incorrect." src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-3.png" title="This is the state where all the conditions are true and the file is finally uploaded."&gt;&lt;img alt="This is the state where all the conditions are true and the file is finally uploaded." src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-5.png" title="This is the state where no file is uploaded and the user clicks the upload button."&gt;&lt;img alt="This is the state where no file is uploaded and the user clicks the upload button." src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut5-5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;That's all for file uploading system. Hope you enjoyed the article. Please share it in/with your groups/circles/friends and do comment if liked the article.&lt;/p&gt;</content><category term="asp.net"></category><category term="C#"></category></entry><entry><title>Asp.net Basics : Uploading a file in asp.net using validations (Part 4 of 5)</title><link href="//thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/" rel="alternate"></link><published>2014-01-06T16:00:00+05:30</published><updated>2014-01-06T16:00:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-01-06:/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/</id><summary type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 4 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 4 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net file uploading, uploading a file to a server.&lt;/a&gt;&lt;br&gt;
Part 2 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/"&gt;ASP.Net file uploading using EmptyFile Validations.&lt;/a&gt;&lt;br&gt;
Part 3 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/"&gt;ASP.Net file uploading using FileSize validation.&lt;/a&gt;&lt;br&gt;
Part 4 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/"&gt;ASP.Net file uploading using FileExtension validator.&lt;/a&gt;&lt;br&gt;
Part 5 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-file-asp-net-using-validations-part-5/"&gt;Complete ASP.Net file uploading using all the Validations one at a time.&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut4-1.png"&gt;&lt;img alt="FileUploadTut4-1" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut4-1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;strong&gt;&lt;em&gt;*File Upload in asp.net : v1.3 (File Extension Validation)&lt;/em&gt;&lt;/strong&gt;*&lt;/h2&gt;
&lt;p&gt;This is the final part of the 5 part tutorial where we'll discuss about the FileExtension validations during file uploading. Some of the professional companies demand that the resume should be in .doc or .docx or .pdf extension only, so the main point arises what if the user uploads the file in some other extension (for example : in .txt file), there should be a validator for that to validate the extension of the file. Fortunately in Microsoft Visual Studio we can do that, there is a method &lt;strong&gt;GetExtension()&lt;/strong&gt; which gets the extension of the file and has a return type of &lt;strong&gt;string&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;GetExtension() method is saved in class &lt;strong&gt;Path&lt;/strong&gt; which is the part of &lt;strong&gt;System.IO&lt;/strong&gt; and returns a string. The complete syntax for using FileExtension validation is :-&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;string&lt;/strong&gt; GetFileExtension = &lt;strong&gt;Path&lt;/strong&gt;.&lt;strong&gt;GetExtension&lt;/strong&gt;(FileUpload1.FileName);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;where FileUpload1 is the fileupload control and FileName gets the current file which is being uploaded.&lt;/p&gt;
&lt;p&gt;Using this method we can get the file extension and we can compare the values using if-else.&lt;/p&gt;
&lt;p&gt;The complete &lt;a href="http://www.thegeekyway.com/tag/c-2/"&gt;C#&lt;/a&gt; code is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;GetFileExtension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Path&lt;/span&gt;.&lt;span class="nv"&gt;GetExtension&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;FileName&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;GetFileExtension&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;.pdf&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File Extension OK ! File will be uploaded&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;GreenYellow&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Provide&lt;/span&gt; &lt;span class="nv"&gt;upload&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;discussed&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;part&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;tutorial&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File Extension detected : &amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;GetFileExtension&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;. Required file extension : &amp;#39;.pdf&amp;#39; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;File Not uploaded&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Extension&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output of the current code will be&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut4-2.png"&gt;&lt;img alt="FileUploadTut4-2" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut4-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Thats the final part of the file upload system, in the next tutorial we'll add up all the part of this tutorial and present the final part of asp.net file upload tutorial.&lt;/p&gt;</content><category term="asp.net"></category><category term="C#"></category></entry><entry><title>Customize GRUB2/BURG Screen Using Grub Customizer</title><link href="//thegeekyway.com/customize-grub2-burg-screen-using-grub/" rel="alternate"></link><published>2014-01-05T19:33:00+05:30</published><updated>2014-01-05T19:33:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2014-01-05:/customize-grub2-burg-screen-using-grub/</id><summary type="html">&lt;p&gt;&lt;strong&gt;GRUB Customizer&lt;/strong&gt; is the application with graphical interface to configure GRUB2/BURG settings, visuals &amp;amp; menu-entries.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;- supports GRUB2 &amp;amp; BURG&lt;/p&gt;
&lt;p&gt;- rename, remove &amp;amp; move the menu-entries&lt;/p&gt;
&lt;p&gt;- Installation of bootloader to MBR&lt;/p&gt;
&lt;p&gt;- settings like default distro, Kernel params, BG image, text colors etc. to customize the look of GRUB2/BURG&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can simple …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;GRUB Customizer&lt;/strong&gt; is the application with graphical interface to configure GRUB2/BURG settings, visuals &amp;amp; menu-entries.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;- supports GRUB2 &amp;amp; BURG&lt;/p&gt;
&lt;p&gt;- rename, remove &amp;amp; move the menu-entries&lt;/p&gt;
&lt;p&gt;- Installation of bootloader to MBR&lt;/p&gt;
&lt;p&gt;- settings like default distro, Kernel params, BG image, text colors etc. to customize the look of GRUB2/BURG&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can simple right click on above entries &amp;amp; then you can Edit, Rename, Remove, Move up or down, remove from submenu or add another submenu easily. Everything can be customized within user interface.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Grub-Customizer_004.png" title="Grub Customizer -&gt; List Configuration"&gt;&lt;img alt="List Configuration" src="//thegeekyway.com/uploads/images/2014/01/Grub-Customizer_004.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Grub-Customizer_005.png" title="Grub Customizer -&gt; General Settings"&gt;&lt;img alt="Grub Customizer -&gt; General Settings" src="{static}/uploads/images/2014/01/Grub-Customizer_005.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Advanced settings are for advanced users who wanna customize as per their wish.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Grub-Customizer-settings_006.png" title="Grub Customizer -&gt; Advanced settings"&gt;&lt;img alt="Grub Customizer -&gt; Advanced settings" src="{static}/uploads/images/2014/01/Grub-Customizer-settings_006.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I am using elementaryOS at this moment, I have picked .PNG image from deviantart &amp;amp; adjusted color of my choice. And, clicked on 'save settings' on left top corner &amp;amp; well that's done.&lt;/p&gt;
&lt;p&gt;Just to make sure, you can run '&lt;strong&gt;sudo update-grub&lt;/strong&gt;'.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note : I have noticed that current/latest version of Grub customizer doesn't work with .jpeg BG image files, so make sure it is of .png else it won't work.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/Grub-Customizer_003.png" title="Grub Customizer -&gt; Appearance settings"&gt;&lt;img alt="Grub Customizer -&gt; Appearance settings" src="{static}/uploads/images/2014/01/Grub-Customizer_003.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;p style="color: #da243a;"&gt;To install &lt;strong&gt;Grub Customizer&lt;/strong&gt; in Ubuntu &amp;amp; it's derivatives, open Terminal &amp;amp; add PPA by typing :&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="n"&gt;ppa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;danielrichter2007&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;customizer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now update the repository,,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now install the Grub-customizer&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;grub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;customizer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p style="color: #da243a;"&gt;To install &lt;strong&gt;Grub Customizer&lt;/strong&gt; in other Linux distribution :&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;em&gt;Install the following packages :&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- cmake&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- gcc-c++&lt;/strong&gt; or &lt;strong&gt;g++&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- libgtkmm-3.0-dev&lt;/strong&gt; or &lt;strong&gt;gtkmm30-devel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- libssl-dev&lt;/strong&gt; or &lt;strong&gt;openssl-devel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- libarchive-dev&lt;/strong&gt; or &lt;strong&gt;libarchive-devel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- gettext&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download the source from &lt;a href="https://launchpad.net/grub-customizer/+download" title="Download Now!"&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go to source directory &amp;amp; use &lt;strong&gt;cmake&lt;/strong&gt;, &lt;strong&gt;make&lt;/strong&gt; &amp;amp; &lt;strong&gt;make install&lt;/strong&gt; to install grub customizer. (You can find detailed information on 'How To Compile application from source code' from &lt;a href="http://www.thegeekyway.com/install-application-source-code-2/" title="Install application from source-code"&gt;THIS LINK&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;After installing &amp;amp; modding the GRUB2 loader, here's what my new beautiful GRUB2 screen looks like (sorry for blur image, my camera is crap) :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/bootscreen.jpg"&gt;&lt;img alt="bootscreen" src="//thegeekyway.com/uploads/images/2014/01/bootscreen.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;That's it.&lt;/p&gt;</content><category term="GRUB"></category><category term="linux"></category></entry><entry><title>Asp.net Basics : Uploading a file in asp.net using validations (Part 3 of 5)</title><link href="//thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/" rel="alternate"></link><published>2014-01-05T01:03:00+05:30</published><updated>2014-01-05T01:03:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-01-05:/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/</id><summary type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 3 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 3 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net file uploading, uploading a file to a server.&lt;/a&gt;&lt;br&gt;
Part 2 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/"&gt;ASP.Net file uploading using EmptyFile Validations.&lt;/a&gt;&lt;br&gt;
Part 3 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/"&gt;ASP.Net file uploading using FileSize validation.&lt;/a&gt;&lt;br&gt;
Part 4 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/"&gt;ASP.Net file uploading using FileExtension validator.&lt;/a&gt;&lt;br&gt;
Part 5 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-file-asp-net-using-validations-part-5/"&gt;Complete ASP.Net file uploading using all the Validations one at a time.&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUploadPart3.png"&gt;&lt;img alt="CoverImageASPNetFileUploadPart3" src="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUploadPart3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;strong&gt;&lt;em&gt;*File Upload in asp.net : v1.2 (File Size Validation)&lt;/em&gt;&lt;/strong&gt;*&lt;/h2&gt;
&lt;p&gt;File upload limit is one of the important controls for file upload control, if file upload control is not provided in uploading of file then there can be huge files uploaded which can kill the server cache. There is neither a javascript function which can provide access to client side and get the file size.&lt;/p&gt;
&lt;p&gt;This is basically an upgrade to our &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/"&gt;v1.1 of our file upload system&lt;/a&gt;. So now server can check for whether a file is uploaded and can also check the file size. There are 2 steps for limiting the file size, first we have to declare \&amp;lt;httpRuntime&gt; element in our web.config file and then creating a C# code.&lt;/p&gt;
&lt;p&gt;The attributes of httpRuntime element are&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;executionTimeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;HH:MM:SS&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;maxRequestLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;requireRootedSaveAsPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt;
   &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;sendCacheControlHeader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;shutdownTimeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;HH:MM:SS&amp;quot;&lt;/span&gt;
   &lt;span class="n"&gt;delayNotificationTimeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;HH:MM:SS&amp;quot;&lt;/span&gt;
   &lt;span class="n"&gt;minFreeThreads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;minLocalRequestFreeThreads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;appRequestQueueLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;
   &lt;span class="n"&gt;enableKernelOutputCache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;enableVersionHeader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;apartmentThreading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt;   
   &lt;span class="n"&gt;waitChangeNotification&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;maxWaitChangeNotification&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;enableHeaderChecking&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;requestLengthDiskThreshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; 
   &lt;span class="n"&gt;useFullyQualifiedRedirectUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[True|False]&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step 1 : Configuring the web.config file.&lt;/h2&gt;
&lt;p&gt;The web.config gives us httpRuntime element. The attribute executionTimeout and maxRequestLength is required for this purpose but you can explore other options also. The default size for maxRequestLength is 4MB. Here is the screenshot of web.config file :-&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadT3.1.png"&gt;&lt;img alt="FileUploadT3.1" src="//thegeekyway.com/uploads/images/2014/01/FileUploadT3.1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;here executionTimeout = "999" means that the file will upload for 999 seconds if the upload time is greater than 999 seconds then the upload will fail and connection will reset, and maxRequestLength = "2097151" means that it will upload max of 2097151KB or 2GB.&lt;/p&gt;
&lt;h2&gt;Step 2 : C# coding.&lt;/h2&gt;
&lt;p&gt;Since web.config is configured now we have to code the &lt;a href="http://www.thegeekyway.com/category/programming/c-programming-2/"&gt;C#&lt;/a&gt; file.&lt;br&gt;
The &lt;a href="http://www.thegeekyway.com/category/programming/c-programming-2/"&gt;C#&lt;/a&gt; code is :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;checkFileSize&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="nv"&gt;Panel1&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;filesize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;PostedFile&lt;/span&gt;.&lt;span class="nv"&gt;ContentLength&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Label8&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filesize&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Kb&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filesize&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1048576&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; Everything OK ! File uploaded &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Green&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Provide&lt;/span&gt; &lt;span class="nv"&gt;upload&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;discussed&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;part&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;tutorial&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
         }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; File size limit exceeded. File size should be less than 1 MB &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output of the above C# code is :-&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut3-2.png"&gt;&lt;img alt="FileUploadTut3-2" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut3-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut3-3.png"&gt;&lt;img alt="FileUploadTut3-3" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut3-3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;That's all for the FileSize validation. In the next section we will discuss about the FileType or FileExtension validation.&lt;/p&gt;
&lt;hr&gt;</content><category term="asp.net"></category><category term="C#"></category></entry><entry><title>Asp.net Basics : Uploading a file in asp.net using validations (Part 2 of 5)</title><link href="//thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/" rel="alternate"></link><published>2014-01-04T18:10:00+05:30</published><updated>2014-01-04T18:10:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-01-04:/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/</id><summary type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 2 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;
&lt;u&gt;This is a part 2 of the 5 part tutorial.&lt;/u&gt;&lt;br&gt;
If you are visiting this page for the first time then you must visit part 1 of the tutorial&lt;br&gt;
on how to upload a file on server &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net file uploading, uploading a file to a server.&lt;/a&gt;&lt;br&gt;
Part 2 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/"&gt;ASP.Net file uploading using EmptyFile Validations.&lt;/a&gt;&lt;br&gt;
Part 3 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/"&gt;ASP.Net file uploading using FileSize validation.&lt;/a&gt;&lt;br&gt;
Part 4 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/"&gt;ASP.Net file uploading using FileExtension validator.&lt;/a&gt;&lt;br&gt;
Part 5 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-file-asp-net-using-validations-part-5/"&gt;Complete ASP.Net file uploading using all the Validations one at a time.&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUploadPart2.png"&gt;&lt;img alt="CoverImageASPNetFileUploadPart2" src="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUploadPart2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;strong&gt;&lt;em&gt;*File Upload in asp.net : v1.1 (Empty File Validation)&lt;/em&gt;&lt;/strong&gt;*&lt;/h2&gt;
&lt;p&gt;The first validation used is the empty file validation, what if the user doesn't upload a file and simply pres the upload button, here is the output if the user presses only the upload button. Then an exception error will be generated on the server side.&lt;/p&gt;
&lt;p&gt;Now since in &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;tutorial 1&lt;/a&gt; we discussed on how to upload file to server without any validations now we are using our first validation &lt;strong&gt;Empty File Validation&lt;/strong&gt; it checks whether the user has selected the file or not in file control panel or if the user has directly clicked the upload button without selecting the file. If the user has directly clicked the upload button then an exception &lt;strong&gt;System.IO.DirectoryNotFoundException&lt;/strong&gt; will be generated.&lt;/p&gt;
&lt;p&gt;Here is the image below showing the details of the exception.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/DirectoryNotFoundException.png"&gt;&lt;img alt="DirectoryNotFoundException" src="//thegeekyway.com/uploads/images/2014/01/DirectoryNotFoundException.png"&gt;&lt;/a&gt; &lt;p style="text-decoration: underline; color: #000000;"&gt;2 ways of handling this exception&lt;/p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;1. Using try-catch mechanism&lt;/h3&gt;
&lt;p&gt;Now since DirectoryNotFound Expression is thrown by the server then it can be caught by the try-catch mechanism.&lt;br&gt;
The &lt;a href="http://www.thegeekyway.com/category/programming/c-programming-2/"&gt;C#&lt;/a&gt; code for method 1 (try-catch) is :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;isFileEmpty&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="nv"&gt;Panel1&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;try&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Everything OK! File Uploaded&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Green&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
           &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Provide&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;C&lt;/span&gt;# &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;uploading&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;was&lt;/span&gt; &lt;span class="nv"&gt;discussed&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;part&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;tutorial&lt;/span&gt;
        }
        &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;DirectoryNotFoundException&lt;/span&gt; &lt;span class="nv"&gt;dnfe&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {

            &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;_substring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;dnfe&lt;/span&gt;.&lt;span class="nv"&gt;ToString&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;_substring&lt;/span&gt;.&lt;span class="nv"&gt;Substring&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;. Please upload a valid file.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output of the above code will be following images&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Image 1 :&lt;/strong&gt; The interface for the upload mechanism&lt;br&gt;
&lt;strong&gt;Image 2 :&lt;/strong&gt; Clicking the upload button when no file is selected.&lt;br&gt;
&lt;strong&gt;Image 3 :&lt;/strong&gt; Clicking the upload button when a file is selected and uploaded.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2-1.png"&gt;&lt;img alt="FileUploadTut2-1" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2-1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2-3.png"&gt;&lt;img alt="FileUploadTut2-2" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2-3.png"&gt;&lt;img alt="FileUploadTut2-3" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2-3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;2. Using Boolean property "HasFile"&lt;/h3&gt;
&lt;p&gt;Another way of handling this exception is by using the Boolean property "HasFile" which will return the value as true or false. If the value returned is false then you can return the error message else it can continue with the uploading of file.&lt;br&gt;
The &lt;a href="http://www.thegeekyway.com/category/programming/c-programming-2/"&gt;C#&lt;/a&gt; code for method 2 (Boolean method) is :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;isFileEmpty&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="nv"&gt;Panel1&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;HasFile&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Everything OK! File Uploaded&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Green&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Provide&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;C&lt;/span&gt;# &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;uploading&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;was&lt;/span&gt; &lt;span class="nv"&gt;discussed&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;part&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;tutorial&lt;/span&gt;
        }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//not_success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Please upload a valid file.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2.2-1.png"&gt;&lt;img alt="FileUploadTut2.2-1" src="//thegeekyway.com/uploads/images/2014/01/FileUploadTut2.2-1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Thats all for the empty file validations property. In the next part of our tutorial we'll discuss about the SizeValidation( Limiting the size of upload on the server).&lt;/p&gt;
&lt;hr&gt;</content><category term="asp.net"></category><category term="C#"></category></entry><entry><title>Asp.net Basics : Uploading a file in asp.net using validations (Part 1 of 5)</title><link href="//thegeekyway.com/uploading-a-file-in-asp-part-1/" rel="alternate"></link><published>2014-01-04T15:59:00+05:30</published><updated>2014-01-04T15:59:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2014-01-04:/uploading-a-file-in-asp-part-1/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUpload.png"&gt;&lt;img alt="CoverImageASPNetFileUpload" src="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUpload.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net file uploading, uploading a file to a server.&lt;/a&gt;&lt;br&gt;
Part 2 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/"&gt;ASP.Net file uploading using EmptyFile Validations.&lt;/a&gt;&lt;br&gt;
Part 3 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/"&gt;ASP.Net file uploading using FileSize validation.&lt;/a&gt;&lt;br&gt;
Part 4 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/"&gt;ASP.Net file uploading using FileExtension validator.&lt;/a&gt;&lt;br&gt;
Part 5 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-file-asp-net-using-validations-part-5/"&gt;Complete …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUpload.png"&gt;&lt;img alt="CoverImageASPNetFileUpload" src="//thegeekyway.com/uploads/images/2014/01/CoverImageASPNetFileUpload.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Contents of this 5 part tutorial&lt;br&gt;
Part 1 : &lt;a href="http://www.thegeekyway.com/uploading-a-file-in-asp-part-1/"&gt;Basics of ASP.Net file uploading, uploading a file to a server.&lt;/a&gt;&lt;br&gt;
Part 2 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-2/"&gt;ASP.Net file uploading using EmptyFile Validations.&lt;/a&gt;&lt;br&gt;
Part 3 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-3/"&gt;ASP.Net file uploading using FileSize validation.&lt;/a&gt;&lt;br&gt;
Part 4 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-a-file-in-asp-net-using-validations-part-4/"&gt;ASP.Net file uploading using FileExtension validator.&lt;/a&gt;&lt;br&gt;
Part 5 : &lt;a href="http://www.thegeekyway.com/asp-net-basics-uploading-file-asp-net-using-validations-part-5/"&gt;Complete ASP.Net file uploading using all the Validations one at a time.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the Part 1 of the 5 part tutorial on how to upload file onto the server using asp.net and validate the file.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;File Upload in asp.net : Basics&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Following controls are required for uploading a file to server using asp.net&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File upload control :&lt;/strong&gt; It will only be used to select file which will be uploaded on server, it will not be used to upload the file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Button :&lt;/strong&gt; To upload a file we need a button, drag and drop the button on the screen from toolbox and change the button name to "Upload File".&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A label control :&lt;/strong&gt; To display the status of the upload.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;File Upload in asp.net : v1.0 (no validations used, the file will be uploaded as it is) &lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;This is the basic form of file upload, where no validations are being used, user can upload as much large file as possible. But one thing must be noted that this method should be strictly avoided as there is no validations used in this method (validations explained in v1.1 and v1.2) and can be a subject to DDoS attacks (Denial of service) and can shut down the server. This code is just to show how to upload a file and save it on server.&lt;/p&gt;
&lt;p&gt;Here is the back end structure I am using on Microsoft Visual Studio 2008.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUpload41.png"&gt;&lt;img alt="FileUpload4" src="//thegeekyway.com/uploads/images/2014/01/FileUpload41.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here a file upload control is used which is used to select the file and an upload button which will upload the file. The second row will display the characteristics of the file, whether the file is a ".pdf" or a ".doc" (and other extensions) file and display the image of file type. The second row is being hidden with a panel until the file isnt uploaded.&lt;/p&gt;
&lt;p&gt;Let us take a ".pdf" file which will be uploaded on the server under the "uploads" folder. The main code used for uploading a file onto server is :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;FileUpload1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SaveAs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MapPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;~/uploads/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;FileUpload1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileName&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Complete explanation of the code :-&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;FileUpload1 :&lt;/strong&gt; The contol name of the FileUpload in toolbox, administrators can use any file name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SaveAs&lt;/strong&gt; : Its the method found in &lt;a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols%28v=vs.110%29.aspx"&gt;System.Web.UI.WebControls&lt;/a&gt;  namespace and in System.Web (System.Web.dll) assembly, its main purpose is to save the file on the server.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MapPath :&lt;/strong&gt; This method is used to return the complete physical path for the virtual path that you pass in the method.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now let us upload a file on the server for example "SampleFile.pdf" is being uploaded on the server. The output once the file is uploaded is :-&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2014/01/FileUpload2.png"&gt;&lt;img alt="FileUpload2" src="//thegeekyway.com/uploads/images/2014/01/FileUpload2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The complete cs code for v1.0 is (remember this doesn't use any validations, only retrieves the name and the file extension of the file) :-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;Page_Load&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt; &lt;span class="nv"&gt;sender&lt;/span&gt;, &lt;span class="nv"&gt;EventArgs&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    {
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Hiding&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;panel&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;page&lt;/span&gt; &lt;span class="nv"&gt;load&lt;/span&gt; 
        &lt;span class="nv"&gt;Panel1&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;false&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="nv"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;Button1_Click&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt; &lt;span class="nv"&gt;sender&lt;/span&gt;, &lt;span class="nv"&gt;EventArgs&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    {
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;calling&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;valid_file&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt;, &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;doesnot&lt;/span&gt; &lt;span class="nv"&gt;exist&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;validate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;validate_file&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;validate&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        { 
            &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Getting&lt;/span&gt; &lt;span class="nv"&gt;all&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;details&lt;/span&gt;
            &lt;span class="nv"&gt;GetFileDetails&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;            &lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;exist&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;saved&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;virtual&lt;/span&gt; &lt;span class="nv"&gt;directory&lt;/span&gt;
            &lt;span class="nv"&gt;SaveFile&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;validate_file&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Code&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;test&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;FileUpload1&lt;/span&gt; &lt;span class="nv"&gt;has&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;HasFile&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Panel1&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Label2&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;No File Uploaded&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;called&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;namespace&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;Drawing&lt;/span&gt;
            &lt;span class="nv"&gt;Label2&lt;/span&gt;.&lt;span class="nv"&gt;ForeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Color&lt;/span&gt;.&lt;span class="nv"&gt;Red&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }        
    }
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;SaveFile&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="nv"&gt;File_Upload_Status&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Valid FIle&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Image1&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//success.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Invoking&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;saveas&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;saves&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;directory&lt;/span&gt;
        &lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;SaveAs&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Server&lt;/span&gt;.&lt;span class="nv"&gt;MapPath&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~/uploads/&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;FileName&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;GetFileDetails&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    {
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Path&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;called&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;IO&lt;/span&gt; &lt;span class="nv"&gt;namespace&lt;/span&gt;
        &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;FileExtension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Path&lt;/span&gt;.&lt;span class="nv"&gt;GetExtension&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;FileName&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;FileSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;PostedFile&lt;/span&gt;.&lt;span class="nv"&gt;ContentLength&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Label11&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;FileUpload1&lt;/span&gt;.&lt;span class="nv"&gt;FileName&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Label12&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileSize&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;KB&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;Label13&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;FileExtension&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Using&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;.pdf&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;extension&lt;/span&gt;, &lt;span class="nv"&gt;but&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;can&lt;/span&gt; &lt;span class="nv"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;all&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;extensions&lt;/span&gt; &lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nv"&gt;statement&lt;/span&gt;.
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FileExtension&lt;/span&gt;.&lt;span class="k"&gt;ToLower&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;.pdf&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {
            &lt;span class="nv"&gt;Image3&lt;/span&gt;.&lt;span class="nv"&gt;ImageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;~//images//pdf.png&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Label14&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;PDF file&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We will discuss about our first validation (empty file validation) in our next tutorial.&lt;/p&gt;
&lt;hr&gt;</content><category term="asp.net"></category><category term="C#"></category></entry><entry><title>CSS Regex selector - Using Regular Expression in CSS</title><link href="//thegeekyway.com/css-regex-selector-using-regular-expression-css/" rel="alternate"></link><published>2014-01-01T13:53:00+05:30</published><updated>2014-01-01T13:53:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2014-01-01:/css-regex-selector-using-regular-expression-css/</id><summary type="html">&lt;p&gt;Just like JQuery, CSS also offer a great way to filter out elements with selectors using &lt;a href="http://www.w3.org/TR/selectors/#attribute-selectors"&gt;Regular Expressions&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Selecting on  Attribute and value&lt;/h4&gt;
&lt;p&gt;[[att=str]]{style="font-family: 'courier new', courier;"} :- attribute value is exactly matching to str&lt;/p&gt;
&lt;p&gt;[[att*=str] ]{style="font-family: 'courier new', courier;"}:-  attribute value contains str - value can …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just like JQuery, CSS also offer a great way to filter out elements with selectors using &lt;a href="http://www.w3.org/TR/selectors/#attribute-selectors"&gt;Regular Expressions&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Selecting on  Attribute and value&lt;/h4&gt;
&lt;p&gt;[[att=str]]{style="font-family: 'courier new', courier;"} :- attribute value is exactly matching to str&lt;/p&gt;
&lt;p&gt;[[att*=str] ]{style="font-family: 'courier new', courier;"}:-  attribute value contains str - value can contain str anywhere either in middle or at end.&lt;/p&gt;
&lt;p&gt;[[att\^=str]]{style="font-family: 'courier new', courier;"} :- attribute value starting with str&lt;/p&gt;
&lt;p&gt;[[att\$=str]]{style="font-family: 'courier new', courier;"} :- attribute value ends with str&lt;/p&gt;
&lt;p&gt;[att] :-  Elements which contain attribute att with any value&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;iframe width="100%" height="350px" src="http://codepen.io/ianoop/embed/nCJdi" scrollbar="none"&gt;&lt;/iframe&gt;

&lt;h4&gt;Applying CSS with Pseudo-class :not&lt;/h4&gt;
&lt;p&gt;This quite interesting using :not selector to filter out on element properties. Using not selector you can distinguish them from other elements. In this selector also you can use regular expressions to find your elements.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DISABLED&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;iframe width="100%" height="250px" src="http://codepen.io/ianoop/embed/AcBfl" scrollbar="none"&gt;&lt;/iframe&gt;</content><category term="CSS"></category></entry><entry><title>Install HTML5 Capable Browser In Raspberry Pi</title><link href="//thegeekyway.com/install-html5-capable-browser-raspberry-pi/" rel="alternate"></link><published>2013-12-29T10:19:00+05:30</published><updated>2013-12-29T10:19:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2013-12-29:/install-html5-capable-browser-raspberry-pi/</id><summary type="html">&lt;p&gt;'Web' is the epiphany port available for Raspberry Pi users, which is HTML5 capable browser &amp;amp; it's predicted to be shipped in future Raspbian release. Well, if you're impatient for the official release of 'Web' &amp;amp; wanna try out this awesome browser, here's few steps which will let you enjoy the beta …&lt;/p&gt;</summary><content type="html">&lt;p&gt;'Web' is the epiphany port available for Raspberry Pi users, which is HTML5 capable browser &amp;amp; it's predicted to be shipped in future Raspbian release. Well, if you're impatient for the official release of 'Web' &amp;amp; wanna try out this awesome browser, here's few steps which will let you enjoy the beta version of 'Web' in your Raspberry Pi.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/2013-12-29-011813_1360x768_scrot.png"&gt;&lt;img alt="Rpi_Web_scrot" src="//thegeekyway.com/uploads/images/2013/12/2013-12-29-011813_1360x768_scrot.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;[For me, if you have noticed, the icons within the browser is not showing up properly, maybe some files are conflicting, for which i will take care later on]&lt;/p&gt;
&lt;p&gt;To install 'Web' in Raspberry pi :&lt;/p&gt;
&lt;p&gt;Open &lt;strong&gt;/etc/apt/source.list&lt;/strong&gt; with &lt;strong&gt;'root'&lt;/strong&gt; &amp;amp; add the following line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://raspberrypi.collabora.com&lt;/span&gt; &lt;span class="kp"&gt;wheezy&lt;/span&gt; &lt;span class="kp"&gt;web&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, update the repository &amp;amp; upgrade the system by entering following commands in terminal :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now install 'Web' browser by entering following commands in terminal :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;epiphany&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="n"&gt;cgroup&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt; &lt;span class="n"&gt;libraspberrypi0&lt;/span&gt; &lt;span class="n"&gt;libwayland&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;client0&lt;/span&gt; &lt;span class="n"&gt;libwayland&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cursor0&lt;/span&gt; &lt;span class="n"&gt;libwayland&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server0a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Latest kernel supports cgroups (also known as control groups) which limits &amp;amp; isolates the resources like CPU, memory, I/O usages. To activate it, add &lt;strong&gt;cgroup_enable=memory&lt;/strong&gt; in Kernel command line.&lt;/p&gt;
&lt;p&gt;That's it. Enjoy surfing.&lt;/p&gt;</content><category term="HTML5"></category><category term="Raspberry Pi"></category></entry><entry><title>Java Reflection: class "Method" to inovoke methods and get metadata</title><link href="//thegeekyway.com/java-reflection-class-method/" rel="alternate"></link><published>2013-12-28T23:57:00+05:30</published><updated>2013-12-28T23:57:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-28:/java-reflection-class-method/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/java_logo2.jpg"&gt;&lt;img alt="Java Logo" src="//thegeekyway.com/uploads/images/2013/12/java_logo2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;using &lt;strong&gt;&lt;em&gt;[java.lang.&lt;a href="http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/package-summary.html"&gt;reflect&lt;/a&gt;.&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Method.html"&gt;Method&lt;/a&gt;]{style="font-family: courier new,courier;"}&lt;/em&gt;&lt;/strong&gt;&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Method.html"&gt; &lt;/a&gt;you can get metadata/signature of methods (including private) and can invoke accessible methods at runtime.&lt;/p&gt;
&lt;p&gt;Class Method provides a great tool to list all methods and find information about methods.  following tutorial will provide you more detail of class …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/java_logo2.jpg"&gt;&lt;img alt="Java Logo" src="//thegeekyway.com/uploads/images/2013/12/java_logo2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;using &lt;strong&gt;&lt;em&gt;[java.lang.&lt;a href="http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/package-summary.html"&gt;reflect&lt;/a&gt;.&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Method.html"&gt;Method&lt;/a&gt;]{style="font-family: courier new,courier;"}&lt;/em&gt;&lt;/strong&gt;&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Method.html"&gt; &lt;/a&gt;you can get metadata/signature of methods (including private) and can invoke accessible methods at runtime.&lt;/p&gt;
&lt;p&gt;Class Method provides a great tool to list all methods and find information about methods.  following tutorial will provide you more detail of class Method and invoking a method at runtime.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#methodList"&gt;Getting List of Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#metadata"&gt;Getting metadata of methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#methodobject"&gt;Getting Method Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#invokemethod"&gt;Invoke methods at Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ways"&gt;Ways of invoking methods at Runtime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="getting-list-of-method-objects" style="font-size: 1.2em;"&gt;&lt;p #methodList&gt;&lt;/p&gt;Getting List of Method Objects&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Getting&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;Method&lt;/span&gt; &lt;span class="n"&gt;itself&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;loading&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;

&lt;span class="k"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;methodList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;java.lang.reflect.Method&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;getDeclaredMethods&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;also&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;
&lt;span class="k"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;methodList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myClass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDeclaredMethods&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="getting-informationmetadata-about-methods" style="font-size: 1.2em;"&gt;Getting information/metadata about methods&lt;/h2&gt;
&lt;p&gt;Expand following code snippet.&lt;/p&gt;
&lt;p&gt;Following code  will print whole method signature. Alternatively you can use specific method to get &lt;strong&gt;parameters, returnType&lt;/strong&gt; and &lt;strong&gt;exceptions&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Method&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; : &lt;span class="nv"&gt;methodList&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
            &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;method&lt;/span&gt;.&lt;span class="nv"&gt;toString&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;; &lt;/span&gt;
      }

&lt;span class="nv"&gt;Following&lt;/span&gt; &lt;span class="nv"&gt;methods&lt;/span&gt; &lt;span class="nv"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;availble&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;java&lt;/span&gt;.&lt;span class="nv"&gt;lang&lt;/span&gt;.&lt;span class="nv"&gt;reflect&lt;/span&gt;.&lt;span class="nv"&gt;Method&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;invoke&lt;/span&gt;
&lt;span class="cm"&gt;equals&lt;/span&gt;
&lt;span class="cm"&gt;toString&lt;/span&gt;
&lt;span class="cm"&gt;hashCode&lt;/span&gt;
&lt;span class="cm"&gt;getModifiers&lt;/span&gt;
&lt;span class="cm"&gt;getName&lt;/span&gt;
&lt;span class="cm"&gt;getAnnotation&lt;/span&gt;
&lt;span class="cm"&gt;getDeclaredAnnotations&lt;/span&gt;
&lt;span class="cm"&gt;getDeclaringClass&lt;/span&gt;
&lt;span class="cm"&gt;getFactory&lt;/span&gt;
&lt;span class="cm"&gt;getGenericInfo&lt;/span&gt;
&lt;span class="cm"&gt;getGenericInfo&lt;/span&gt;
&lt;span class="cm"&gt;getParameterTypes&lt;/span&gt;
&lt;span class="cm"&gt;getReturnType&lt;/span&gt;
&lt;span class="cm"&gt;getTypeParameters&lt;/span&gt;
&lt;span class="cm"&gt;isSynthetic&lt;/span&gt;
&lt;span class="cm"&gt;toGenericString&lt;/span&gt;
&lt;span class="cm"&gt;copy&lt;/span&gt;
&lt;span class="cm"&gt;getGenericSignature&lt;/span&gt;
&lt;span class="cm"&gt;getGenericParameterTypes&lt;/span&gt;
&lt;span class="cm"&gt;getParameterAnnotations&lt;/span&gt;
&lt;span class="cm"&gt;getParameterCount&lt;/span&gt;
&lt;span class="cm"&gt;isVarArgs&lt;/span&gt;
&lt;span class="cm"&gt;acquireMethodAccessor&lt;/span&gt;
&lt;span class="cm"&gt;getAnnotatedReturnType&lt;/span&gt;
&lt;span class="cm"&gt;getAnnotationBytes&lt;/span&gt;
&lt;span class="cm"&gt;getDefaultValue&lt;/span&gt;
&lt;span class="cm"&gt;getExceptionTypes&lt;/span&gt;
&lt;span class="cm"&gt;getGenericExceptionTypes&lt;/span&gt;
&lt;span class="cm"&gt;getGenericReturnType&lt;/span&gt;
&lt;span class="cm"&gt;getMethodAccessor&lt;/span&gt;
&lt;span class="cm"&gt;handleParameterNumberMismatch&lt;/span&gt;
&lt;span class="cm"&gt;hasGenericInformation&lt;/span&gt;
&lt;span class="cm"&gt;isBridge&lt;/span&gt;
&lt;span class="cm"&gt;isDefault&lt;/span&gt;
&lt;span class="cm"&gt;setMethodAccessor&lt;/span&gt;
&lt;span class="cm"&gt;specificToGenericStringHeader&lt;/span&gt;
&lt;span class="cm"&gt;specificToStringHeader&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="getting-a-method-object" style="font-size: 1.2em;"&gt;&lt;p #methodobject&gt;&lt;/p&gt; getting a Method object&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Load&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;get&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="nv"&gt;object&lt;/span&gt;

&lt;span class="nv"&gt;Class&lt;/span&gt; &lt;span class="nv"&gt;clazz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Class&lt;/span&gt;.&lt;span class="nv"&gt;forName&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;theGeekyWay.myClass&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;Method&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;clazz&lt;/span&gt;.&lt;span class="nv"&gt;getMethod&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;myPublicMethod&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;String&lt;/span&gt;.&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Note&lt;/span&gt;: &lt;span class="nv"&gt;getMethod&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;NoSuchMethodException&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;available&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; , &lt;span class="nv"&gt;SecurityException&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;accessible&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="invoking-methods-at-runtime" style="font-size: 1.2em;"&gt;&lt;p #invokemethod&gt;&lt;/p&gt;Invoking methods at Runtime&lt;/h2&gt;
&lt;p&gt;&lt;p style="font-family: courier new,courier;"&gt;public Object invoke(Object obj, Object... args) throws IllegalAccessException, IllegalArgumentException,&lt;/p&gt; &lt;p style="font-family: courier new,courier;"&gt;InvocationTargetException&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Method invoke take variable length parameter, so you need to provide parameter type and number of parameter as calling method.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="n"&gt;myclassobj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;Method&lt;/span&gt; &lt;span class="k"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myclassobj&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;myPublicMethod&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myclassobj&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;invoked a method through reflection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="k"&gt;method&lt;/span&gt; &lt;span class="n"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;IllegalAccessException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IllegalArgumentException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;InvocationTargetException&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If &lt;strong&gt;&lt;em&gt;method is static&lt;/em&gt;&lt;/strong&gt; just pass &lt;strong&gt; &lt;p style="font-family: courier new,courier;"&gt;null&lt;/p&gt;&lt;/strong&gt; in place of classObject&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;Class&lt;/span&gt; &lt;span class="n"&gt;clazz1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;theGeekyWay.MyClass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;Method&lt;/span&gt; &lt;span class="n"&gt;method1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clazz1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;aStaticMethod&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;No&lt;/span&gt; &lt;span class="n"&gt;mathod&lt;/span&gt; &lt;span class="k"&gt;parameter&lt;/span&gt;
&lt;span class="n"&gt;method1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Note&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;method&lt;/span&gt; &lt;span class="n"&gt;doesn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="k"&gt;any&lt;/span&gt; &lt;span class="k"&gt;parameter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="ways-of-loading-class-at-run-time-and-invoking-method-at-run-time" style="font-size: 1.2em;"&gt;&lt;p #ways&gt;&lt;/p&gt;Ways of loading class at run time and invoking method at run time&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;invoking&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;method&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;Reflection&lt;/span&gt;
        &lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;Class&lt;/span&gt; &lt;span class="n"&gt;clazz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;theGeekyWay.MyClass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;Method&lt;/span&gt; &lt;span class="k"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clazz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;myPublicMethod&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;theGeekyWay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;clazz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newInstance&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;invoked a method through reflection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NoSuchMethodException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InvocationTargetException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IllegalAccessException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ClassNotFoundException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InstantiationException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
        &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another way to load class at run time and call method&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;Class&lt;/span&gt; &lt;span class="n"&gt;clzz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;theGeekyWay.MyClass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;clzz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newInstance&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;myPublicMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;hkh........&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; 
        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InstantiationException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ClassNotFoundException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IllegalAccessException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Not sure what exactly the difference between these two ways of invoking method.  In both way  loading of class happening at runtime. In 1st way invoke is being used while in second ways object.method is being used.&lt;/p&gt;</content><category term="java"></category><category term="programming"></category></entry><entry><title>How play videos on Raspberry Pi - OMXPlayer</title><link href="//thegeekyway.com/play-videos-raspberry-pi-omxplayer/" rel="alternate"></link><published>2013-12-23T23:55:00+05:30</published><updated>2013-12-23T23:55:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-23:/play-videos-raspberry-pi-omxplayer/</id><summary type="html">&lt;p&gt;OMX player is a command line player which can be controlled via &lt;a href="#android"&gt;Android app&lt;/a&gt; or over &lt;a href="#SSH"&gt;SSH&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="omx-playercan-play-all-common-files-including-.avi-.mp4-and-mkv-without-any-extra-codec-with-subtitle." style="font-size: 1em; font-weight: 300;"&gt;OMX player can play all common files including .avi, .mp4 and mkv without any extra codec with subtitle.&lt;/h2&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/RaspberryPi_Logo-617x640.jpg" title="Raspberry Pi OMX Player"&gt;&lt;img alt="Raspberry Pi OMX Player" src="//thegeekyway.com/uploads/images/2013/12/RaspberryPi_Logo-617x640.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!--more--&gt;

&lt;h2 id="installing-omx-player" style="font-size: 1.2em;"&gt;Installing OMX Player&lt;/h2&gt;
&lt;p&gt;Download and install player from source&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;Stable&lt;/span&gt; &lt;span class="n"&gt;Build&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Already&lt;/span&gt; &lt;span class="n"&gt;added&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Raspbian …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;OMX player is a command line player which can be controlled via &lt;a href="#android"&gt;Android app&lt;/a&gt; or over &lt;a href="#SSH"&gt;SSH&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="omx-playercan-play-all-common-files-including-.avi-.mp4-and-mkv-without-any-extra-codec-with-subtitle." style="font-size: 1em; font-weight: 300;"&gt;OMX player can play all common files including .avi, .mp4 and mkv without any extra codec with subtitle.&lt;/h2&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/RaspberryPi_Logo-617x640.jpg" title="Raspberry Pi OMX Player"&gt;&lt;img alt="Raspberry Pi OMX Player" src="//thegeekyway.com/uploads/images/2013/12/RaspberryPi_Logo-617x640.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!--more--&gt;

&lt;h2 id="installing-omx-player" style="font-size: 1.2em;"&gt;Installing OMX Player&lt;/h2&gt;
&lt;p&gt;Download and install player from source&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;Stable&lt;/span&gt; &lt;span class="n"&gt;Build&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Already&lt;/span&gt; &lt;span class="n"&gt;added&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Raspbian&lt;/span&gt; &lt;span class="n"&gt;also&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ArcLinux&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;downloads&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;torarin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;omxplayer_0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;git20131216&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;b34143c_armhf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deb&lt;/span&gt;

&lt;span class="n"&gt;Experimental&lt;/span&gt; &lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Android&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="n"&gt;prefers&lt;/span&gt; &lt;span class="n"&gt;experimental&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;downloads&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;torarin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;omxplayer&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;omxplayer_3&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;git20121208&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;ebfa6fc6_armhf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deb&lt;/span&gt;

&lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;dpkg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;mxplayer_0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;git20131216&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;b34143c_armhf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;*Note: OMXPlayer will not play MPEG-2 files, you need purchase licence to play. *&lt;/p&gt;
&lt;p&gt;{#section style="font-size: 1.2em;"}&lt;/p&gt;
&lt;h2 id="get-android-app" style="font-size: 1.2em;"&gt;&lt;p #android&gt;&lt;/p&gt;Get Android App&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.raspberry.remote&amp;amp;hl=en"&gt;Raspberry Pi Remote Control Google Play link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open and connect as shown below&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/RaspberryPi.png"&gt;&lt;img alt="RaspberryPi" src="//thegeekyway.com/uploads/images/2013/12/RaspberryPi.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In path give  &lt;p style="font-family: 'courier new', courier;"&gt;/media &lt;/p&gt;(Any USB attached to it will be listed here). You can browse like file browser. Even to root. just select the file and click play.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Limitations:  &lt;/strong&gt;This app works sometime choppy but works well with Play/Stop. If doen't respond just wait for some time and use again. Keep in mind you are playing on card size machine not on high end desktop.&lt;/p&gt;
&lt;h2 id="control-raspberrypi-omxplayer-via-ssh" style="font-size: 1.2em;"&gt;&lt;p #SSH&gt;&lt;/p&gt;Control RaspberryPi / OMXPlayer via SSH&lt;/h2&gt;
&lt;p&gt;SSH should be enabled on raspi but if not you can enable it by following.&lt;/p&gt;
&lt;p&gt;Run: sudo raspi-config&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/raspi-config.png"&gt;&lt;img alt="raspi-config" src="//thegeekyway.com/uploads/images/2013/12/raspi-config.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Advance --&gt; SSH and enable it.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/SSH.png"&gt;&lt;img alt="SSH" src="//thegeekyway.com/uploads/images/2013/12/SSH.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For more info about &lt;a href="http://www.thegeekyway.com/raspberry-pi-change-password-auto-login-remote-desktop/" title="Raspberry Pi: Change Password, Auto Login and Remote Desktop"&gt;raspi-config and other configuration, see this tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, on your computer, open terminal Emulator (On Mac/Linux you already have it).&lt;/p&gt;
&lt;p&gt;For windows download small software for&lt;a href="http://www.putty.org/"&gt;Terminal Emulator,  &lt;strong&gt;PuTTy &lt;/strong&gt;&lt;/a&gt;, and open it.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/putty.png"&gt;&lt;img alt="putty" src="//thegeekyway.com/uploads/images/2013/12/putty.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(In host name or ip address, I already given &lt;strong&gt; &lt;p style="color: #ff0000;"&gt; &lt;p style="font-family: 'courier new', courier;"&gt;\&lt;userName\&gt;@\&lt;ip\&gt; &lt;/p&gt;&lt;/p&gt;&lt;/strong&gt;, So I don't have to give username again. it will only asks for password in next step.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Provide your password in next step, and you will land on home of pi in command prompt version. Here you can run any command which will be executed on Raspi directly.&lt;/p&gt;
&lt;p&gt;Now just browse to your media file and run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;omxplayer&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt; 

&lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nv"&gt;HDMI&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;video&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;audio&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;omxplayer&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;o&lt;/span&gt; &lt;span class="nv"&gt;hdmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/omxPlayer-command.png"&gt;&lt;img alt="omxPlayer-command" src="//thegeekyway.com/uploads/images/2013/12/omxPlayer-command.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here are some more OMXPlayer commands&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;http&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;lukasz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;skalski&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;.&lt;span class="nv"&gt;php&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;projekty&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;inne&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;raspberry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;raspberry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;android&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;device&lt;/span&gt;.&lt;span class="nv"&gt;html&lt;/span&gt;

# &lt;span class="nv"&gt;dpkg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;omxplayer_0&lt;/span&gt;.&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;arm&lt;/span&gt;.&lt;span class="nv"&gt;deb&lt;/span&gt;
####  .... &lt;span class="nv"&gt;fails&lt;/span&gt; &lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;missing&lt;/span&gt; &lt;span class="nv"&gt;dependencies&lt;/span&gt; ...
# &lt;span class="nv"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;get&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="nv"&gt;install&lt;/span&gt;
### &lt;span class="nv"&gt;fetches&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;missing&lt;/span&gt; &lt;span class="nv"&gt;dependencies&lt;/span&gt;, &lt;span class="nv"&gt;configures&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;sym&lt;/span&gt; &lt;span class="nv"&gt;links&lt;/span&gt; &lt;span class="nv"&gt;etc&lt;/span&gt;
$ &lt;span class="nv"&gt;omxplayer&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;help&lt;/span&gt;
&lt;span class="nv"&gt;Usage&lt;/span&gt;: &lt;span class="nv"&gt;omxplayer&lt;/span&gt; [&lt;span class="nv"&gt;OPTIONS&lt;/span&gt;] [&lt;span class="nv"&gt;FILE&lt;/span&gt;]
&lt;span class="nv"&gt;Options&lt;/span&gt; :
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;h&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;help&lt;/span&gt;                    &lt;span class="nv"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;help&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;alang&lt;/span&gt; &lt;span class="nv"&gt;language&lt;/span&gt;          &lt;span class="nv"&gt;audio&lt;/span&gt; &lt;span class="nv"&gt;language&lt;/span&gt;        : &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;g&lt;/span&gt;. &lt;span class="nv"&gt;ger&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;aidx&lt;/span&gt;  &lt;span class="nv"&gt;index&lt;/span&gt;             &lt;span class="nv"&gt;audio&lt;/span&gt; &lt;span class="nv"&gt;stream&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt;    : &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;g&lt;/span&gt;. &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;o&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;adev&lt;/span&gt;  &lt;span class="nv"&gt;device&lt;/span&gt;            &lt;span class="nv"&gt;audio&lt;/span&gt; &lt;span class="nv"&gt;out&lt;/span&gt; &lt;span class="nv"&gt;device&lt;/span&gt;      : &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;g&lt;/span&gt;. &lt;span class="nv"&gt;hdmi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;local&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;info&lt;/span&gt;                    &lt;span class="nv"&gt;dump&lt;/span&gt; &lt;span class="nv"&gt;stream&lt;/span&gt; &lt;span class="nv"&gt;format&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="k"&gt;exit&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;stats&lt;/span&gt;                   &lt;span class="nv"&gt;pts&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;buffer&lt;/span&gt; &lt;span class="nv"&gt;stats&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;passthrough&lt;/span&gt;             &lt;span class="nv"&gt;audio&lt;/span&gt; &lt;span class="nv"&gt;passthrough&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;deinterlace&lt;/span&gt;             &lt;span class="nv"&gt;deinterlacing&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;w&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;hw&lt;/span&gt;                      &lt;span class="nv"&gt;hw&lt;/span&gt; &lt;span class="nv"&gt;audio&lt;/span&gt; &lt;span class="nv"&gt;decoding&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt;                      &lt;span class="nv"&gt;switch&lt;/span&gt; &lt;span class="nv"&gt;tv&lt;/span&gt; &lt;span class="nv"&gt;into&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt; &lt;span class="nv"&gt;mode&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;hdmiclocksync&lt;/span&gt;           &lt;span class="nv"&gt;adjust&lt;/span&gt; &lt;span class="nv"&gt;display&lt;/span&gt; &lt;span class="nv"&gt;refresh&lt;/span&gt; &lt;span class="nv"&gt;rate&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;match&lt;/span&gt; &lt;span class="nv"&gt;video&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;sid&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt;               &lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="nv"&gt;subtitle&lt;/span&gt; &lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;refresh&lt;/span&gt;                 &lt;span class="nv"&gt;adjust&lt;/span&gt; &lt;span class="nv"&gt;framerate&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;resolution&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;video&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Play via SSH and feel like a pro.&lt;/p&gt;</content><category term="Raspberry Pi"></category></entry><entry><title>Vagrant up And Beyond!</title><link href="//thegeekyway.com/vagrant-beyond-2/" rel="alternate"></link><published>2013-12-23T16:28:00+05:30</published><updated>2013-12-23T16:28:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2013-12-23:/vagrant-beyond-2/</id><summary type="html">&lt;p&gt;When you are working on a project with a team, a big question is how to make them work on same environment? One solution is to make them work on same machine, but this gets messy as everyone is making changes. The other solution is to provide everyone with same …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When you are working on a project with a team, a big question is how to make them work on same environment? One solution is to make them work on same machine, but this gets messy as everyone is making changes. The other solution is to provide everyone with same environment. And that’s where Vagrant comes! In this tutorial we will learn how to use Vagrant.&lt;/p&gt;
&lt;p&gt;Vagrant gives you portable work environments which can be controlled by a pre-defined workflow. The idea is when you are working on a project and there are a lot of dependencies, configuration settings, scripts involved, you can combine them all up with vagrant and pass it around to be used by everyone. Let’s start with getting a VM up and running.&lt;/p&gt;
&lt;p&gt;Though Vagrant comes with default support for VirtualBox, it can be used with other providers too like VMware, AWS etc. Here I am using VirtualBox on Fedora 19 as provider. You can download and install VirtualBox from &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;here&lt;/a&gt;. Next step is to install Vagrant, which you can get from &lt;a href="http://www.vagrantup.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, after installing VirtualBox and Vagrant, you can add the box and run the machine. We will learn more about boxes, first run these two commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vagrant init precise32 http://files.vagrantup.com/precise32.box
$ vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It will take some time to set everything up and running the virtual machine. Now you can simply do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vagrant ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and you will be able to login in your virtual machine. Coming back to boxes, they are nothing but the base images, which are used to clone a virtual machine. This makes the process faster instead of running a machine from scratch.  You can also add new boxes to the vagrant environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vagrant box add precise32 http://files.vagrantup.com/precise32.box
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, how do you control the whole environment? Well, that’s why we have a Vagrantfile! The primary objective of a Vagrantfile is to describe the type, attributes etc. of the virtual machine. There is one Vagrantfile per project and it takes care of all the installation, script execution etc. When you do “vagrant init” in a directory, a Vagrantfile is placed there. Now, you can use this Vagrantfile to launch virtual machines from this directory. If you want to do it from another directory, you will first have to do “vagrant init” there or you would have to copy Vagrantfile in that directory.&lt;/p&gt;
&lt;p&gt;Vagrantfile can be ported from one platform to another. It is written in Ruby, but you don’t need to learn Ruby to specify attributes through it. Let’s say, after launching a machine, you want to run a shell script on it. The content of the Vagrantfile would be:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Screenshot-from-2013-12-23-152311.png"&gt;&lt;img alt="Screenshot from 2013-12-23 15:23:11" src="//thegeekyway.com/uploads/images/2013/12/Screenshot-from-2013-12-23-152311.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As you can see here, the name of the box and machine is fedora1 and I have given the provisioner as shell and the script that is going to run (after the virtual machine is booted) is bootstrap.sh. Here bootstrap.sh is present in the same directory, you can also give the absolute./relative path to you shell script. You can modify the Vagrant file and use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vagrant reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to reflect the changes in already running virtual machine.You only need to learn how to assign values to different variables to make new Vagrantfiles. This should be enough to get you started. To check out their documentation, please visit the official website &lt;a href="http://www.vagrantup.com"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Vagrant"></category><category term="VagrantFile"></category><category term="virtual machines"></category></entry><entry><title>Arduino Uno Pin Functions</title><link href="//thegeekyway.com/arduino-uno-pin-functions/" rel="alternate"></link><published>2013-12-23T10:23:00+05:30</published><updated>2013-12-23T10:23:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2013-12-23:/arduino-uno-pin-functions/</id><summary type="html">&lt;p&gt;Arduino Uno's Pin labelling is displayed in image below, and detailed function of each &amp;amp; every pin is mentioned below the image.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/ArduinoUno_R3_Front.jpg"&gt;&lt;img alt="Arduino Pin Functions" src="//thegeekyway.com/uploads/images/2013/12/ArduinoUno_R3_Front.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;PIN FUNCTIONS&lt;/strong&gt;&lt;/u&gt; &lt;strong&gt;:&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;USB To PC :&lt;/strong&gt; It is used to communicate Arduino via Universal Serial Bus to PC for programming/sending data to Arduino serially.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7V to 12V DC Input …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Arduino Uno's Pin labelling is displayed in image below, and detailed function of each &amp;amp; every pin is mentioned below the image.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/ArduinoUno_R3_Front.jpg"&gt;&lt;img alt="Arduino Pin Functions" src="//thegeekyway.com/uploads/images/2013/12/ArduinoUno_R3_Front.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;PIN FUNCTIONS&lt;/strong&gt;&lt;/u&gt; &lt;strong&gt;:&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;USB To PC :&lt;/strong&gt; It is used to communicate Arduino via Universal Serial Bus to PC for programming/sending data to Arduino serially.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7V to 12V DC Input :&lt;/strong&gt; For external supply, the voltage range of 7V to 12V DC is recommended. The 9V battery can be used to power your Arduino Uno board.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reset Button :&lt;/strong&gt; It Resets the Arduino board if pressed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ICSP :&lt;/strong&gt; Abbreviated as &lt;em&gt;In Circuit Serial Programming&lt;/em&gt; which consists of MOSI, MISO, SCK, RESET, VCC, GND. It is either used to program USB or Microcontroller (For UNO, ATmega 328P-PU). ICSP allows the user to program the microcontroller when it is in circuits, In Arduino UNO it allows to program ATmega328P-PU directly with AVR instructions without using Arduino IDE.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SDA :&lt;/strong&gt; Serial Data, It is the bidirectional data line that is used by I2C.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SCL :&lt;/strong&gt; Serial Clock, It is used to indicate that data is ready on bidirectional data line that is used by I2C.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AREF :&lt;/strong&gt; Analog Read Reference, It is mainly used for analogReference() function calls, as default it is not required but to use it you have to add some voltage source between 0V to 5V in AREF Pin which will be considered as accurate reference voltage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GND :&lt;/strong&gt; Ground.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SCK :&lt;/strong&gt; Serial Clock, which is used by SPI (Serial Peripheral Interface). It is clock generated by 'Master' which is used to clock the data to the 'Slave'.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MOSI :&lt;/strong&gt; Master Out Slave In, The data is transmitted from Master to Slave. (Master -&gt; Slave)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MISO :&lt;/strong&gt; Master In Slave Out, The data is transmitted to Master from Slave. (Slave -&gt; Master)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SS :&lt;/strong&gt; Slave Select, It is used to select the 'Slave'. Make high to SS pin to deactivate &amp;amp; make low to activate it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;INT1 &amp;amp; INT0 :&lt;/strong&gt; These are hardware interrupts, it calls the ISR (Interrupt Service Routine) when the pin change occurs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TX :&lt;/strong&gt; Transmit, It is used to transmit TTL serial data. It is also referred as 'outwards' since it 'transmits' data from Arduino to other connected peripheral device.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RX :&lt;/strong&gt; Receive, It is used to receive TTL serial data. IT is also referred as 'inwards' since it 'receives' data from external hardware to Arduino.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vin :&lt;/strong&gt; Voltage In, If you're powering your Arduino board from USB nothing is obtained from Vin pin. But, if you're powering the board with external supply then that supply is directly obtained from Vin pin. However, the supply obtained at Vin pin is usually lesser by 1V than voltage supplied to Power pin due to reverse polarity protection diode.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5V Pin :&lt;/strong&gt; It is used to power external components connected to Arduino which needs 5V.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.3V Pin :&lt;/strong&gt; It is used to power external components connected to Arduino which needs 3.3V&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IORef :&lt;/strong&gt; Input Output Voltage Reference, It allows shields connected to Arduino board to check whether the board is running at 3.3V or 5V.&lt;/p&gt;</content><category term="Arduino"></category><category term="Openhardware"></category></entry><entry><title>Raspberry Pi: Change Password, Auto Login and Remote Desktop</title><link href="//thegeekyway.com/raspberry-pi-change-password-auto-login-remote-desktop/" rel="alternate"></link><published>2013-12-22T00:56:00+05:30</published><updated>2013-12-22T00:56:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-22:/raspberry-pi-change-password-auto-login-remote-desktop/</id><summary type="html">&lt;p&gt;I have already given tutorial for &lt;a href="http://www.thegeekyway.com/raspberry-pi-how-to-install-and-first-boot/" title="Installation and first boot"&gt;RaspberryPi First Installation and Boot&lt;/a&gt;.  Let's go with advance configuration of RasPi.&lt;/p&gt;
&lt;h1 id="things-to-do-after-1st-boot-of-raspberry-pi" style="font-size: 1em;"&gt;Things to do after 1st boot of Raspberry Pi&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#changePass"&gt;Changing Default Password&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#AddUser"&gt;Adding New User to Raspi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#autoLogin"&gt;Auto Login to GUI without Entering username/password&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Remote"&gt;Setting up Remote Desktop: Connect Raspi from …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I have already given tutorial for &lt;a href="http://www.thegeekyway.com/raspberry-pi-how-to-install-and-first-boot/" title="Installation and first boot"&gt;RaspberryPi First Installation and Boot&lt;/a&gt;.  Let's go with advance configuration of RasPi.&lt;/p&gt;
&lt;h1 id="things-to-do-after-1st-boot-of-raspberry-pi" style="font-size: 1em;"&gt;Things to do after 1st boot of Raspberry Pi&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#changePass"&gt;Changing Default Password&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#AddUser"&gt;Adding New User to Raspi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#autoLogin"&gt;Auto Login to GUI without Entering username/password&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Remote"&gt;Setting up Remote Desktop: Connect Raspi from another computer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="changing-default-password" style="font-size: 1.3em;"&gt;&lt;p #changePass&gt;&lt;/p&gt;1. Changing Default Password&lt;/h2&gt;
&lt;p&gt;Open terminal and run following command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;raspi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will see following screen. Navigate using  &lt;p style="font-family: 'courier new', courier;"&gt;arrow keys&lt;/p&gt; and  &lt;p style="font-family: 'courier new', courier;"&gt;tab.&lt;/p&gt; Hit &lt;p style="font-family: 'courier new', courier;"&gt; Enter&lt;/p&gt; to select .&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/raspi-config.png"&gt;&lt;img alt="raspi-config" src="//thegeekyway.com/uploads/images/2013/12/raspi-config.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On selecting  &lt;p style="font-family: 'courier new', courier;"&gt;Change User Password&lt;/p&gt; , Hit  &lt;p style="font-family: 'courier new', courier;"&gt;Enter&lt;/p&gt; to give new password.&lt;/p&gt;
&lt;h2 id="adding-new-user-to-pi" style="font-size: 1.3em;"&gt;&lt;p #AddUser&gt;&lt;/p&gt;2. Adding new user to Pi:&lt;/h2&gt;
&lt;p&gt;To add new user just run following command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;adduser&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It will create a new user and asks for password, Create password for new user here.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/raspi-addUser.png"&gt;&lt;img alt="raspi-addUser" src="//thegeekyway.com/uploads/images/2013/12/raspi-addUser.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="raspi-auto-login-to-gui-without-entering-usernamepassword" style="font-size: 1.3em;"&gt;&lt;p #autoLogin&gt;&lt;/p&gt;3. Raspi Auto Login to GUI without entering username/password&lt;/h2&gt;
&lt;p&gt;Run again following command and select  &lt;p style="font-family: 'courier new', courier;"&gt;Enable boot to Desktop/S&lt;/p&gt; &lt;p style="font-family: 'courier new', courier;"&gt;cratch and select 2nd option&lt;/p&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;raspi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Auto-Login-GUI.png"&gt;&lt;img alt="Auto-Login-GUI" src="//thegeekyway.com/uploads/images/2013/12/Auto-Login-GUI.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h5 id="auto-login-using-command-version" style="font-size: 1em;"&gt;Auto-Login using Command version&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;sudo&lt;/span&gt; &lt;span class="nv"&gt;nano&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;inittab&lt;/span&gt;

&lt;span class="cm"&gt;/*Find following line*/&lt;/span&gt;

&lt;span class="mi"&gt;1&lt;/span&gt;:&lt;span class="mi"&gt;2345&lt;/span&gt;:&lt;span class="nv"&gt;respawn&lt;/span&gt;:&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;getty&lt;/span&gt; &lt;span class="mi"&gt;115200&lt;/span&gt; &lt;span class="nv"&gt;tty1&lt;/span&gt;

&lt;span class="cm"&gt;/*and comment it by adding # in front of it*/&lt;/span&gt;

&lt;span class="sc"&gt;#1&lt;/span&gt;:&lt;span class="mi"&gt;2345&lt;/span&gt;:&lt;span class="nv"&gt;respawn&lt;/span&gt;:&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;getty&lt;/span&gt; &lt;span class="mi"&gt;115200&lt;/span&gt; &lt;span class="nv"&gt;tty1&lt;/span&gt;

&lt;span class="cm"&gt;/*After that add new line with following content*/&lt;/span&gt;

&lt;span class="mi"&gt;1&lt;/span&gt;:&lt;span class="mi"&gt;2345&lt;/span&gt;:&lt;span class="nv"&gt;respawn&lt;/span&gt;:&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;login&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="nv"&gt;pi&lt;/span&gt; &lt;span class="nv"&gt;tty1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;tty1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="cm"&gt;/*Ctrl+X to exit, Y to save followed by enter twice*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5 id="auto-start-to-gui" style="font-size: 1em;"&gt;Auto Start to GUI&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*Edit rc.local using following line*/&lt;/span&gt;

&lt;span class="nv"&gt;sudo&lt;/span&gt; &lt;span class="nv"&gt;nano&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;rc&lt;/span&gt;.&lt;span class="nv"&gt;local&lt;/span&gt;

&lt;span class="cm"&gt;/*Scroll to the end and add the following above exit 0:*/&lt;/span&gt;

&lt;span class="nv"&gt;su&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;l&lt;/span&gt; &lt;span class="nv"&gt;pi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt; &lt;span class="nv"&gt;startx&lt;/span&gt;

&lt;span class="cm"&gt;/*Ctrl+X to exit, Y to save followed by enter twice*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="raspi-setup-remote-desktop-from-windows-machine" style="font-size: 1.3em;"&gt;&lt;p #Remote&gt;&lt;/p&gt;4. Raspi Setup Remote Desktop from windows machine&lt;/h2&gt;
&lt;p&gt;Step 1:  In Respi open  terminal and run following command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;xrdp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It will install  &lt;p style="font-family: 'courier new', courier;"&gt;xrdp on respi, which will be automatically started on boot up. &lt;/p&gt;After installing xrdp, reboot your pi and you can verify in boot process, you can see following line&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p style="font-family: 'courier new', courier;"&gt;xrdp sesman&lt;/p&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Step2: Open Remote control application from windows (Run --&gt; mstsc) , Enter local IP of respi and proceed.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/MS-RemoteDesktop.png"&gt;&lt;img alt="MS-RemoteDesktop" src="//thegeekyway.com/uploads/images/2013/12/MS-RemoteDesktop.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After successful connection xVnc will ask to authorize at raspberry pi&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Respi-Sesman-xvnc.png"&gt;&lt;img alt="Respi-Sesman-xvnc" src="//thegeekyway.com/uploads/images/2013/12/Respi-Sesman-xvnc.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On successful login to xVnc you will see following screen and  then Raspberry pi on your another machine&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/raspi-remote-login.png"&gt;&lt;img alt="raspi-remote-login" src="//thegeekyway.com/uploads/images/2013/12/raspi-remote-login.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="control-raspberry-pi-over-ssh-see-this-tutorial" style="font-size: 1.3em;"&gt;&lt;a href="http://www.thegeekyway.com/play-vidoes-raspberry-pi-omxplayer/#SSH" title="http://www.thegeekyway.com/play-vidoes-raspberry-pi-omxplayer/#SSH"&gt;Control Raspberry Pi over SSH:  See this Tutorial&lt;/a&gt;&lt;/h2&gt;</content><category term="linux"></category><category term="Raspberry Pi"></category></entry><entry><title>CSS3 Animations: Getting started</title><link href="//thegeekyway.com/css3-animations-getting-started/" rel="alternate"></link><published>2013-12-21T00:34:00+05:30</published><updated>2013-12-21T00:34:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-21:/css3-animations-getting-started/</id><summary type="html">&lt;p&gt;CSS animations is a great tool design website in very cool fashion without any gif images and reduced page size.&lt;br&gt;
~(Keep\ in\ mind\ IE8\ and\ IE9\ are\ stone\ age\ browsers\ and\ CSS3\ animation\ won't\ work\ with\ it).~&lt;br&gt;
There are two basic keyword used to generate animations using  &lt;p style="font-family: 'courier new', courier;"&gt;animation&lt;/p&gt; and &lt;p style="font-family: 'courier new', courier;"&gt; \@keyframes …&lt;/p&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;CSS animations is a great tool design website in very cool fashion without any gif images and reduced page size.&lt;br&gt;
~(Keep\ in\ mind\ IE8\ and\ IE9\ are\ stone\ age\ browsers\ and\ CSS3\ animation\ won't\ work\ with\ it).~&lt;br&gt;
There are two basic keyword used to generate animations using  &lt;p style="font-family: 'courier new', courier;"&gt;animation&lt;/p&gt; and &lt;p style="font-family: 'courier new', courier;"&gt; \@keyframes&lt;/p&gt; .&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Example:  Animation Demo&lt;br&gt;
&lt;iframe width="100%" height="350px" src="http://codepen.io/ianoop/embed/ndvrm" scrollbar="none"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p style="font-family: 'courier new', courier;"&gt;*&lt;em&gt;animation: \&lt;animationName\&gt; \&lt;animationTime\&gt; \&lt;numberOfAnimation\&gt;** :&lt;/p&gt;&lt;/em&gt;  Defined as class property&lt;br&gt;
&lt;strong&gt;&lt;em&gt; &lt;p style="font-family: 'courier new', courier;"&gt;\@keyframes  :&lt;/p&gt;&lt;/em&gt;&lt;/strong&gt;  A Rule which define your animation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: you need to add &lt;strong&gt;&lt;em&gt;-webkit-&lt;/em&gt;&lt;/strong&gt; suffix to above properties in order to work in Chrome and safari.&lt;/p&gt;
&lt;p&gt;One more a simple CSS3 loader like Facebook loading&lt;br&gt;
&lt;iframe width="100%" height="350px" src="http://codepen.io/ianoop/embed/LeqAh" scrollbar="none"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h5&gt;How does it works:&lt;/h5&gt;
&lt;p&gt;See in HTML and CSS tab, there is 3 divs and only one  &lt;p style="font-family: courier new,courier;"&gt;\@keyframes &lt;/p&gt;rule has been applied. Only difference is delay in animation.&lt;/p&gt;
&lt;p&gt;&lt;p style="font-family: courier new,courier;"&gt;Infinite&lt;/p&gt; property allowing this animation to run in infinite loop.&lt;/p&gt;
&lt;p&gt;One more thing is noticeable is  &lt;p style="font-family: courier new,courier;"&gt;alternate&lt;/p&gt; property in  &lt;p style="font-family: courier new,courier;"&gt;animation&lt;/p&gt;. watch carefully 2st div it is completing animation and then again going in reverse direction which is making this animation smooth.&lt;/p&gt;
&lt;p&gt;Note: Infinite animation is not working after embedding. Please click on Edit this pen to open at CodePen.&lt;/p&gt;</content><category term="CSS"></category></entry><entry><title>Raspberry Pi - How to install and first boot</title><link href="//thegeekyway.com/raspberry-pi-how-to-install-and-first-boot/" rel="alternate"></link><published>2013-12-18T23:01:00+05:30</published><updated>2013-12-18T23:01:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-18:/raspberry-pi-how-to-install-and-first-boot/</id><summary type="html">&lt;p&gt;Installing and setting up &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; is fairly easy in following steps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buy RasPi from &lt;a href="www.element14.com"&gt;Element14&lt;/a&gt;  / (&lt;a href="http://www.crazypi.com/"&gt;CrazyPi&lt;/a&gt;in India)&lt;/li&gt;
&lt;li&gt;Get a SD card (&gt;4GB) and format in FAT32 system (&lt;a href="#windowsformat"&gt;Windows Method&lt;/a&gt; / &lt;a href="#LinuxFormat"&gt;Linux Method&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Download &lt;a href="http://www.raspberrypi.org/downloads"&gt;NOOB version of Raspberry Pi from here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract and copy everything in your SD card&lt;/li&gt;
&lt;li&gt;Plug …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Installing and setting up &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; is fairly easy in following steps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buy RasPi from &lt;a href="www.element14.com"&gt;Element14&lt;/a&gt;  / (&lt;a href="http://www.crazypi.com/"&gt;CrazyPi&lt;/a&gt;in India)&lt;/li&gt;
&lt;li&gt;Get a SD card (&gt;4GB) and format in FAT32 system (&lt;a href="#windowsformat"&gt;Windows Method&lt;/a&gt; / &lt;a href="#LinuxFormat"&gt;Linux Method&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Download &lt;a href="http://www.raspberrypi.org/downloads"&gt;NOOB version of Raspberry Pi from here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract and copy everything in your SD card&lt;/li&gt;
&lt;li&gt;Plug your HDTV/Monitor using HDMI cable / RCA Cable&lt;/li&gt;
&lt;li&gt;Plug the power using any micro USB mobile charger (5v , 0.7 A)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;strong&gt; Components of Raspberry-Pi&lt;/strong&gt;&lt;/h5&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/RaspberryPi.jpg"&gt;&lt;img alt="RaspberryPi" src="//thegeekyway.com/uploads/images/2013/12/RaspberryPi.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;strong&gt;Preparing your SD card for installing Linux variant for RasPi.&lt;/strong&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h5&gt;&lt;p #LinuxFormat&gt;&lt;/p&gt;Linx Method:&lt;/h5&gt;
&lt;p&gt;Install &lt;a href="http://gparted.org/"&gt;Gparted utility&lt;/a&gt; using following command&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p style="font-family: 'courier new', courier;"&gt;sudo apt-get install gparted&lt;/p&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and Run&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p style="font-family: 'courier new', courier;"&gt;sudo gparted&lt;/p&gt;*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should be able to see following screen and just select your SD card and format to FAT32.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/gParted.png"&gt;&lt;img alt="gParted" src="//thegeekyway.com/uploads/images/2013/12/gParted.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h5&gt;&lt;p #windowsformat&gt;&lt;/p&gt;Windows Method:&lt;/h5&gt;
&lt;p&gt;Use &lt;a href="https://www.sdcard.org/downloads/formatter_4/"&gt;SDFormatter&lt;/a&gt;and select your SD drive and just go for format.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Capture1.png"&gt;&lt;img alt="SD Formatter" src="//thegeekyway.com/uploads/images/2013/12/Capture1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After formatting just extract downloaded&lt;a href="http://www.raspberrypi.org/downloads"&gt;NOOB version&lt;/a&gt;and copy to your SD card.&lt;/p&gt;
&lt;p&gt;Now plugin your RasPi to Tv/Monitor using HDMI or RCA Video cable. To connect VGA monitor you can use &lt;em&gt;&lt;a href="http://www.thegeekyway.com/connect-raspberry-pi-vga-monitortv/"&gt;converter given in this tutorial&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/connect-raspberry-pi-vga-monitortv/"&gt;Power with *micro usb mobile charger *&lt;/a&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/microUSB.jpg"&gt;&lt;img alt="microUSB" src="//thegeekyway.com/uploads/images/2013/12/microUSB.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Note: Please check your charger specification it should be  5 V and ampere range between 0.7-1.2A.&lt;/p&gt;
&lt;p&gt;Power on your charger and you should be able to see following screen after some time&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Raspi_Options.png"&gt;&lt;img alt="Raspi_Options" src="//thegeekyway.com/uploads/images/2013/12/Raspi_Options-1024x970.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Select Raspbian as recommended and proceed.&lt;/p&gt;
&lt;p&gt;Note down default  &lt;p style="font-family: 'courier new', courier;"&gt;user/password : pi/raspberry&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Note: If you go ahead with default option you will be in command line without any GUI. to change into GUI you just have to run command &lt;strong&gt;&lt;em&gt; &lt;p style="font-family: 'courier new', courier; color: #0000ff;"&gt;startx &lt;/p&gt;&lt;/em&gt;&lt;/strong&gt;and you will get your GUI desktop.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/raspi.png"&gt;&lt;img alt="raspi" src="//thegeekyway.com/uploads/images/2013/12/raspi.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Raspi has only two USB port , you should be using it for keyboard and mouse for initial setup.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SD Card&lt;/strong&gt;: Faster SD card is recommended, should be Class 10.&lt;/p&gt;</content><category term="linux"></category><category term="Raspberry Pi"></category></entry><entry><title>OpenStack - Understanding The Architecture</title><link href="//thegeekyway.com/openstack-understanding-architecture/" rel="alternate"></link><published>2013-12-18T15:04:00+05:30</published><updated>2013-12-18T15:04:00+05:30</updated><author><name>Peeyush_Gupta</name></author><id>tag:thegeekyway.com,2013-12-18:/openstack-understanding-architecture/</id><summary type="html">&lt;p&gt;OpenStack is a cloud computing project to provide an Infrastructure as a Service(IaaS), jointly launched by RackSpace and NASA. A collection of open-source technologies combined together make it a massively scalable cloud operating system. One big quality of OpenStack is it’s simplicity, anyone can easily tie-up different hosts …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OpenStack is a cloud computing project to provide an Infrastructure as a Service(IaaS), jointly launched by RackSpace and NASA. A collection of open-source technologies combined together make it a massively scalable cloud operating system. One big quality of OpenStack is it’s simplicity, anyone can easily tie-up different hosts and provide cloud storage. Openstack has become a big phenomenon in past three years since its launch in 2010. It has its reach to almost every tech giant with more than 10,000 developers working on it.&lt;/p&gt;
&lt;p&gt;Before we start discussing anything, the very first thing is to deploy OpenStack. Yes, it is that easy! You can deploy it without any knowledge of underlying architecture. Go to &lt;a href="http://www.devstack.org"&gt;Devstack&lt;/a&gt;, run the script and you are done!&lt;/p&gt;
&lt;p&gt;Now, the code of OpenStack is quite large, with more than 1.5 million lines of code. Fortunately, it has a good modular design. In this article, I would be discussing about the architecture of OpenStack. OpenStack has a modular architecture and is divided into 7 components. We will discuss them one by one. The name in the parentheses are the code-names for respective services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) Openstack Compute(Nova)&lt;/strong&gt;: It is the central brain unit of the system. Nova is responsible to get the requests from user, choosing an appropriate host and running the instance on that host. It is a big component which uses the underlying hypervisor technology like KVM, qemu etc. It is designed to manage and automate pools of computer resources. Nova is also further divided into different parts including nova-volume, nova-network, nova-scheduler etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) OpenStack Object Storage(Swift)&lt;/strong&gt;: Swift is a scalable redundant storage system. It is responsible for keeping the data safe. Swift is a reliable data storage that maintains a number of replicas of the data and also ensures integrity. New storage can be easily added using swift.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) OpenStack Block Storage(Cinder)&lt;/strong&gt;: When user spawns an instance, she also needs some persistent block storage to work with. Here comes the cinder! It manages the creation, attaching and detaching of the block devices to servers. It can also be used to creates snapshots for backing up the data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4) OpenStack Networking(Neutron)&lt;/strong&gt;: Neutron (formerly known as Quantum), is responsible for managing networks and IP addresses. It can manage the networks in three ways: using flat network manager, flat DHCP network manager or VLAN network manager. Neutron is capable of providing both fixed and flexible IPs to the instances.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5)&lt;/strong&gt; &lt;strong&gt;OpenStack Dashboard(Horizon)&lt;/strong&gt;: Horizon provides administrators and users a graphical interface to access, provision and automate cloud-based resources. This web-based dashboard has a lot of features that make launching of an instance and administrating an easy task.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6)&lt;/strong&gt; &lt;strong&gt;OpenStack Identity (Keystone)&lt;/strong&gt;: Keystone is the one stop point of authentication. To access some features, or to initiate some tasks, users/services needs to authenticate themselves first. The idea behind keystone is to make the authentication process centralized. No matter the user, the admin or any project, everyone has to go through keystone first. Keystone supports several modes of authentication including the standard username-password matching and token based authentication.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7)&lt;/strong&gt; &lt;strong&gt;OpenStack Image Service(Glance)&lt;/strong&gt;: Glance is a service dedicated to the operations of disk and server images. It provides discovery, registration and delivery services for the images. Glance supports several formats like qcow2, vmdk etc. It can store the images in any of the back-ends like OpenStack Object Storage.&lt;/p&gt;</content><category term="Cloud Computing"></category><category term="Nova"></category><category term="Openstack"></category><category term="Openstack Architecture"></category></entry><entry><title>Learn C - More about variables</title><link href="//thegeekyway.com/learn-c-variables/" rel="alternate"></link><published>2013-12-16T11:51:00+05:30</published><updated>2013-12-16T11:51:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2013-12-16:/learn-c-variables/</id><summary type="html">&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
P { margin-bottom: 0.08in; }&lt;br /&gt;
--&gt;&lt;/style&gt;

&lt;p&gt;Welcome to your next tutorial on the Learn C language, here we'll have a deeper look at the use of variables in C language. In previous &lt;a href="http://www.thegeekyway.com/variables-in-c/" title="Learning about Variables in C"&gt;tutorial about variables in C&lt;/a&gt;, we defined a variable sam of integer type and then initialized it with …&lt;/p&gt;</summary><content type="html">&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
P { margin-bottom: 0.08in; }&lt;br /&gt;
--&gt;&lt;/style&gt;

&lt;p&gt;Welcome to your next tutorial on the Learn C language, here we'll have a deeper look at the use of variables in C language. In previous &lt;a href="http://www.thegeekyway.com/variables-in-c/" title="Learning about Variables in C"&gt;tutorial about variables in C&lt;/a&gt;, we defined a variable sam of integer type and then initialized it with a value (10), this can be done in simpler manner in just one line. If you haven't read the previous tutorial, then please read it first, and you can read the &lt;a href="http://www.thegeekyway.com/category/programming/c/"&gt;Learn C tutorial Series&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Declaration and Initialization together :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So, we'll have a look at how to do this :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above statement, I have declared my integer type variable named sam, and then initialised it with a value.&lt;/p&gt;
&lt;p&gt;So, I had two options, one to do something like mentioned above, or have declaration in one line and initialization in other as :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we'll see how to take values from our user&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Accepting values from user :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We can store values in our variables depending on choice of end user. This is done through a function know as scanf() and is defined under header file stdio.h (Standard Input/Output). We first define a variable named value.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we'll accept input form user as :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note : scanf() function is somewhat like printf function defined before, but with the function name it's necessary to have ampersand (&amp;amp;) before variable name. This operator is used for reference, in simple terms, this helps in passing the address of memory location that is reserved for our new variable. We'll discuss about these things in detail in later tutorial, till now, just see it's done in this way.&lt;/p&gt;
&lt;p&gt;Note: scanf() function should always contain ampersand before your variable name.&lt;/p&gt;
&lt;p&gt;Now, we'll write a program here which will accept an input from user and then print the same on the screen.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
  &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;“&lt;span class="nv"&gt;Enter&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt; : “&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;scanf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;“&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt;” , &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;“&lt;span class="nv"&gt;Value&lt;/span&gt; &lt;span class="nv"&gt;entered&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt;”,&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above code snippet would produce the following output :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/C_TUT_2.1.png" title="Output for learning about variables in C"&gt;&lt;img alt="Learn C variables Program Output" src="//thegeekyway.com/uploads/images/2013/12/C_TUT_2.1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Note: Output compiled in Turbo C with DosBox for Windows, rather than gcc.&lt;/p&gt;
&lt;p&gt;Note here, that whatever value end user enters, the same is printed on the screen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Accepting user Input and displaying output for variables of different data types :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now, we'll see how you can accept and return different types of variables :&lt;/p&gt;
&lt;p&gt;For character type variable , you can do as :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;char&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For float type variable, you can do as :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="n"&gt;fvar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;fvar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fvar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And so on, you can accept and return the values in variables of different kinds, what you have to remember is , you have to specify the placeholders in C in order to enter and retrieve values in variables, and if you want to accept input, use scanf function with ampersand, and for output use just variable name.&lt;/p&gt;
&lt;p&gt;In the next tutorial we'll learn about Operators in C, what they are used for, and then with help of operators manipulate the values stored in variable, and implement all this through a small program to understand about what all we've discussed in these tutorials.&lt;/p&gt;
&lt;p&gt;If you like the posts, don't forget to share this with your friends. For any doubts, let us know through comments, we'll answer you and clear your doubts ASAP.&lt;/p&gt;</content><category term="C language"></category><category term="Learn C"></category><category term="variables"></category></entry><entry><title>Java 7 : Try-with-resources - Close resources automatically with AutoCloseable interface</title><link href="//thegeekyway.com/java-7-try-resources-close-resources-automatically-autocloseable-interface/" rel="alternate"></link><published>2013-12-15T21:19:00+05:30</published><updated>2013-12-15T21:19:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-15:/java-7-try-resources-close-resources-automatically-autocloseable-interface/</id><summary type="html">&lt;p&gt;Every time we write code with FileInputStream,  &lt;p style="font-family: courier new,courier;"&gt;BufferReader&lt;/p&gt;  etc. we need to close those resource explicitly in finally block.&lt;/p&gt;
&lt;p&gt;Now from Java 7, there are two interfaces included  &lt;p style="font-family: courier new,courier;"&gt;Closeable&lt;/p&gt; and  &lt;p style="font-family: courier new,courier;"&gt;AutoCloseable&lt;/p&gt; with single abstract method  &lt;p style="font-family: courier new,courier;"&gt;close(),&lt;/p&gt;  which enables implementing class to close resources aromatically after try block.&lt;/p&gt;
&lt;p&gt;Lets see how …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every time we write code with FileInputStream,  &lt;p style="font-family: courier new,courier;"&gt;BufferReader&lt;/p&gt;  etc. we need to close those resource explicitly in finally block.&lt;/p&gt;
&lt;p&gt;Now from Java 7, there are two interfaces included  &lt;p style="font-family: courier new,courier;"&gt;Closeable&lt;/p&gt; and  &lt;p style="font-family: courier new,courier;"&gt;AutoCloseable&lt;/p&gt; with single abstract method  &lt;p style="font-family: courier new,courier;"&gt;close(),&lt;/p&gt;  which enables implementing class to close resources aromatically after try block.&lt;/p&gt;
&lt;p&gt;Lets see how it works.&lt;/p&gt;
&lt;p&gt;Conventional way of using FileInputStream&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;File&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;File&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;C:\Document1.txt&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;InputStream&lt;/span&gt; &lt;span class="nv"&gt;fis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;null&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;try&lt;/span&gt;
        {
            &lt;span class="nv"&gt;fis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;FileInputStream&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt;.&lt;span class="nv"&gt;getAbsolutePath&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;readLocation&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;readLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;fis&lt;/span&gt;.&lt;span class="nv"&gt;read&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;char&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;readLocation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
        } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;IOException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        } &lt;span class="nv"&gt;finally&lt;/span&gt;{
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fis&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;null&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="nv"&gt;try&lt;/span&gt; {
                    &lt;span class="nv"&gt;fis&lt;/span&gt;.&lt;span class="nv"&gt;close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;IOException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                    &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                }
            }
        }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now with using Try-with-Resource&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;try&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InputStream&lt;/span&gt; &lt;span class="nv"&gt;fileInputStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;FileInputStream&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;File&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;C:\Document1.txt&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)))&lt;/span&gt;   {
            &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;readLocation&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;readLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;fileInputStream&lt;/span&gt;.&lt;span class="nv"&gt;read&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;char&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;readLocation&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
        } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;IOException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;How it works:&lt;/h4&gt;
&lt;p&gt;Compare the changes. Initialization, of resource which needs to be close, happening with try and there is no finally block to close. &lt;a href="http://docs.oracle.com/javase/6/docs/api/java/io/FileInputStream.html" title="Java Doc"&gt;FileInputStream&lt;/a&gt; implements &lt;a href="http://docs.oracle.com/javase/6/docs/api/java/io/Closeable.html" title="interface in java.io"&gt;Closeable&lt;/a&gt; which have following code in method  &lt;p style="font-family: 'courier new', courier;"&gt;close()&lt;/p&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;IOException&lt;/span&gt; {
        &lt;span class="nv"&gt;synchronized&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;closeLock&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;closed&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="nv"&gt;closed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;null&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;             * Decrement the FD use count associated with the channel&lt;/span&gt;
&lt;span class="cm"&gt;             * The use count is incremented whenever a new channel&lt;/span&gt;
&lt;span class="cm"&gt;             * is obtained from this stream.&lt;/span&gt;
&lt;span class="cm"&gt;             */&lt;/span&gt;
           &lt;span class="nv"&gt;fd&lt;/span&gt;.&lt;span class="nv"&gt;decrementAndGetUseCount&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
           &lt;span class="nv"&gt;channel&lt;/span&gt;.&lt;span class="nv"&gt;close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }

        &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;         * Decrement the FD use count associated with this stream&lt;/span&gt;
&lt;span class="cm"&gt;         */&lt;/span&gt;
        &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;useCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;fd&lt;/span&gt;.&lt;span class="nv"&gt;decrementAndGetUseCount&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;         * If FileDescriptor is still in use by another stream, the finalizer&lt;/span&gt;
&lt;span class="cm"&gt;         * will not close it.&lt;/span&gt;
&lt;span class="cm"&gt;         */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;useCount&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;isRunningFinalize&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt; {
            &lt;span class="nv"&gt;close0&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that you can still use  &lt;p style="font-family: courier new,courier;"&gt;finally&lt;/p&gt; block if you want.&lt;/p&gt;
&lt;h4&gt;Closeable vs AutoCloseable&lt;/h4&gt;
&lt;p&gt;Here is the code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AutoCloseable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Closes this resource, relinquishing any underlying resources.&lt;/span&gt;
&lt;span class="cm"&gt;     * This method is invoked automatically on objects managed by the&lt;/span&gt;
&lt;span class="cm"&gt;     * {@code try}-with-resources statement.&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;interface&lt;/span&gt; &lt;span class="nv"&gt;Closeable&lt;/span&gt; &lt;span class="nv"&gt;extends&lt;/span&gt; &lt;span class="nv"&gt;AutoCloseable&lt;/span&gt; {

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Closes this stream and releases any system resources associated&lt;/span&gt;
&lt;span class="cm"&gt;     * with it. If the stream is already closed then invoking this&lt;/span&gt;
&lt;span class="cm"&gt;     * method has no effect.&lt;/span&gt;
&lt;span class="cm"&gt;     *&lt;/span&gt;
&lt;span class="cm"&gt;     * @throws IOException if an I/O error occurs&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;IOException&lt;/span&gt;&lt;span class="c1"&gt;; &lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hope it clears out when to use AutoCloseable and Closeable..&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html"&gt;Oracle Page for Try-With-Resources&lt;/a&gt;&lt;/p&gt;</content><category term="java"></category></entry><entry><title>Java 7: Binary literal type</title><link href="//thegeekyway.com/java-7-binary-literal-type/" rel="alternate"></link><published>2013-12-15T17:21:00+05:30</published><updated>2013-12-15T17:21:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-15:/java-7-binary-literal-type/</id><summary type="html">&lt;p&gt;From Java 7 Binary type also joins the category of literal with * &lt;p style="font-family: 'courier new', courier;"&gt;byte, short, int and long&lt;/p&gt;.* Which means a binary value can be assigned  by using &lt;strong&gt;&lt;em&gt;0b &lt;/em&gt;&lt;/strong&gt;or&lt;strong&gt;&lt;em&gt; 0B  &lt;/em&gt;&lt;/strong&gt;prefix to a  primitive type.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What is a Literal&lt;/strong&gt; :  A literal is source code representation of source code. Which can …&lt;/p&gt;</summary><content type="html">&lt;p&gt;From Java 7 Binary type also joins the category of literal with * &lt;p style="font-family: 'courier new', courier;"&gt;byte, short, int and long&lt;/p&gt;.* Which means a binary value can be assigned  by using &lt;strong&gt;&lt;em&gt;0b &lt;/em&gt;&lt;/strong&gt;or&lt;strong&gt;&lt;em&gt; 0B  &lt;/em&gt;&lt;/strong&gt;prefix to a  primitive type.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What is a Literal&lt;/strong&gt; :  A literal is source code representation of source code. Which can be directly assigned to any &lt;em&gt;primitive&lt;/em&gt; type.&lt;/p&gt;
&lt;p&gt;Try following in your code with JDK1.7+&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;intType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="nb"&gt;char&lt;/span&gt; &lt;span class="n"&gt;charType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;B1100001&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Why Binary Literals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No need to translate binary value to integer to use them.&lt;/li&gt;
&lt;li&gt;Benefit to programs where bit per bit operation is required.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other literal type are following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;char&lt;/span&gt; &lt;span class="n"&gt;capitalC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/*Character type or you can use unicode &amp;#39;u0043&amp;#39; */&lt;/span&gt;
&lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="cm"&gt;/* byte limit is -128 to 127*/&lt;/span&gt;
&lt;span class="n"&gt;short&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* short limit is -32768 to 32767*/&lt;/span&gt;
&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="cm"&gt;/*int limit is -2^31 to 2^31 - 1*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One more feature introduced related to primitive type.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Underscore in integer type&lt;/strong&gt;: To improve readability of code in integer delimiters.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;newInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="n"&gt;_00_00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="n"&gt;newfloat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="n"&gt;_34_67f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="java"></category></entry><entry><title>Maintaining Sessions in Asp.net</title><link href="//thegeekyway.com/sessions-in-asp-net/" rel="alternate"></link><published>2013-12-14T01:33:00+05:30</published><updated>2013-12-14T01:33:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2013-12-14:/sessions-in-asp-net/</id><summary type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/aspnet_sessions.jpg"&gt;&lt;img alt="aspnet_sessions" src="//thegeekyway.com/uploads/images/2013/12/aspnet_sessions.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Session is amongst the most important part in creating asp.net applications. It is a variable where you can put data between page requests when the pages are either posting or redirecting to each other. It can contain small amount of data containing string, complex arrays or numbers.&lt;/p&gt;
&lt;p&gt;In Asp …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/aspnet_sessions.jpg"&gt;&lt;img alt="aspnet_sessions" src="//thegeekyway.com/uploads/images/2013/12/aspnet_sessions.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Session is amongst the most important part in creating asp.net applications. It is a variable where you can put data between page requests when the pages are either posting or redirecting to each other. It can contain small amount of data containing string, complex arrays or numbers.&lt;/p&gt;
&lt;p&gt;In Asp.net the copy of session variable is stored for each individual session and session are managed with &lt;strong&gt;cookies&lt;/strong&gt;. &lt;strong&gt;Cookies&lt;/strong&gt; are data created on server and are sent back to browser in response to http request. In asp.net session cookies are created automatically once the page is loaded into the browser.&lt;/p&gt;
&lt;p&gt;During the page load, the server detect a new user and then creates a session cookie for the new user and then sends back to the browser and then use cookies for each subsequent request. Session variable can be of many types from string to complex numbers and arrays.The session variable are stored in &lt;strong&gt;SessionStateItemCollection&lt;/strong&gt; Class.&lt;/p&gt;
&lt;p&gt;****The format to create a session object in asp.net is&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4&gt;Session[key_name] = (any dynamic or arbitrary name)&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let us consider an example where we are using a login interface with 2 aspx pages (Session_page.aspx,Landing_Page.aspx) and username and password are being stored in session and displaying the username and password on Landing_Page.aspx.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.1.png" title="Asp.net tutorial : Maintaining sessions in asp.net (Image 1)"&gt;&lt;img alt="Asp.net tutorial : Maintaining sessions in asp.net" src="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let us use "Test_User" as username and "Test_Password" as password. (Note that at this point of tutorial the values are not comparing with the database values we are just assuming that "Test_User" and "Test_Password" are registered and we have reached Landing_page.aspx )&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.2.png" title="Asp.net tutorial : Maintaining sessions in asp.net (Image 2)"&gt;&lt;img alt="Asp.net tutorial : Maintaining sessions in asp.net (Image 2)" src="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The main coding is done on the "Login" button where we will fetch the values from text boxes and store the values in sessions.&lt;br&gt;
The &lt;a href="http://www.thegeekyway.com/category/programming/c-programming-2/"&gt;C#&lt;/a&gt; code for the login button is given as follows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Login_Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;object&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventArgs&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TextBox1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TextBox2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;~/Landing_Page.aspx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where TextBox1.Text contains the text entered in the username field and TextBox2.Text contains the text entered in password field, once the login button is pressed the session is created and the username and password is stored in the session variable, now we can use this session variable anywhere within our project.&lt;/p&gt;
&lt;p&gt;After clicking the login button here is the Landing_page.aspx where the session variable is used, here is the output of Landing_Page.aspx&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.3.png" title="Asp.net tutorial : Maintaining sessions in asp.net (Image 3)"&gt;&lt;img alt="Asp.net tutorial : Maintaining sessions in asp.net (Image 3)" src="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here is the code for the Landing_Page.aspx&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Page_Load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;object&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventArgs&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Session_Username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User_Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;Session_Passowrd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now since Label7.Text expects a string but there is now way in asp.net that it automatically identifies it as a string so we have to explicitly store the value as a string, now there are 2 ways, the first way is using &lt;a href="http://www.thegeekyway.com/category/programming/c-programming-2/"&gt;C#&lt;/a&gt; , the code is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="n"&gt;Label7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User_Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the second way is to append .ToString() function to the session variable, the code is given below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="n"&gt;Session_Username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User_Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some FAQ's related to Sessions using asp.net&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; What happens if we close the browser and reopen Landing_Page.aspx, will the session be maintained ?&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; The answer is &lt;strong&gt;NO&lt;/strong&gt; once the browser is closed the cookies are destroyed and so as the session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; So what happens if we directly open the Landing_Page.aspx page ?&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; Since we directly opened the Landing_Page.aspx page, no session was created for username and password so it will display blank values for username and password. But its not recommended to either redirect or display an error message. For example consider the following code segment&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;Page_Load&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt; &lt;span class="nv"&gt;sender&lt;/span&gt;, &lt;span class="nv"&gt;EventArgs&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    {
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Session&lt;/span&gt;[&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;User_Name&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;Session&lt;/span&gt;[&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Password&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;null&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        {   &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;Your&lt;/span&gt; &lt;span class="nv"&gt;redirection&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="nv"&gt;here&lt;/span&gt;.
            &lt;span class="nv"&gt;Top_Header_Text&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;false&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Session_Username&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; No session created, you will be soon redirected to Session_Page.aspx. &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Session_Password&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;false&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Username&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;false&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Password&lt;/span&gt;.&lt;span class="nv"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;false&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
        &lt;span class="k"&gt;else&lt;/span&gt;
        {
           &lt;span class="nv"&gt;Session_Username&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;Session&lt;/span&gt;[&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;User_Name&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Session_Password&lt;/span&gt;.&lt;span class="nv"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Session&lt;/span&gt;[&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Password&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;].&lt;span class="nv"&gt;ToString&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then the output will be&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.4.png" title="Asp.net tutorial : Maintaining sessions in asp.net (Image 4)"&gt;&lt;img alt="Asp.net tutorial : Maintaining sessions in asp.net (Image 4)" src="//thegeekyway.com/uploads/images/2013/12/ASP.net_Tut1.4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;</content><category term="asp.net"></category><category term="C#"></category></entry><entry><title>How to add custom CSS in HTML</title><link href="//thegeekyway.com/add-custom-css-html/" rel="alternate"></link><published>2013-12-12T23:47:00+05:30</published><updated>2013-12-12T23:47:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-12:/add-custom-css-html/</id><summary type="html">&lt;p&gt;I have already given the &lt;a href="http://www.thegeekyway.com/css-introduction-and-different-ways-of-using-css/" title="CSS – Introduction and How it works"&gt;introduction to CSS&lt;/a&gt; and advantages.Now, there are few ways to use your custom CSS in your site/blog/wordpress.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using style tag with HTML elements.&lt;/li&gt;
&lt;li&gt;Using Style element inside HTML page&lt;/li&gt;
&lt;li&gt;Linking external CSS file in your pages&lt;/li&gt;
&lt;li&gt;Importing CSS file inside another CSS …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I have already given the &lt;a href="http://www.thegeekyway.com/css-introduction-and-different-ways-of-using-css/" title="CSS – Introduction and How it works"&gt;introduction to CSS&lt;/a&gt; and advantages.Now, there are few ways to use your custom CSS in your site/blog/wordpress.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using style tag with HTML elements.&lt;/li&gt;
&lt;li&gt;Using Style element inside HTML page&lt;/li&gt;
&lt;li&gt;Linking external CSS file in your pages&lt;/li&gt;
&lt;li&gt;Importing CSS file inside another CSS file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;1. Using Style tag in HTML element:&lt;/h4&gt;
&lt;p&gt;You can simply use style tag like below to apply styling to your element.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;strong&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color:White; background:black&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Your Text  &lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See the Pen &lt;a href="http://codepen.io/ianoop/pen/olJkD"&gt;olJkD&lt;/a&gt; by ianoop (&lt;a href="http://codepen.io/ianoop"&gt;\@ianoop&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript" src="//codepen.io/assets/embed/ei.js" async&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;h4&gt;2. Using Style element in your page&lt;/h4&gt;
&lt;p&gt;Add a &lt;em&gt;style&lt;/em&gt; element in your Head element and define your css classes.&lt;/p&gt;
&lt;style&gt;&lt;!--&lt;br /&gt;
   .&lt;span class="hiddenSpellError" pre=""&gt;myclass&lt;/span&gt; {&lt;br /&gt;
    color:red;&lt;br /&gt;
    background:black;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;--&gt;&lt;/style&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="nb"&gt;Text&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See the Pen &lt;a href="http://codepen.io/ianoop/pen/IeBwH"&gt;IeBwH&lt;/a&gt; by ianoop (&lt;a href="http://codepen.io/ianoop"&gt;\@ianoop&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;3.  Linking a external css file in page&lt;/h4&gt;
&lt;p&gt;Add a link to your css file and those classes will be applied to your elements. This is best approach to have clean code and managing your CSS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;customstylesheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;4. Import a CSS file inside another CSS file&lt;/h4&gt;
&lt;p&gt;Use following format to import a CSS file. Remember following import tag should first line in your file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mynewstylesheet.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: For point 3 and 4 location of your css file is relative to current file. If you are using direct name.css that means CSS file and HTML/CSS file both are in same directory.&lt;/p&gt;</content><category term="CSS"></category><category term="HTML"></category></entry><entry><title>CSS - Introduction and How it works</title><link href="//thegeekyway.com/css-introduction-and-different-ways-of-using-css/" rel="alternate"></link><published>2013-12-11T22:57:00+05:30</published><updated>2013-12-11T22:57:00+05:30</updated><author><name>Anoop</name></author><id>tag:thegeekyway.com,2013-12-11:/css-introduction-and-different-ways-of-using-css/</id><summary type="html">&lt;p&gt;CSS stands for &lt;strong&gt;&lt;em&gt;Cascading Style Sheet&lt;/em&gt;&lt;/strong&gt; which is used to style HTML elements.&lt;br&gt;
While loading any webpage browser simply create DOM of requested web page and renders the HTML. CSS is basically a better way of managing HTML attributes  &lt;p style="color: #800000;"&gt;&lt;strong&gt;style&lt;/strong&gt;&lt;/p&gt; of any element.&lt;/p&gt;
&lt;p&gt;To add style we simply use  &lt;p style="color: #800000;"&gt;&lt;em&gt;Style …&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;CSS stands for &lt;strong&gt;&lt;em&gt;Cascading Style Sheet&lt;/em&gt;&lt;/strong&gt; which is used to style HTML elements.&lt;br&gt;
While loading any webpage browser simply create DOM of requested web page and renders the HTML. CSS is basically a better way of managing HTML attributes  &lt;p style="color: #800000;"&gt;&lt;strong&gt;style&lt;/strong&gt;&lt;/p&gt; of any element.&lt;/p&gt;
&lt;p&gt;To add style we simply use  &lt;p style="color: #800000;"&gt;&lt;em&gt;Style&lt;/em&gt; &lt;/p&gt;attribute to add color, effect, transition or any other things. Like following&lt;/p&gt;
&lt;p&gt;See the Pen &lt;a href="http://codepen.io/ianoop/pen/jLmEx"&gt;jLmEx&lt;/a&gt; by ianoop (&lt;a href="http://codepen.io/ianoop"&gt;\@ianoop&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript" src="//codepen.io/assets/embed/ei.js" async&gt;&lt;/script&gt;
Now using CSS

&lt;/p&gt;

&lt;p&gt;See the Pen &lt;a href="http://codepen.io/ianoop/pen/ICDxa"&gt;ICDxa&lt;/a&gt; by ianoop (&lt;a href="http://codepen.io/ianoop"&gt;\@ianoop&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A CSS  which is used to style a element is called as &lt;em&gt;CSS Class&lt;/em&gt; or simply &lt;em&gt;Class&lt;/em&gt; associated with element.&lt;/p&gt;
&lt;p&gt;Now,  why to use CSS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS are stored in separate file which contains all the classes to be applied on element&lt;/li&gt;
&lt;li&gt;Easy to manage and avoid duplication. In a website if you want to make all the links to get into red color on hover you can simply just add a particular class and you are done.&lt;/li&gt;
&lt;li&gt;You can use same HTML code to different place with different style by just editing small fragment of CSS class&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-decoration: underline;"&gt;Different ways of using CSS:&lt;/p&gt;

&lt;h6&gt;(click on result tab and hover mouse on link)&lt;/h6&gt;
&lt;ol&gt;
-   #### Using class attribute in element.

&lt;/ol&gt;

&lt;p&gt;See the Pen &lt;a href="http://codepen.io/ianoop/pen/Ikupj"&gt;Ikupj&lt;/a&gt; by ianoop (&lt;a href="http://codepen.io/ianoop"&gt;\@ianoop&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
-   #### Element ID specific css

&lt;/ol&gt;

&lt;p&gt;See the Pen &lt;a href="http://codepen.io/ianoop/pen/HtmGa"&gt;HtmGa&lt;/a&gt; by ianoop (&lt;a href="http://codepen.io/ianoop"&gt;\@ianoop&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
-   #### Directly using HTML tag as css class

&lt;/ol&gt;

&lt;p&gt;See the Pen &lt;a href="http://codepen.io/ianoop/pen/AdCnL"&gt;AdCnL&lt;/a&gt; by ianoop (&lt;a href="http://codepen.io/ianoop"&gt;\@ianoop&lt;/a&gt;) on &lt;a href="http://codepen.io"&gt;CodePen&lt;/a&gt;&lt;/p&gt;</content><category term="CSS"></category><category term="HTML"></category></entry><entry><title>Install Alternative To Arduino IDE</title><link href="//thegeekyway.com/install-alternative-arduino-ide/" rel="alternate"></link><published>2013-12-11T08:42:00+05:30</published><updated>2013-12-11T08:42:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2013-12-11:/install-alternative-arduino-ide/</id><summary type="html">&lt;p&gt;Arduino, the world famous opensource electronic prototyping platform is undoubtedly the best series of boards used by makers &amp;amp; Engineers. However, the official Arduino IDE which is used to load the arduino sketch is bit clumsy. I never really liked Arduino IDE, so after searching a lot, I came to know …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Arduino, the world famous opensource electronic prototyping platform is undoubtedly the best series of boards used by makers &amp;amp; Engineers. However, the official Arduino IDE which is used to load the arduino sketch is bit clumsy. I never really liked Arduino IDE, so after searching a lot, I came to know about 'Stino', the plugin for world's slickest text editor Sublime Text 2. Using Stino you can edit arduino codes and even upload sketches to your Arduino board. All you have to do is follow the steps mentioned below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1 : Download Arduino IDE .tgz&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yeah, we need Arduino IDE for their libraries which we'll import in Sublime Text 2. So, download Arduino IDE.tgz from the &lt;a href="http://arduino.cc/en/main/software" title="Download Arduino"&gt;Arduino Website&lt;/a&gt; as per your system architecture.&lt;/p&gt;
&lt;p&gt;Now extract the downloaded .tgz &amp;amp; copy the extracted folder to /home directory.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Home_005.png" title="Extracted Arduino moved to /home directory"&gt;&lt;img alt="Home_005" src="//thegeekyway.com/uploads/images/2013/12/Home_005.png" title="Extracted Arduino moved to /home directory"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 2 : Install Sublime text Editor&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;View &lt;a href="http://www.thegeekyway.com/install-sublime-text-editor-gnulinux/" title="Steps to install Sublime Text"&gt;&lt;strong&gt;THIS ARTICLE&lt;/strong&gt;&lt;/a&gt; for procedure to install Sublime Text editor in your Linux system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3 : Installing Package control in Sublime Text&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now you've installed Sublime Text 2, but to install plugins for Arduino in Sublime text you have to add sublime package control. Sublime package control can discover, install &amp;amp; even update the sublime plugins .&lt;/p&gt;
&lt;p&gt;To install Sublime package control, Start sublime text editor &amp;amp; press &lt;strong&gt;Ctrl + `&lt;/strong&gt;  and type the following commands :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Package Control.sublime-package&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ipp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sublime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;installed_packages_path&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ipp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ipp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;install_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProxyHandler&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ipp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://sublime.wbond.net/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Please restart Sublime Text to finish installation&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and press 'Enter' . Something like below shown image will appear.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/sublimearduino.png" title="Package control installed in Sublime text 2"&gt;&lt;img alt="sublimearduino" src="//thegeekyway.com/uploads/images/2013/12/sublimearduino.png" title="Package control installed in Sublime text 2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Restart the Sublime Text editor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Step 4 : Installing Stino&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Stino is the plugin for Sublime text editor written by Robot-Will, you can view the code of Stino from &lt;a href="https://github.com/Robot-Will/Stino" title="Stino Source code"&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, Open Sublime text editor &amp;amp; go to &lt;strong&gt;Preference -&gt; Package Control&lt;/strong&gt; and click on &lt;strong&gt;Install Packages.&lt;/strong&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/package-control.png" title="Selecting 'Install Package' in Package control"&gt;&lt;img alt="package control" src="//thegeekyway.com/uploads/images/2013/12/package-control.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Wait for while till the repository is loading, once repository is loaded, you'll be able to access all the available plugins &amp;amp; install it. Search for 'Arduino IDE' &amp;amp; press 'Enter'. This will install 'Stino' in sublime text editor.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/sublime-package-stino.png" title="Installing Stino"&gt;&lt;img alt="sublime package stino" src="//thegeekyway.com/uploads/images/2013/12/sublime-package-stino.png" title="Installing Stino"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 5 : Configuring Stino to make Sublime text editor to work like Arduino IDE.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now open Sublime text edito, in their one more tab will be available now, called 'Arduino'. Click on it &amp;amp; go to Preferences -&gt; Select Arduino Application Folder. Then select the path where you've extracted arduino.tgz (In this we extracted in /home folder, so select home while declaring path to Stino)&lt;/p&gt;
&lt;p&gt;If you've extracted arduino.tgz the steps will be like : &lt;strong&gt;Preferences -&gt; Select Arduino Application Folder -&gt; / -&gt; home -&gt; your_username -&gt; arduino-1.0.5&lt;/strong&gt; and you'll get the output as given below :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/sublime-linked-arduino.png" title="Selecting Arduino application folder"&gt;&lt;img alt="sublime linked arduino" src="//thegeekyway.com/uploads/images/2013/12/sublime-linked-arduino.png" title="Selecting Arduino application folder from sublime"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;That's all. Now, you can select your arduino board in which you're going to upload sketches from &lt;strong&gt;Arduino -&gt; Arduino AVR boards. &lt;/strong&gt; Use &lt;strong&gt;'Verify/Compile'&lt;/strong&gt; option to compile your arduino sketch &amp;amp; &lt;strong&gt;'Upload'&lt;/strong&gt; option to upload the sketch into arduino connected to your PC.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Honestly, Stino + Sublime text is so robust that i can't explain in words how much i am enjoying coding in Arduino.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I hope this article may help you to find an alternative to Arduino IDE &amp;amp; enjoy editing &amp;amp; uploading sketches in Arduino.&lt;/p&gt;</content><category term="Arduino"></category><category term="IDE"></category><category term="linux"></category></entry><entry><title>How To Install Sublime Text Editor In GNU/Linux ?</title><link href="//thegeekyway.com/install-sublime-text-editor-gnulinux/" rel="alternate"></link><published>2013-12-11T07:25:00+05:30</published><updated>2013-12-11T07:25:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2013-12-11:/install-sublime-text-editor-gnulinux/</id><summary type="html">&lt;p&gt;Sublime Text Editor is one of the best cross-platform editor out there for editing source code. It is capable of syntax highlighting for wide range of file extensions like Python, C, C++, Java, HTML, JS, PHP, LaTeX &amp;amp; even Arduino. Sublime Text Editor is not opensource &amp;amp; not an free editor, but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sublime Text Editor is one of the best cross-platform editor out there for editing source code. It is capable of syntax highlighting for wide range of file extensions like Python, C, C++, Java, HTML, JS, PHP, LaTeX &amp;amp; even Arduino. Sublime Text Editor is not opensource &amp;amp; not an free editor, but in last update the expiry date has been removed by the developers, so you can use Sublime text as there is no enforce time limit for evaluation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sublime Text Editor can be installed manually following the steps below :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download correct bit version of Sublime Text 2 from &lt;a href="http://www.sublimetext.com/2" title="Sublime Text Download"&gt;&lt;strong&gt;Official Website.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Now, extract the downloaded Sublime text 2 .tar.bz2 in &lt;strong&gt;/home&lt;/strong&gt; directory by simply right clicking on it.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Sublime_text1.png"&gt;&lt;img alt="Sublime_text1" src="//thegeekyway.com/uploads/images/2013/12/Sublime_text1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Sublime-text-2.png"&gt;&lt;img alt="Sublime text 2" src="//thegeekyway.com/uploads/images/2013/12/Sublime-text-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Now move the extracted folder 'Sublime Text 2' to the proper location. Open Terminal/Konsole and type :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="n"&gt;Sublime&lt;/span&gt; &lt;span class="nb"&gt;Text&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The extracted folder will be moved in /opt directory of your system.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Sublime-text-3.png"&gt;&lt;img alt="Sublime text 3" src="//thegeekyway.com/uploads/images/2013/12/Sublime-text-3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Now, we have to add following command for symbolic link. Open terminal &amp;amp; type :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Sublime&lt;/span&gt; &lt;span class="nb"&gt;Text&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sublime_text&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sublime&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now, to add application icon in launcher. In terminal type :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;gedit&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sublime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Replace gedit by any other editor like kate, vim or even sublime) and copy the following lines into it &amp;amp; hit on 'Save' button.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class="na"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;2.0&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Sublime Text 2&lt;/span&gt;
&lt;span class="c1"&gt;# Only KDE 4 seems to use GenericName, so we reuse the KDE strings.&lt;/span&gt;
&lt;span class="c1"&gt;# From Ubuntu&amp;#39;s language-pack-kde-XX-base packages, version 9.04-20090413.&lt;/span&gt;
&lt;span class="na"&gt;GenericName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Text Editor&lt;/span&gt;

&lt;span class="na"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sublime&lt;/span&gt;
&lt;span class="na"&gt;Terminal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;
&lt;span class="na"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/opt/Sublime Text 2/Icon/48x48/sublime_text.png&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Application&lt;/span&gt;
&lt;span class="na"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;TextEditor;IDE;Development&lt;/span&gt;
&lt;span class="na"&gt;X-Ayatana-Desktop-Shortcuts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;NewWindow&lt;/span&gt;

&lt;span class="k"&gt;[NewWindow Shortcut Group]&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;New Window&lt;/span&gt;
&lt;span class="na"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sublime -n&lt;/span&gt;
&lt;span class="na"&gt;TargetEnvironment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Unity&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Login &amp;amp; out &amp;amp; you'll notice launcher icon of sublime text in Menu.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/sublime-text-4.png"&gt;&lt;img alt="sublime text 4" src="//thegeekyway.com/uploads/images/2013/12/sublime-text-4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;I have tested same .desktop configuration in openSUSE Gnome &amp;amp; it shows up in launcher too, so no need to modify if you're using other desktop environment. Didn't tested in KDE though.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Happy coding.&lt;/p&gt;</content><category term="linux"></category><category term="Text Editor"></category></entry><entry><title>How To Install Any Application From Source Code ?</title><link href="//thegeekyway.com/install-application-source-code-2/" rel="alternate"></link><published>2013-12-10T10:44:00+05:30</published><updated>2013-12-10T10:44:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2013-12-10:/install-application-source-code-2/</id><summary type="html">&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
P { margin-bottom: 0.08in; }&lt;br /&gt;
--&gt;&lt;/style&gt;

&lt;p&gt;Most of the applications are available in the official repository of your Linux distribution. However, there are times when some of the applications you're installing haven't been updated in the repository &amp;amp; you want to get the latest version of that application.Learning how to …&lt;/p&gt;</summary><content type="html">&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
P { margin-bottom: 0.08in; }&lt;br /&gt;
--&gt;&lt;/style&gt;

&lt;p&gt;Most of the applications are available in the official repository of your Linux distribution. However, there are times when some of the applications you're installing haven't been updated in the repository &amp;amp; you want to get the latest version of that application.Learning how to install application from the source code comes handy during this time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;There are 6 steps to follow :&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt; Obtaining source code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; Unzipping source code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; Configuring source code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; Resolving dependencies (if any dependency is missing)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; Compiling the source code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; Installing the binaries&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;1) Obtaining source code :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Source code of the opensource application can be obtained from Github using git if the source is uploaded in Github, or you can even visit the official website of the application &amp;amp; download it's source code. In most case, you'll find source of opensource application from the official website, easily.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Unzipping source code :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The downloaded source code will be in &lt;em&gt;.tar.bz2&lt;/em&gt;  or &lt;em&gt;.tar.gz&lt;/em&gt; ,you need to extract the files within the tar ball &amp;amp; place it anywhere in the &lt;em&gt;/home&lt;/em&gt; directory. Note that, it is not necessary to put the extracted source code in &lt;em&gt;/home&lt;/em&gt; directory only. But, &lt;em&gt;/home&lt;/em&gt; directory is usually selected by most of the user as it is convenient to access.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) Configuring the source code :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since you've downloaded the source code &amp;amp; extracted it in /home directory; Use &lt;strong&gt;cd&lt;/strong&gt; (change directory) command to enter the directory where the source code is available.&lt;/p&gt;
&lt;p&gt;For Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;user_name&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;extracted_sourcecode_folder&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, before configuring the source code let's understand what is it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;'Configure'&lt;/strong&gt; is the title given to the configuration script which is usually shipped in package alongwith the source code. The configuration script makes sure that all the required tools for the compilation is installed within the system or not. If the dependency is missing, the configuration script will give you error &amp;amp; you won't be able to compile the software unless all the missing dependencies are not met.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can execute the configuration script using following command (Make sure you're in root) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;All source codes are &lt;strong&gt;not&lt;/strong&gt; shipped with configuration script, In that case you've to access documentation of that specific application &amp;amp; manually check the required dependencies &amp;amp; whether all the dependencies are met or not.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;4) Resolving dependencies :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After process of 'configuring', if any dependency is missing the compilation won't proceed. So, if the configuration script pops the dependency error, then install the missing dependency &amp;amp; execute the configuration script again ( i.e ./configure). After configure script is successfully executed, it will generate the &lt;strong&gt;'Make'&lt;/strong&gt; file which will be used for the compilation of the source code.&lt;/p&gt;
&lt;p&gt;Configuration &amp;amp; resolving dependencies are most important part of entire process as you've to match all the required dependencies, after that everything is cake walk.&lt;/p&gt;
&lt;p&gt;Now if all the dependencies are met, you can proceed the next step.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5) Compiling the source code:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now open terminal &amp;amp; type&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This command will compile the software &amp;amp; all the binaries are generated. The duration taken by the system for compilation process depends on the size of the program &amp;amp; processing speed of your computer hardware. Now, we have to install the generated binaries created after compilation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6) Installing the binaries :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If no error is invoked during the compilation of the software, open terminal/konsole &amp;amp; type :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This command will install all the required binaries in the system.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Example for installing an application from the source code :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Following is the short example of the entire process of installing application from the source code. In this example, I will be installing &lt;a href="http://satya164.deviantart.com/art/Gnome-Shell-Elegance-Colors-305966388"&gt;&lt;strong&gt;'elegance-colors'&lt;/strong&gt;&lt;/a&gt; in my system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1 :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I have downloaded the source code of 'elegance-colors' from &lt;a href="https://github.com/satya164/elegance-colors" title="Elegance Colors"&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2 :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Downloaded source code is extracted in /home directory&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Home_012.png" title="Home directory where source code is placed"&gt;&lt;img alt="Home_012" src="//thegeekyway.com/uploads/images/2013/12/Home_012.png" title="Home directory"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3 :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I have to configure manually, since configuration script is not available for this opensource application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4 :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I resolved all the dependencies that were missing after checking the &lt;a href="https://github.com/satya164/elegance-colors/blob/master/README.md"&gt;&lt;strong&gt;documentation&lt;/strong&gt;&lt;/a&gt;. and proceeded to next step.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5 :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Compiled the source code by typing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/abhishek@linux-f3qk-home-abhishek-elegance-colors_010.png" title="'make' command - Generating binaries"&gt;&lt;img alt="abhishek\@linux-f3qk:-home-abhishek-elegance-colors_010" src="//thegeekyway.com/uploads/images/2013/12/abhishek@linux-f3qk-home-abhishek-elegance-colors_010.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 6 :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Installed the compiled source code by typing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/abhishek@linux-f3qk-home-abhishek-elegance-colors_011.png" title="'make install' command - Installing generated binaries"&gt;&lt;img alt="abhishek\@linux-f3qk:-home-abhishek-elegance-colors_011" src="//thegeekyway.com/uploads/images/2013/12/abhishek@linux-f3qk-home-abhishek-elegance-colors_011.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;and successfully installed the application from the source code.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Screenshot-from-2013-12-10-111926.png" title="Installed application can be accessed from launcher"&gt;&lt;img alt="Screenshot from 2013-12-10 11:19:26" src="//thegeekyway.com/uploads/images/2013/12/Screenshot-from-2013-12-10-111926.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This tutorial is containing the basics &amp;amp; simply gives hints on how you can compile any software from source code. There are many reasons by which error in configuring &amp;amp; compilation can occur &amp;amp; leaves you headbanging, like missing of shared libraries, no configuration script, unable to install dependencies ,etc. But somehow there's always a way to rectify the errors, if you know the basics.&lt;/p&gt;</content><category term="linux"></category><category term="open source"></category><category term="source code"></category></entry><entry><title>Learning about Variables in C</title><link href="//thegeekyway.com/variables-in-c/" rel="alternate"></link><published>2013-12-09T22:30:00+05:30</published><updated>2013-12-09T22:30:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2013-12-09:/variables-in-c/</id><summary type="html">&lt;p&gt;Welcome to your second tutorial on the C language. In this tutorial, we'll be discussing about variables, their applications, their necessity both in general terms of programming and for C language as well. Variables in C are really very important. These are the fundamentals and you need to understand how …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome to your second tutorial on the C language. In this tutorial, we'll be discussing about variables, their applications, their necessity both in general terms of programming and for C language as well. Variables in C are really very important. These are the fundamentals and you need to understand how variables in C are used and data in them can be manipulated.&lt;/p&gt;
&lt;p&gt;Variables are where you store your data, you can assume them to be pretty much like containers (reserved memory locations) where you can store your things ( data ). In C or any programming language, it is essential that you define that variable is of what kind, ie it's data type.&lt;/p&gt;
&lt;p&gt;The data types can be divided into two broad categories namely Fundamental Data types and Derived data types. Now we'll look in detail about both of these.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fundamental Data Types&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These are the data types which are built-in and not derived, that's why the word “Fundamental” has been used. There are five basic kind of Data types :-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int – for integer data types&lt;/li&gt;
&lt;li&gt;float – for floating point numbers (those with decimals)&lt;/li&gt;
&lt;li&gt;char – for character type&lt;/li&gt;
&lt;li&gt;double- same as integer type but include float also and is capable of holding more numbers (range is very large)&lt;/li&gt;
&lt;li&gt;void – this stands for null value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Derived Data Types&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These are the data types derived from fundamental data types. Some of the derived data types are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Pointers&lt;/li&gt;
&lt;li&gt;Enumeration&lt;/li&gt;
&lt;li&gt;Structures&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Defining a Variable&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following syntax should be used while defining variable in C :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data_type&lt;/span&gt; &lt;span class="n"&gt;variable_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, data_type is the type of data which variable shall hold, and variable_name is any legal name you may give to the variable to access the information stored in it.&lt;/p&gt;
&lt;p&gt;Now, we'll define a variable of type integer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, we have defined a variable named sam which is capable of holding any integer type value.&lt;br&gt;
Now, we'll assign a value to this variable with assignment operator (=)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, our variable sam contains value 10.&lt;/p&gt;
&lt;p&gt;Now, we'll see it in the entire program and output the value of variable.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;sam&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;“&lt;span class="nv"&gt;Value&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;sam&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt;”, &lt;span class="nv"&gt;sam&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For the above code, we'll get the following output :&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/2.png" title="Output of variable in C tutorial code"&gt;&lt;img alt="Output of variable in C tutorial code" src="//thegeekyway.com/uploads/images/2013/12/2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;(Note: Program are compiled in Turbo C with DosBox instead of gcc)&lt;/p&gt;
&lt;p&gt;Note we've used %d , this just means that we want to print an integer value. In C, we need to tell the compiler what type of value is coming, so we need to have this %d for integer type value. Similar to %d, we use the following placeholders to instruct the compiler of upcoming data type :&lt;/p&gt;
&lt;p&gt;\%d – integer (int)&lt;br&gt;
%c – character (char)&lt;br&gt;
%s – strings&lt;/p&gt;
&lt;p&gt;\%f - float&lt;br&gt;
etc.&lt;/p&gt;
&lt;p&gt;Observe, that in printf() function, we have used , and the variable name, and when this program is compiled and executed, we get the  output , such that it prints Value of sam is 10 , the %d is now replaced by the value stored in our variable sam. This is because, %d was an instruction for the compiler so that it knows what type of value is coming in, so wherever you place this %d, and output an integer value, it would be replaced by value of that variable.&lt;/p&gt;
&lt;p&gt;For example, see the following code snippet :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;sam&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;“ &lt;span class="nv"&gt;Value&lt;/span&gt; &lt;span class="nv"&gt;stored&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;variable&lt;/span&gt; &lt;span class="nv"&gt;sam&lt;/span&gt;” , &lt;span class="nv"&gt;sam&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is the output for the above mentioned code snippet&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/1.png" title="Outputing with variables"&gt;&lt;img alt="Output of variable in C tutorial code" src="//thegeekyway.com/uploads/images/2013/12/1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;(Note: Program are compiled in Turbo C with DosBox instead of gcc)&lt;/p&gt;
&lt;p&gt;Note: Return type of our main function is of int type so we are returning value 0, this can be any value, but since we don't need to return anything, we generally return 0.&lt;/p&gt;
&lt;p&gt;We'll carry this topic in the next tutorial as well, till then, you can try the codes from this tutorial and play with the code.&lt;/p&gt;</content><category term="C language"></category><category term="Learn C"></category><category term="variables"></category></entry><entry><title>Understanding init.d Directory In Linux Filesystem.</title><link href="//thegeekyway.com/whats-important-init-d-directory-linux/" rel="alternate"></link><published>2013-12-07T13:08:00+05:30</published><updated>2013-12-07T13:08:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2013-12-07:/whats-important-init-d-directory-linux/</id><summary type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;init.d&lt;/em&gt;&lt;/strong&gt; is the sub-directory of &lt;strong&gt;&lt;em&gt;/etc&lt;/em&gt;&lt;/strong&gt; directory in Linux file system. init.d basically contains the bunch of start/stop scripts which are used to control (start,stop,reload,restart) the daemon while the system is running or during boot. If you look at &lt;strong&gt;&lt;em&gt;/etc/init.d&lt;/em&gt;&lt;/strong&gt; then you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;init.d&lt;/em&gt;&lt;/strong&gt; is the sub-directory of &lt;strong&gt;&lt;em&gt;/etc&lt;/em&gt;&lt;/strong&gt; directory in Linux file system. init.d basically contains the bunch of start/stop scripts which are used to control (start,stop,reload,restart) the daemon while the system is running or during boot. If you look at &lt;strong&gt;&lt;em&gt;/etc/init.d&lt;/em&gt;&lt;/strong&gt; then you will notice all the scripts for different services of your system.&lt;/p&gt;
&lt;p&gt;The scripts within the directory varies as per the applications installed in your system. In server system you'll find many network related scripts while in desktop there will be the only basic ones like 'networking'.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/init_main_featureimage.png"&gt;&lt;img alt="init_main_featureimage" src="//thegeekyway.com/uploads/images/2013/12/init_main_featureimage.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There are two types of scripts :  K scripts &amp;amp; S scripts.&lt;/p&gt;
&lt;p&gt;K scripts are known &lt;strong&gt;'kill'&lt;/strong&gt; scripts while S scripts are known as &lt;strong&gt;'startup'&lt;/strong&gt; scripts. Kill scripts always run before startup scripts. The configuration file (.conf) of these scripts are located under &lt;strong&gt;&lt;em&gt;/etc/init&lt;/em&gt;&lt;/strong&gt; &amp;amp; the scripts that are used as defaults are located under &lt;strong&gt;&lt;em&gt;/etc/default&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Within &lt;em&gt;/etc/init.d&lt;/em&gt; you'll find the script &lt;strong&gt;&lt;em&gt;rc.local&lt;/em&gt;&lt;/strong&gt; ,this script is automatically executed after all primarily priortized scripts are executed. Which means first K scripts are executed, following by S scripts, then all other remaining init level scripts (if there's any) &amp;amp; finally rc.local script.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/init_pic2.png"&gt;&lt;img alt="init_pic2" src="//thegeekyway.com/uploads/images/2013/12/init_pic2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/init_pic3.png"&gt;&lt;img alt="init_pic3" src="//thegeekyway.com/uploads/images/2013/12/init_pic3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now to control any script, you'll need the superuser (sudo/su) permission. You can manually control the scripts using console/terminal. The syntax for controlling the script is like :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;option&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where \&amp;lt;script&gt;  stands for the name of the script located under /etc/init.d which you wanna control, and \&amp;lt;option&gt; can be replaced by the control commands like : start,stop,reload,restart,force-reload.&lt;/p&gt;
&lt;p&gt;Example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pulseaudio&lt;/span&gt; &lt;span class="n"&gt;reload&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hope this helps to understand /etc/init.d directory. This was basic understanding of init.d directory, there's more into it which will be covered soon.&lt;/p&gt;</content><category term="Linux Filesystem"></category></entry><entry><title>C# Tutorial : Compiling C# Programmes using Notepad</title><link href="//thegeekyway.com/csharp-tutorial-compiling-csharp-programmes-using-notepad/" rel="alternate"></link><published>2013-12-05T17:13:00+05:30</published><updated>2013-12-05T17:13:00+05:30</updated><author><name>Deep_Singh</name></author><id>tag:thegeekyway.com,2013-12-05:/csharp-tutorial-compiling-csharp-programmes-using-notepad/</id><summary type="html">&lt;h2&gt;About C#&lt;/h2&gt;
&lt;p&gt;C# is a multi-paradigm object oriented language developed by Mircrosoft in the year 2000. C# has its major implementations in dotNet framework, Mono, DotGNU. In this tutorial we will print a simple line "TheGeekyWay.com" using a notepad and C# command line compiler.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In order to continue with …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;h2&gt;About C#&lt;/h2&gt;
&lt;p&gt;C# is a multi-paradigm object oriented language developed by Mircrosoft in the year 2000. C# has its major implementations in dotNet framework, Mono, DotGNU. In this tutorial we will print a simple line "TheGeekyWay.com" using a notepad and C# command line compiler.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In order to continue with the C# tutorial you will need the latest version of .NET Framework SDK installed on your machine. You can download latest version of .NET Framework &lt;a href="http://www.microsoft.com/en-in/download/details.aspx?id=19988"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First of all you need to create a folder where you can save your C# programme, you can also save the file on Desktop but its always a good habit to keep your files organized, so I am creating a folder named TheGeekyWay in the C: drive.&lt;/p&gt;
&lt;!--more--&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Remember :&lt;/strong&gt; C# is a case sensitive language. So everything should be same while writing the below code, any syntactical changes will bring down an error in compiling.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So here is the following C# code (don't worry the code will be explained in detail in next tutorial, for now we just focus on how to compile and run a c# code in command prompt)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;TheGeekyWay&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="err"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Welcome to TheGeekyWay.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
           &lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next step is to go to start button and type cmd and run as administrator. The reason using cmd is that many .NET tools can be used or scripted using DOS batch files.&lt;/p&gt;
&lt;p&gt;Now in cmd type the following lines in cmd and reach to the directory of Framework. The reason for showing the directory is to know the recent version of C# compiler.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/CTUT1.1.png" title="C# Tutorial : To run C# programme using Notepad (Image 1)"&gt;&lt;img alt="C# Tutorial : To run C# programme using Notepad Image 1" src="//thegeekyway.com/uploads/images/2013/12/CTUT1.1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;now next step is to go in the directory of your latest .NET version, for me its v4.0.30319, so we use the following command line to go in the latest .NET folder directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;v4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;30319&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;you can also visit the following code to view all the help related to C# compiler, remember to type the code in v4.0.30319 directory (or whatever your latest version of .NET compiler is).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;csc&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;now the main part of the tutorial, the compilation code, here is the compilation code to compile your c# code.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="C#TUT1.2" class="alignnone size-medium wp-image-302" src="//thegeekyway.com/uploads/images/2013/12/CTUT1.2.png"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;confused ! don't worry, here is snapshot of the complete code using cmd.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/CTUT1.3.png" title="C# Tutorial : To run C# programme using Notepad (Image 2)"&gt;&lt;img alt="C#" src="//thegeekyway.com/uploads/images/2013/12/CTUT1.3.png" title="C# Tutorial : To run C# programme using Notepad"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;here is the complete explanation of the C# code&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;csc :&lt;/strong&gt; csc stands for &lt;strong&gt;C&lt;/strong&gt; &lt;strong&gt;S&lt;/strong&gt;harp &lt;strong&gt;C&lt;/strong&gt;ompiler.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/t:exe :&lt;/strong&gt; It means the extension of your output, generally "exe" is used.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;\&amp;lt;Your output destination path&gt;\&amp;lt;Your file name&gt; :&lt;/strong&gt; Set the destination path and the file name where you want to save the file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;\&amp;lt;Your Source Code path&gt; :&lt;/strong&gt; Set the path where your source code is saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;and here is the output&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;img alt="C#TUT1.4" src="//thegeekyway.com/uploads/images/2013/12/CTUT1.4.png" title="C# Tutorial : To run C# programme using Notepad  &amp;quot; &amp;quot;C# Tutorial : To run C# programme using Notepad (Image 3)"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There can be various problems that you can arrive into, since C# is a case sensitive language, so did you typed the code exactly same as mentioned in the box, sometimes there can be permissions problem, sometimes there can be a problem in the compiler line.&lt;/p&gt;
&lt;p&gt;That's it for now folks ! I hope you enjoyed the article on compiling C# Programmes using Notepad and command line. If any problem arises in the compilation or any sort of error comes during compilation, you can post it as a comment below and TheGeekyWay team will try to solve it ASAP.&lt;/p&gt;
&lt;h2&gt;You can click the following social icons and share this article with your friends.&lt;/h2&gt;
&lt;hr&gt;</content><category term="C#"></category><category term="programming"></category></entry><entry><title>How To Display Raspberry Pi On VGA Monitor/TV ?</title><link href="//thegeekyway.com/connect-raspberry-pi-vga-monitortv/" rel="alternate"></link><published>2013-12-04T23:43:00+05:30</published><updated>2013-12-04T23:43:00+05:30</updated><author><name>Abhishek_Rawal</name></author><id>tag:thegeekyway.com,2013-12-04:/connect-raspberry-pi-vga-monitortv/</id><summary type="html">&lt;p&gt;Raspberry Pi, A \$25 ARM GNU/Linux box comes with RCA &amp;amp; HDMI port. Connecting Raspberry Pi with HDMI supported TV/monitor is cake walk. But, unfortunately some of us still have monitors with only VGA connectors. Raspberry Pi didn't included VGA connectors keeping power consumption of the board in mind …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Raspberry Pi, A \$25 ARM GNU/Linux box comes with RCA &amp;amp; HDMI port. Connecting Raspberry Pi with HDMI supported TV/monitor is cake walk. But, unfortunately some of us still have monitors with only VGA connectors. Raspberry Pi didn't included VGA connectors keeping power consumption of the board in mind. Fortunately, there are plenty of converters available in the online stores which lets you convert HDMI(Digital) signal to VGA(Analog) signal.&lt;/p&gt;
&lt;p&gt;Following are the detailed steps which will help you to connect RPi with VGA monitors &amp;amp; display RPi on VGA monitors without any problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) HDMI to VGA Converter Adapter :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You have to purchase power free HDMI to VGA adapter. Here's the link of two HDMI\&amp;lt;-&gt;VGA adapters which have been tested by me that just works.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;i) &lt;a href="https://www.modmypi.com/pi-vew-raspberry-pi-hdmi-to-vga-converter"&gt;ModMyPi | PiView&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ii) &lt;a href="https://www.crazypi.com/RASPBERRY-PI-HDMI-TO-VGA"&gt;CrazyPi | PiEyes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that these adapters doesn't support audio from HDMI port, so external speakers are required to connect onboard. Since, I don't use RPi for entertainment purpose, I never cared much about audio signals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Editing Config.txt located in Raspberry Pi distro :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Make SDHC bootable by installing RPi distribution into it. After installing RPi distribution in SDHC, insert the SD in computer &amp;amp; open &lt;em&gt;config.txt&lt;/em&gt; which is located under /boot directory.There will be set of lines for the different functions. We have to edit config.txt file inorder to obtain picture on VGA monitor.&lt;/p&gt;
&lt;p&gt;Uncomment following four lines in config.txt by removing '#' located at start of the line. (check Images below)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;hdmi_force_hotplug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;hdmi_drive&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;hdmi_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;hdmi_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Image.png"&gt;&lt;img alt="Image" src="//thegeekyway.com/uploads/images/2013/12/Image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/Image2.png"&gt;&lt;img alt="Image2" src="//thegeekyway.com/uploads/images/2013/12/Image2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;hdmi_force_hotplug=1&lt;/strong&gt; pretends that HDMI device is always attached&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hdmi_drive=2&lt;/strong&gt; forces monitor to HDMI mode so that sound signals are carried from HDMI cables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hdmi_group&lt;/strong&gt; specifies whether monitor is DMT type (Computers) or CEA type (TV)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hdmi_mode&lt;/strong&gt; specifies the resolution of monitor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For hdmi_group value selection :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you're using output as Computer monitor then replace value '1' with '2', so the new config will be like :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;hdmi_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Select value 1 for TV, Select value 2 for monitor)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For hdmi_mode value selection :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now open &lt;a href="http://elinux.org/RPiconfig#Video_mode_options"&gt;eLinux RPi config&lt;/a&gt; scroll down, there in hdmi_mode two tables are given, select the correct resolution as per your monitor. (Table1 if you're using TV &amp;amp; Table2 if you're using Monitor)&lt;br&gt;
Since my monitor's resolution is 1366x768 px, hdmi_mode=39 fits me the best.So, the modified config.txt will be like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;hdmi_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, overall my uncommented lines will look something like :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;hdmi_force_hotplug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;hdmi_drive&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;hdmi_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;hdmi_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, save the edited config.txt&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) Connection of RPi with HDMI\&amp;lt;-&gt;VGA adapter.&lt;/strong&gt;&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/12/HDMI-VGA.jpg"&gt;&lt;img alt="HDMI-VGA" src="//thegeekyway.com/uploads/images/2013/12/HDMI-VGA.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Happy hacking.&lt;/p&gt;</content><category term="Raspberry Pi"></category></entry><entry><title>Privacy Policy</title><link href="//thegeekyway.com/privacy-policy/" rel="alternate"></link><published>2013-11-29T19:19:00+05:30</published><updated>2013-11-29T19:19:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2013-11-29:/privacy-policy/</id><summary type="html">&lt;p&gt;This Privacy Policy governs the manner in which TheGeekyWay collects, uses, maintains and discloses information collected from users (each, a "User") of the &lt;a href="http://www.TheGeekyWay.com"&gt;http://www.TheGeekyWay.com&lt;/a&gt; website ("Site"). This privacy policy applies to the Site and all products and services offered by TheGeekyWay.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Personal identification information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We may collect …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This Privacy Policy governs the manner in which TheGeekyWay collects, uses, maintains and discloses information collected from users (each, a "User") of the &lt;a href="http://www.TheGeekyWay.com"&gt;http://www.TheGeekyWay.com&lt;/a&gt; website ("Site"). This privacy policy applies to the Site and all products and services offered by TheGeekyWay.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Personal identification information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We may collect personal identification information from Users in a variety of ways, including, but not limited to, when Users visit our site, subscribe to the newsletter, and in connection with other activities, services, features or resources we make available on our Site. Users may be asked for, as appropriate, name, email address, mailing address. Users may, however, visit our Site anonymously. We will collect personal identification information from Users only if they voluntarily submit such information to us. Users can always refuse to supply personally identification information, except that it may prevent them from engaging in certain Site related activities.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Non-personal identification information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We may collect non-personal identification information about Users whenever they interact with our Site. Non-personal identification information may include the browser name, the type of computer and technical information about Users means of connection to our Site, such as the operating system and the Internet service providers utilized and other similar information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web browser cookies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Our Site may use "cookies" to enhance User experience. User's web browser places cookies on their hard drive for record-keeping purposes and sometimes to track information about them. User may choose to set their web browser to refuse cookies, or to alert you when cookies are being sent. If they do so, note that some parts of the Site may not function properly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How we use collected information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TheGeekyWay may collect and use Users personal information for the following purposes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;- To improve customer service&lt;/em&gt;&lt;br&gt;
   Information you provide helps us respond to your customer service requests and support needs more efficiently.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;- To personalize user experience&lt;/em&gt;&lt;br&gt;
   We may use information in the aggregate to understand how our Users as a group use the services and resources provided on our Site.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;- To improve our Site&lt;/em&gt;&lt;br&gt;
   We may use feedback you provide to improve our products and services.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;- To send periodic emails&lt;/em&gt;&lt;br&gt;
   We may use the email address to respond to their inquiries, questions, and/or other requests. If User decides to opt-in to our mailing list, they will receive emails that may include company news, updates, related product or service information, etc. If at any time the User would like to unsubscribe from receiving future emails, we include detailed unsubscribe instructions at the bottom of each email or User may contact us via our Site.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;How we protect your information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We adopt appropriate data collection, storage and processing practices and security measures to protect against unauthorized access, alteration, disclosure or destruction of your personal information, username, password, transaction information and data stored on our Site.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sharing your personal information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We do not sell, trade, or rent Users personal identification information to others. We may share generic aggregated demographic information not linked to any personal identification information regarding visitors and users with our business partners, trusted affiliates and advertisers for the purposes outlined above.We may use third party service providers to help us operate our business and the Site or administer activities on our behalf, such as sending out newsletters or surveys. We may share your information with these third parties for those limited purposes provided that you have given us your permission.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Third party websites&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Users may find advertising or other content on our Site that link to the sites and services of our partners, suppliers, advertisers, sponsors, licensors and other third parties. We do not control the content or links that appear on these sites and are not responsible for the practices employed by websites linked to or from our Site. In addition, these sites or services, including their content and links, may be constantly changing. These sites and services may have their own privacy policies and customer service policies. Browsing and interaction on any other website, including websites which have a link to our Site, is subject to that website's own terms and policies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Changes to this privacy policy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TheGeekyWay has the discretion to update this privacy policy at any time. When we do, we will revise the updated date at the bottom of this page. We encourage Users to frequently check this page for any changes to stay informed about how we are helping to protect the personal information we collect. You acknowledge and agree that it is your responsibility to review this privacy policy periodically and become aware of modifications.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your acceptance of these terms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By using this Site, you signify your acceptance of this policy. If you do not agree to this policy, please do not use our Site. Your continued use of the Site following the posting of changes to this policy will be deemed your acceptance of those changes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contacting us&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have any questions about this Privacy Policy, the practices of this site, or your dealings with this site, please contact us at:&lt;br&gt;
&lt;a href="http://www.TheGeekyWay.com"&gt;TheGeekyWay&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.TheGeekyWay.com"&gt;http://www.TheGeekyWay.com&lt;/a&gt;&lt;br&gt;
admin\@thegeekyway.com&lt;/p&gt;
&lt;p&gt;This document was last updated on November 29, 2013&lt;/p&gt;</content></entry><entry><title>Getting Started With C language</title><link href="//thegeekyway.com/getting-started-c-language/" rel="alternate"></link><published>2013-11-19T13:26:00+05:30</published><updated>2013-11-19T13:26:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2013-11-19:/getting-started-c-language/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Introduction to C language&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C language is a middle level language developed by Dennis Ritchie in 1969 and the most secure OS "UNIX" is also coded in C language. It has just turned the world of Coding giving new level to programming, and introducing us to what is called "Structured …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Introduction to C language&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C language is a middle level language developed by Dennis Ritchie in 1969 and the most secure OS "UNIX" is also coded in C language. It has just turned the world of Coding giving new level to programming, and introducing us to what is called "Structured Programming".&lt;/p&gt;
&lt;p&gt;It is very important to note here that C is a Case Sensitive language, what this means is, TgW , tGw, TGw are all different. Don't worry if it's sound confusing, you'll be able to understand it better once we begin to learn about Variables.&lt;/p&gt;
&lt;p&gt;Wait! before we start, the question arises :-&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why learn C language?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, learning C language would improve your logical skills, and many programming languages are directly or indirectly derived from C. This means, if you learn C language, you can learn other programming languages like C++, Java, JavaScript, Python, PHP, Perl and many others, much faster and it would be simple for you.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;Pre Requisites for this and the coming Tutorials :-&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To compile the C language programs, you need something called compiler. It doesn't matter if you're using Linux, Windows, or Mac, you'll surely get a C compiler. If you're Windows user, get the best compiler from the start ie gcc compiler. I wouldn't recommend any other like Turbo C etc. they are not good when compared to gcc. Download gcc compiler from here :-&lt;br&gt;
http://gcc.gnu.org/&lt;br&gt;
If you're on Linux you'll probably already have gcc compiler installed. To check if you have gcc compiler already installed please type the following command in the terminal&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ g++ -v
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you've gcc installed, you'll get something like this, as in my terminal window.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;p&gt;&lt;a href="//thegeekyway.com/uploads/images/2013/11/C_Tut1.1.png" title="checking for gcc compiler in linux"&gt;&lt;img alt="checking for gcc compiler in linux" src="//thegeekyway.com/uploads/images/2013/11/C_Tut1.1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Much of theory, isn't it? Ok, let's get started with some code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First C Program&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
{
&lt;span class="nv"&gt;printf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Hello World&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just compile it in your gcc compiler and you'll get Hello World printed in the output console.&lt;/p&gt;
&lt;p&gt;If you need help in compilation and execution, wait for one more tutorial.&lt;/p&gt;
&lt;p&gt;Now, we'll just break down each and every part of the program and analyse it.&lt;br&gt;
``&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;stdio&lt;/span&gt;.&lt;span class="nv"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;``In this command, we ask the compiler to include a file (known as header file) which contains some pre defined fuctions which are needed to run the program.&lt;br&gt;
We, request to add file stdio which is Standard Input/Output console file, as we need to display the print on the output console.&lt;br&gt;
"#" (hash/pound) symbol here represents the pre-processor directive ie command started with a # sign goes to the pre-processor, means these statements are carried out first, before the program goes for compilation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a function in programming language, they are just meant to divide the program into modules. The main function of any program is of uttermost importance, as the program execution starts from main function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is also a function, it is the standard output function defined under stdio header file. Whatever we give in the paranthesis between the quotes is printed on the screen.&lt;/p&gt;
&lt;p&gt;Note, that we have used int before main function , this means that this function would return a value of int type, and that's the reason we have given return 0 at the end.&lt;/p&gt;
&lt;p&gt;Also note, that each statement in C would terminate with a semicolon. If you forget to put a semicolon, compiler would report an error.&lt;/p&gt;
&lt;p&gt;You can now continue to &lt;a href="http://www.thegeekyway.com/variables-in-c/" title="Learn about variables in C"&gt;Learn about variables in C&lt;/a&gt;&lt;/p&gt;</content><category term="C language"></category><category term="Introduction"></category><category term="Learn C"></category></entry><entry><title>About Us</title><link href="//thegeekyway.com/about-us/" rel="alternate"></link><published>2013-11-16T05:48:00+05:30</published><updated>2013-11-16T05:48:00+05:30</updated><author><name>sanyam_khurana</name></author><id>tag:thegeekyway.com,2013-11-16:/about-us/</id><summary type="html">&lt;p&gt;Welcome to the About Us page, finally you want to know us, and it matters a lot to us. We are a team of Tech Enthusiasts, Coders and Open Source lovers.&lt;/p&gt;
&lt;p&gt;This blog is an effort to bring people closer to the world of Technology and make them comfortable with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome to the About Us page, finally you want to know us, and it matters a lot to us. We are a team of Tech Enthusiasts, Coders and Open Source lovers.&lt;/p&gt;
&lt;p&gt;This blog is an effort to bring people closer to the world of Technology and make them comfortable with its various aspects.&lt;/p&gt;
&lt;h5&gt;Here are our current Authors :&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/author/anoop/" title="View all post by Anoop"&gt;&lt;strong&gt;Anoop Kumar&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A java professional - have keen interest in open source programming. Likes to share knowledge about java, jQuery and linux stuffs. &lt;a href="https://plus.google.com/+AnoopKumar" title="Anoop Kumar on Google+"&gt;Google+&lt;/a&gt;, &lt;a href="https://www.facebook.com/ianoopkumar" title="Anoop Kumar on Facebook"&gt;Facebook&lt;/a&gt;, &lt;a href="https://twitter.com/theanoopk" title="Anoop Kumar on Twitter"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/author/Peeyush_gupta/"&gt;&lt;strong&gt;Peeyush Gupta&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Peeyush is an open-source enthusiast who is in love with Python! He is a virtualization professional and can be found at &lt;a href="https://www.facebook.com/guptapeeyush"&gt;Facebook&lt;/a&gt;, &lt;a href="https://plus.google.com/u/0/+PeeyushGupta91/posts"&gt;Google+&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/author/Sanyam_Khurana/" title="View all posts by Sanyam Khurana"&gt;&lt;strong&gt;Sanyam Khurana&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sanyam is an Engineering Student &amp;amp; Programmer who loves to blog about various stuff related to Computers. He likes to spend his time learning new stuff and teaching others too. Just in love with Python and currently on a mission to explore Open Source World. You can find him on, &lt;a href="https://www.plus.google.com/+SanyamKhurana"&gt;Google+&lt;/a&gt;, &lt;a href="https://www.fb.com/sanyam.khurana96"&gt;Facebook&lt;/a&gt; and &lt;a href="https://twitter.com/ErSanyamKhurana"&gt;Twitter&lt;/a&gt;.
He's always curious to learn new things about programming, and other computer related stuff.&lt;/p&gt;
&lt;h5&gt;Our Ex-Contributors :&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/author/abhishek_rawal/" title="View all posts by Abhishek Rawal"&gt;&lt;strong&gt;Abhishek Rawal&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An Opensource evangelist,Electronics Engineering student &amp;amp; an aspiring Embedded Systems Engineer who likes tweaking open hardware like Arduino &amp;amp; Raspberry Pi, passionate about processors, likes writing articles on Opensource &amp;amp; Linux related software and hardware, knows little bit of C &amp;amp; bash scripting &amp;amp; dual-boots openSUSE and Ubuntu on his desktop. &lt;a href="https://plus.google.com/+AbhishekRawal" title="Add him in circle"&gt;Google+&lt;/a&gt; ,&lt;a href="https://twitter.com/OpenSourceMoFo" title="Follow him on Twitter"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;
&lt;a href="http://www.thegeekyway.com/author/Deep_Singh/" title="View all post by Deep"&gt;Deep Singh&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A tech enthusiastic, prefinal year student of GGSIPU university, having keen interest in dot.net and database administration. You can find me on &lt;a href="https://plus.google.com/112233042255615343235/posts"&gt;Google+&lt;/a&gt; , &lt;a href="https://www.facebook.com/DPSC.2007"&gt;Facebook&lt;/a&gt; and &lt;a href="https://twitter.com/DPSC_"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekyway.com/author/gagan93/" title="View all posts by Gagandeep Singh"&gt;&lt;strong&gt;Gagandeep Singh&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pre-final year student of GTBIT, GGSIPU, New Delhi. Interested in Programming languages like C, C++,Java and now started with Android. You can find him on &lt;a href="https://plus.google.com/115019687639113613369/posts"&gt;Google+&lt;/a&gt; and &lt;a href="https://www.fb.com/gagan93"&gt;Facebook&lt;/a&gt;&lt;/p&gt;</content></entry></feed>